/**********************************************************************************************************************
This file is part of the Control Toolbox (https://github.com/ethz-adrl/control-toolbox), copyright by ETH Zurich.
Licensed under the BSD-2 license (see LICENSE file in main directory)
**********************************************************************************************************************/

// clang-format off

#include "TalosForwardKinJacForward.h"

namespace ct {
namespace models {
namespace Talos {


TalosForwardKinJacForward::JAC_TYPE TalosForwardKinJacForward::jacobian(const Eigen::VectorXd& x_in)
{
    double* jac = jac_.data();

        v_[0] = 0.5 * x_in[0];
    v_[1] = cos(v_[0]);
    v_[2] = 0.5 * x_in[1];
    v_[3] = cos(v_[2]);
    v_[4] = v_[1] * v_[3];
    v_[5] = 0.5 * x_in[2];
    v_[6] = sin(v_[5]);
    v_[7] = sin(v_[0]);
    v_[8] = sin(v_[2]);
    v_[9] = v_[7] * v_[8];
    v_[10] = cos(v_[5]);
    v_[11] = v_[4] * v_[6] + v_[9] * v_[10];
    v_[12] = 2. * v_[11];
    v_[13] = 0.5 * cos(v_[0]);
    v_[14] = v_[13] * v_[3];
    v_[0] = -0.5 * sin(v_[0]);
    v_[15] = v_[0] * v_[8];
    v_[16] = v_[14] * v_[10] + v_[15] * v_[6];
    v_[0] = v_[0] * v_[3];
    v_[13] = v_[13] * v_[8];
    v_[17] = v_[0] * v_[6] + v_[13] * v_[10];
    v_[18] = 2. * v_[17];
    v_[3] = v_[7] * v_[3];
    v_[8] = v_[1] * v_[8];
    v_[19] = v_[3] * v_[10] + v_[8] * v_[6];
    v_[20] = v_[12] * v_[16] + v_[18] * v_[19];
    v_[21] = v_[8] * v_[10] - v_[3] * v_[6];
    v_[22] = 2. * v_[21];
    v_[13] = v_[0] * v_[10] - v_[13] * v_[6];
    v_[15] = v_[15] * v_[10] - v_[14] * v_[6];
    v_[14] = 2. * v_[15];
    v_[0] = v_[4] * v_[10] - v_[9] * v_[6];
    v_[23] = v_[22] * v_[13] + v_[14] * v_[0];
    v_[24] = cos(x_in[7]);
    v_[25] = 0.325 * v_[24];
    v_[26] = sin(x_in[8]);
    v_[27] = v_[25] * v_[26];
    v_[28] = sin(x_in[9]);
    v_[29] = cos(x_in[8]);
    v_[30] = v_[25] * v_[29];
    v_[31] = cos(x_in[9]);
    v_[32] = 0.38 * v_[24];
    v_[33] = -0.27105 + v_[27] * v_[28] - v_[30] * v_[31] - v_[32] * v_[29];
    v_[34] = v_[22] * v_[16] + v_[14] * v_[19];
    v_[35] = v_[12] * v_[13] + v_[18] * v_[0];
    v_[36] = cos(x_in[6]);
    v_[37] = 0.325 * v_[36];
    v_[38] = sin(x_in[7]);
    v_[39] = v_[37] * v_[38];
    v_[40] = sin(x_in[6]);
    v_[41] = 0.325 * v_[40];
    v_[42] = v_[39] * v_[29] - v_[41] * v_[26];
    v_[43] = -0.325 * v_[36];
    v_[44] = v_[43] * v_[38];
    v_[45] = 0.325 * v_[40];
    v_[46] = v_[44] * v_[26] - v_[45] * v_[29];
    v_[47] = 0.38 * v_[36];
    v_[48] = v_[47] * v_[38];
    v_[49] = 0.38 * v_[40];
    v_[50] = 0.085 + v_[42] * v_[31] + v_[46] * v_[28] + v_[48] * v_[29] - v_[49] * v_[26];
    v_[17] = v_[12] * v_[17] + v_[18] * v_[11];
    v_[14] = v_[22] * v_[15] + v_[14] * v_[21];
    v_[51] = -0.325 * v_[36];
    v_[52] = 0.325 * v_[40];
    v_[53] = v_[52] * v_[38];
    v_[54] = v_[51] * v_[26] - v_[53] * v_[29];
    v_[55] = 0.325 * v_[40];
    v_[56] = v_[55] * v_[38];
    v_[57] = 0.325 * v_[36];
    v_[58] = v_[56] * v_[26] - v_[57] * v_[29];
    v_[59] = 0.38 * v_[36];
    v_[60] = 0.38 * v_[40];
    v_[61] = v_[60] * v_[38];
    v_[62] = -0.02 + v_[54] * v_[31] + v_[58] * v_[28] - v_[59] * v_[26] - v_[61] * v_[29];
    jac[0] = (v_[20] + v_[23]) * v_[33] + (v_[34] - v_[35]) * v_[50] + (0 - v_[17] - v_[14]) * v_[62];
    v_[15] = v_[12] * v_[15] + v_[18] * v_[21];
    v_[18] = 2. * v_[19];
    v_[63] = 2. * v_[16];
    v_[13] = v_[18] * v_[13] + v_[63] * v_[0];
    v_[63] = v_[18] * v_[16] + v_[63] * v_[19];
    jac[1] = (v_[15] - v_[13]) * v_[33] + (0 - v_[17] - v_[63]) * v_[50] + (v_[34] + v_[35]) * v_[62];
    jac[2] = (0 - v_[14] - v_[63]) * v_[33] + (v_[15] + v_[13]) * v_[50] + (v_[20] - v_[23]) * v_[62];
    v_[63] = 0.5 * x_in[0];
    v_[13] = cos(v_[63]);
    v_[15] = 0.5 * x_in[1];
    v_[14] = cos(v_[15]);
    v_[23] = v_[13] * v_[14];
    v_[20] = 0.5 * x_in[2];
    v_[17] = sin(v_[20]);
    v_[35] = sin(v_[63]);
    v_[34] = sin(v_[15]);
    v_[16] = v_[35] * v_[34];
    v_[64] = cos(v_[20]);
    v_[65] = v_[23] * v_[17] + v_[16] * v_[64];
    v_[66] = 2. * v_[65];
    v_[67] = 0.5 * cos(v_[63]);
    v_[68] = v_[67] * v_[14];
    v_[63] = -0.5 * sin(v_[63]);
    v_[69] = v_[63] * v_[34];
    v_[70] = v_[68] * v_[64] + v_[69] * v_[17];
    v_[63] = v_[63] * v_[14];
    v_[67] = v_[67] * v_[34];
    v_[71] = v_[63] * v_[17] + v_[67] * v_[64];
    v_[72] = 2. * v_[71];
    v_[14] = v_[35] * v_[14];
    v_[34] = v_[13] * v_[34];
    v_[73] = v_[14] * v_[64] + v_[34] * v_[17];
    v_[74] = v_[66] * v_[70] + v_[72] * v_[73];
    v_[75] = v_[34] * v_[64] - v_[14] * v_[17];
    v_[76] = 2. * v_[75];
    v_[67] = v_[63] * v_[64] - v_[67] * v_[17];
    v_[69] = v_[69] * v_[64] - v_[68] * v_[17];
    v_[68] = 2. * v_[69];
    v_[63] = v_[23] * v_[64] - v_[16] * v_[17];
    v_[77] = v_[76] * v_[67] + v_[68] * v_[63];
    v_[78] = 0.325 * v_[24];
    v_[79] = v_[78] * v_[26];
    v_[80] = v_[78] * v_[29];
    v_[81] = 0.38 * v_[24];
    v_[82] = v_[79] * v_[31] + v_[80] * v_[28] + v_[81] * v_[26];
    v_[83] = 0.325 * v_[38];
    v_[84] = v_[83] * v_[29];
    v_[85] = -0.325 * v_[38];
    v_[86] = v_[85] * v_[26];
    v_[87] = 0.38 * v_[38];
    v_[88] = v_[84] * v_[31] + v_[86] * v_[28] + v_[87] * v_[29];
    v_[89] = 0.325 * v_[24];
    v_[90] = v_[89] * v_[29];
    v_[91] = v_[89] * v_[26];
    v_[92] = v_[90] * v_[28] + v_[91] * v_[31];
    v_[93] = 0.325 * v_[36];
    v_[94] = v_[93] * v_[38];
    v_[95] = 0.325 * v_[40];
    v_[96] = v_[94] * v_[29] - v_[95] * v_[26];
    v_[97] = -0.325 * v_[36];
    v_[98] = v_[97] * v_[38];
    v_[99] = 0.325 * v_[40];
    v_[100] = v_[98] * v_[26] - v_[99] * v_[29];
    v_[101] = 0.38 * v_[36];
    v_[102] = v_[101] * v_[38];
    v_[103] = 0.38 * v_[40];
    v_[104] = 0.085 + v_[96] * v_[31] + v_[100] * v_[28] + v_[102] * v_[29] - v_[103] * v_[26];
    v_[105] = -0.325 * v_[36];
    v_[106] = 0.325 * v_[40];
    v_[107] = v_[106] * v_[38];
    v_[108] = v_[105] * v_[26] - v_[107] * v_[29];
    v_[109] = 0.325 * v_[36];
    v_[110] = v_[107] * v_[26] - v_[109] * v_[29];
    v_[111] = 0.38 * v_[36];
    v_[112] = 0.38 * v_[40];
    v_[113] = v_[112] * v_[38];
    v_[114] = -0.02 + v_[108] * v_[31] + v_[110] * v_[28] - v_[111] * v_[26] - v_[113] * v_[29];
    v_[115] = v_[82] * x_in[26] + v_[88] * x_in[25] + v_[92] * x_in[27] + x_in[23] + x_in[18] * v_[104] - x_in[19] * v_[114];
    v_[116] = v_[76] * v_[70] + v_[68] * v_[73];
    v_[117] = v_[66] * v_[67] + v_[72] * v_[63];
    v_[118] = -0.325 * v_[36];
    v_[119] = v_[118] * v_[38];
    v_[120] = 0.325 * v_[40];
    v_[121] = v_[119] * v_[26] - v_[120] * v_[29];
    v_[122] = 0.325 * v_[36];
    v_[123] = v_[122] * v_[38];
    v_[124] = v_[120] * v_[26] - v_[123] * v_[29];
    v_[125] = 0.38 * v_[36];
    v_[126] = v_[125] * v_[38];
    v_[127] = 0.38 * v_[40];
    v_[128] = v_[121] * v_[31] + v_[124] * v_[28] - v_[126] * v_[26] - v_[127] * v_[29];
    v_[129] = 0.325 * v_[36];
    v_[130] = v_[129] * v_[24];
    v_[131] = v_[130] * v_[29];
    v_[132] = -0.325 * v_[36];
    v_[133] = v_[132] * v_[24];
    v_[134] = v_[133] * v_[26];
    v_[135] = 0.38 * v_[36];
    v_[136] = v_[135] * v_[24];
    v_[137] = v_[131] * v_[31] + v_[134] * v_[28] + v_[136] * v_[29];
    v_[138] = -0.325 * v_[36];
    v_[139] = 0.325 * v_[40];
    v_[140] = v_[139] * v_[38];
    v_[141] = v_[138] * v_[26] - v_[140] * v_[29];
    v_[142] = 0.325 * v_[36];
    v_[143] = v_[140] * v_[26] - v_[142] * v_[29];
    v_[144] = 0.38 * v_[36];
    v_[145] = 0.38 * v_[40];
    v_[146] = v_[145] * v_[38];
    v_[147] = v_[141] * v_[31] + v_[143] * v_[28] - v_[144] * v_[26] - v_[146] * v_[29];
    v_[148] = 0.325 * v_[40];
    v_[149] = 0.325 * v_[36];
    v_[150] = v_[149] * v_[38];
    v_[151] = v_[148] * v_[26] - v_[150] * v_[29];
    v_[152] = -0.325 * v_[36];
    v_[153] = v_[152] * v_[38];
    v_[154] = 0.325 * v_[40];
    v_[155] = v_[153] * v_[26] - v_[154] * v_[29];
    v_[156] = v_[151] * v_[28] + v_[155] * v_[31];
    v_[157] = 0.325 * v_[24];
    v_[158] = v_[157] * v_[26];
    v_[159] = v_[157] * v_[29];
    v_[160] = 0.38 * v_[24];
    v_[161] = -0.27105 + v_[158] * v_[28] - v_[159] * v_[31] - v_[160] * v_[29];
    v_[162] = v_[128] * x_in[26] + v_[137] * x_in[25] + v_[147] * x_in[24] + v_[156] * x_in[27] + x_in[22] + x_in[20] * v_[114] - x_in[18] * v_[161];
    v_[71] = v_[66] * v_[71] + v_[72] * v_[65];
    v_[68] = v_[76] * v_[69] + v_[68] * v_[75];
    v_[163] = 0.325 * v_[40];
    v_[164] = v_[163] * v_[38];
    v_[165] = 0.325 * v_[36];
    v_[166] = v_[164] * v_[26] - v_[165] * v_[29];
    v_[167] = v_[165] * v_[26] + v_[164] * v_[29];
    v_[168] = 0.38 * v_[40];
    v_[169] = v_[168] * v_[38];
    v_[170] = 0.38 * v_[36];
    v_[171] = v_[166] * v_[31] + v_[167] * v_[28] + v_[169] * v_[26] - v_[170] * v_[29];
    v_[172] = 0.325 * v_[40];
    v_[173] = v_[172] * v_[24];
    v_[174] = v_[173] * v_[26];
    v_[175] = 0.325 * v_[40];
    v_[176] = v_[175] * v_[24];
    v_[177] = v_[176] * v_[29];
    v_[178] = 0.38 * v_[40];
    v_[179] = v_[178] * v_[24];
    v_[180] = v_[174] * v_[28] - v_[177] * v_[31] - v_[179] * v_[29];
    v_[181] = 0.325 * v_[40];
    v_[182] = 0.325 * v_[36];
    v_[183] = v_[182] * v_[38];
    v_[184] = v_[181] * v_[26] - v_[183] * v_[29];
    v_[185] = v_[183] * v_[26] + v_[181] * v_[29];
    v_[186] = 0.38 * v_[40];
    v_[187] = 0.38 * v_[36];
    v_[188] = v_[187] * v_[38];
    v_[189] = v_[184] * v_[31] + v_[185] * v_[28] + v_[186] * v_[26] - v_[188] * v_[29];
    v_[190] = 0.325 * v_[36];
    v_[191] = 0.325 * v_[40];
    v_[192] = v_[191] * v_[38];
    v_[193] = v_[190] * v_[26] + v_[192] * v_[29];
    v_[40] = 0.325 * v_[40];
    v_[194] = v_[40] * v_[38];
    v_[36] = 0.325 * v_[36];
    v_[195] = v_[194] * v_[26] - v_[36] * v_[29];
    v_[196] = v_[193] * v_[28] + v_[195] * v_[31];
    v_[197] = v_[171] * x_in[26] + v_[180] * x_in[25] + v_[189] * x_in[24] + v_[196] * x_in[27] + x_in[21] + x_in[19] * v_[161] - x_in[20] * v_[104];
    jac[3] = (v_[74] + v_[77]) * v_[115] + (v_[116] - v_[117]) * v_[162] + (0 - v_[71] - v_[68]) * v_[197];
    v_[69] = v_[66] * v_[69] + v_[72] * v_[75];
    v_[72] = 2. * v_[73];
    v_[198] = 2. * v_[70];
    v_[67] = v_[72] * v_[67] + v_[198] * v_[63];
    v_[198] = v_[72] * v_[70] + v_[198] * v_[73];
    jac[4] = (v_[69] - v_[67]) * v_[115] + (0 - v_[71] - v_[198]) * v_[162] + (v_[116] + v_[117]) * v_[197];
    jac[5] = (0 - v_[68] - v_[198]) * v_[115] + (v_[69] + v_[67]) * v_[162] + (v_[74] - v_[77]) * v_[197];
    v_[198] = 0.5 * x_in[0];
    v_[67] = cos(v_[198]);
    v_[69] = 0.5 * x_in[1];
    v_[68] = cos(v_[69]);
    v_[77] = v_[67] * v_[68];
    v_[74] = 0.5 * x_in[2];
    v_[71] = sin(v_[74]);
    v_[117] = sin(v_[198]);
    v_[116] = sin(v_[69]);
    v_[70] = v_[117] * v_[116];
    v_[199] = cos(v_[74]);
    v_[200] = v_[77] * v_[71] + v_[70] * v_[199];
    v_[201] = 2. * v_[200];
    v_[202] = 0.5 * cos(v_[198]);
    v_[203] = v_[202] * v_[68];
    v_[198] = -0.5 * sin(v_[198]);
    v_[204] = v_[198] * v_[116];
    v_[205] = v_[203] * v_[199] + v_[204] * v_[71];
    v_[198] = v_[198] * v_[68];
    v_[202] = v_[202] * v_[116];
    v_[206] = v_[198] * v_[71] + v_[202] * v_[199];
    v_[207] = 2. * v_[206];
    v_[68] = v_[117] * v_[68];
    v_[116] = v_[67] * v_[116];
    v_[208] = v_[68] * v_[199] + v_[116] * v_[71];
    v_[209] = v_[201] * v_[205] + v_[207] * v_[208];
    v_[210] = v_[116] * v_[199] - v_[68] * v_[71];
    v_[211] = 2. * v_[210];
    v_[202] = v_[198] * v_[199] - v_[202] * v_[71];
    v_[204] = v_[204] * v_[199] - v_[203] * v_[71];
    v_[203] = 2. * v_[204];
    v_[198] = v_[77] * v_[199] - v_[70] * v_[71];
    v_[212] = v_[211] * v_[202] + v_[203] * v_[198];
    v_[213] = cos(x_in[13]);
    v_[214] = 0.325 * v_[213];
    v_[215] = sin(x_in[14]);
    v_[216] = v_[214] * v_[215];
    v_[217] = sin(x_in[15]);
    v_[218] = cos(x_in[14]);
    v_[219] = v_[214] * v_[218];
    v_[220] = cos(x_in[15]);
    v_[221] = 0.38 * v_[213];
    v_[222] = -0.27105 + v_[216] * v_[217] - v_[219] * v_[220] - v_[221] * v_[218];
    v_[223] = v_[211] * v_[205] + v_[203] * v_[208];
    v_[224] = v_[201] * v_[202] + v_[207] * v_[198];
    v_[225] = cos(x_in[12]);
    v_[226] = 0.325 * v_[225];
    v_[227] = sin(x_in[13]);
    v_[228] = v_[226] * v_[227];
    v_[229] = sin(x_in[12]);
    v_[230] = 0.325 * v_[229];
    v_[231] = v_[228] * v_[218] - v_[230] * v_[215];
    v_[232] = -0.325 * v_[225];
    v_[233] = v_[232] * v_[227];
    v_[234] = 0.325 * v_[229];
    v_[235] = v_[233] * v_[215] - v_[234] * v_[218];
    v_[236] = 0.38 * v_[225];
    v_[237] = v_[236] * v_[227];
    v_[238] = 0.38 * v_[229];
    v_[239] = -0.085 + v_[231] * v_[220] + v_[235] * v_[217] + v_[237] * v_[218] - v_[238] * v_[215];
    v_[206] = v_[201] * v_[206] + v_[207] * v_[200];
    v_[203] = v_[211] * v_[204] + v_[203] * v_[210];
    v_[240] = -0.325 * v_[225];
    v_[241] = 0.325 * v_[229];
    v_[242] = v_[241] * v_[227];
    v_[243] = v_[240] * v_[215] - v_[242] * v_[218];
    v_[244] = 0.325 * v_[225];
    v_[245] = v_[242] * v_[215] - v_[244] * v_[218];
    v_[246] = 0.38 * v_[225];
    v_[247] = 0.38 * v_[229];
    v_[248] = v_[247] * v_[227];
    v_[249] = -0.02 + v_[243] * v_[220] + v_[245] * v_[217] - v_[246] * v_[215] - v_[248] * v_[218];
    jac[6] = (v_[209] + v_[212]) * v_[222] + (v_[223] - v_[224]) * v_[239] + (0 - v_[206] - v_[203]) * v_[249];
    v_[204] = v_[201] * v_[204] + v_[207] * v_[210];
    v_[207] = 2. * v_[208];
    v_[250] = 2. * v_[205];
    v_[202] = v_[207] * v_[202] + v_[250] * v_[198];
    v_[250] = v_[207] * v_[205] + v_[250] * v_[208];
    jac[7] = (v_[204] - v_[202]) * v_[222] + (0 - v_[206] - v_[250]) * v_[239] + (v_[223] + v_[224]) * v_[249];
    jac[8] = (0 - v_[203] - v_[250]) * v_[222] + (v_[204] + v_[202]) * v_[239] + (v_[209] - v_[212]) * v_[249];
    v_[250] = 0.5 * x_in[0];
    v_[202] = cos(v_[250]);
    v_[204] = 0.5 * x_in[1];
    v_[203] = cos(v_[204]);
    v_[212] = v_[202] * v_[203];
    v_[209] = 0.5 * x_in[2];
    v_[206] = sin(v_[209]);
    v_[224] = sin(v_[250]);
    v_[223] = sin(v_[204]);
    v_[205] = v_[224] * v_[223];
    v_[251] = cos(v_[209]);
    v_[252] = v_[212] * v_[206] + v_[205] * v_[251];
    v_[253] = 2. * v_[252];
    v_[254] = 0.5 * cos(v_[250]);
    v_[255] = v_[254] * v_[203];
    v_[250] = -0.5 * sin(v_[250]);
    v_[256] = v_[250] * v_[223];
    v_[257] = v_[255] * v_[251] + v_[256] * v_[206];
    v_[250] = v_[250] * v_[203];
    v_[254] = v_[254] * v_[223];
    v_[258] = v_[250] * v_[206] + v_[254] * v_[251];
    v_[259] = 2. * v_[258];
    v_[203] = v_[224] * v_[203];
    v_[223] = v_[202] * v_[223];
    v_[260] = v_[203] * v_[251] + v_[223] * v_[206];
    v_[261] = v_[253] * v_[257] + v_[259] * v_[260];
    v_[262] = v_[223] * v_[251] - v_[203] * v_[206];
    v_[263] = 2. * v_[262];
    v_[254] = v_[250] * v_[251] - v_[254] * v_[206];
    v_[256] = v_[256] * v_[251] - v_[255] * v_[206];
    v_[255] = 2. * v_[256];
    v_[250] = v_[212] * v_[251] - v_[205] * v_[206];
    v_[264] = v_[263] * v_[254] + v_[255] * v_[250];
    v_[265] = 0.325 * v_[213];
    v_[266] = v_[265] * v_[215];
    v_[267] = v_[265] * v_[218];
    v_[268] = 0.38 * v_[213];
    v_[269] = v_[266] * v_[220] + v_[267] * v_[217] + v_[268] * v_[215];
    v_[270] = 0.325 * v_[227];
    v_[271] = v_[270] * v_[218];
    v_[272] = -0.325 * v_[227];
    v_[273] = v_[272] * v_[215];
    v_[274] = 0.38 * v_[227];
    v_[275] = v_[271] * v_[220] + v_[273] * v_[217] + v_[274] * v_[218];
    v_[276] = 0.325 * v_[213];
    v_[277] = v_[276] * v_[218];
    v_[278] = v_[276] * v_[215];
    v_[279] = v_[277] * v_[217] + v_[278] * v_[220];
    v_[280] = 0.325 * v_[225];
    v_[281] = v_[280] * v_[227];
    v_[282] = 0.325 * v_[229];
    v_[283] = v_[281] * v_[218] - v_[282] * v_[215];
    v_[284] = -0.325 * v_[225];
    v_[285] = v_[284] * v_[227];
    v_[286] = 0.325 * v_[229];
    v_[287] = v_[285] * v_[215] - v_[286] * v_[218];
    v_[288] = 0.38 * v_[225];
    v_[289] = v_[288] * v_[227];
    v_[290] = 0.38 * v_[229];
    v_[291] = -0.085 + v_[283] * v_[220] + v_[287] * v_[217] + v_[289] * v_[218] - v_[290] * v_[215];
    v_[292] = -0.325 * v_[225];
    v_[293] = 0.325 * v_[229];
    v_[294] = v_[293] * v_[227];
    v_[295] = v_[292] * v_[215] - v_[294] * v_[218];
    v_[296] = 0.325 * v_[225];
    v_[297] = v_[294] * v_[215] - v_[296] * v_[218];
    v_[298] = 0.38 * v_[225];
    v_[299] = 0.38 * v_[229];
    v_[300] = v_[299] * v_[227];
    v_[301] = -0.02 + v_[295] * v_[220] + v_[297] * v_[217] - v_[298] * v_[215] - v_[300] * v_[218];
    v_[302] = v_[269] * x_in[32] + v_[275] * x_in[31] + v_[279] * x_in[33] + x_in[23] + x_in[18] * v_[291] - x_in[19] * v_[301];
    v_[303] = v_[263] * v_[257] + v_[255] * v_[260];
    v_[304] = v_[253] * v_[254] + v_[259] * v_[250];
    v_[305] = -0.325 * v_[225];
    v_[306] = v_[305] * v_[227];
    v_[307] = 0.325 * v_[229];
    v_[308] = v_[306] * v_[215] - v_[307] * v_[218];
    v_[309] = 0.325 * v_[225];
    v_[310] = v_[309] * v_[227];
    v_[311] = v_[307] * v_[215] - v_[310] * v_[218];
    v_[312] = 0.38 * v_[225];
    v_[313] = v_[312] * v_[227];
    v_[314] = 0.38 * v_[229];
    v_[315] = v_[308] * v_[220] + v_[311] * v_[217] - v_[313] * v_[215] - v_[314] * v_[218];
    v_[316] = 0.325 * v_[225];
    v_[317] = v_[316] * v_[213];
    v_[318] = v_[317] * v_[218];
    v_[319] = -0.325 * v_[225];
    v_[320] = v_[319] * v_[213];
    v_[321] = v_[320] * v_[215];
    v_[322] = 0.38 * v_[225];
    v_[323] = v_[322] * v_[213];
    v_[324] = v_[318] * v_[220] + v_[321] * v_[217] + v_[323] * v_[218];
    v_[325] = -0.325 * v_[225];
    v_[326] = 0.325 * v_[229];
    v_[327] = v_[326] * v_[227];
    v_[328] = v_[325] * v_[215] - v_[327] * v_[218];
    v_[329] = 0.325 * v_[225];
    v_[330] = v_[327] * v_[215] - v_[329] * v_[218];
    v_[331] = 0.38 * v_[225];
    v_[332] = 0.38 * v_[229];
    v_[333] = v_[332] * v_[227];
    v_[334] = v_[328] * v_[220] + v_[330] * v_[217] - v_[331] * v_[215] - v_[333] * v_[218];
    v_[335] = 0.325 * v_[229];
    v_[336] = 0.325 * v_[225];
    v_[337] = v_[336] * v_[227];
    v_[338] = v_[335] * v_[215] - v_[337] * v_[218];
    v_[339] = -0.325 * v_[225];
    v_[340] = v_[339] * v_[227];
    v_[341] = 0.325 * v_[229];
    v_[342] = v_[340] * v_[215] - v_[341] * v_[218];
    v_[343] = v_[338] * v_[217] + v_[342] * v_[220];
    v_[344] = 0.325 * v_[213];
    v_[345] = v_[344] * v_[215];
    v_[346] = v_[344] * v_[218];
    v_[347] = 0.38 * v_[213];
    v_[348] = -0.27105 + v_[345] * v_[217] - v_[346] * v_[220] - v_[347] * v_[218];
    v_[349] = v_[315] * x_in[32] + v_[324] * x_in[31] + v_[334] * x_in[30] + v_[343] * x_in[33] + x_in[22] + x_in[20] * v_[301] - x_in[18] * v_[348];
    v_[258] = v_[253] * v_[258] + v_[259] * v_[252];
    v_[255] = v_[263] * v_[256] + v_[255] * v_[262];
    v_[350] = 0.325 * v_[229];
    v_[351] = v_[350] * v_[227];
    v_[352] = 0.325 * v_[225];
    v_[353] = v_[351] * v_[215] - v_[352] * v_[218];
    v_[354] = v_[352] * v_[215] + v_[351] * v_[218];
    v_[355] = 0.38 * v_[229];
    v_[356] = v_[355] * v_[227];
    v_[357] = 0.38 * v_[225];
    v_[358] = v_[353] * v_[220] + v_[354] * v_[217] + v_[356] * v_[215] - v_[357] * v_[218];
    v_[359] = 0.325 * v_[229];
    v_[360] = v_[359] * v_[213];
    v_[361] = v_[360] * v_[215];
    v_[362] = v_[350] * v_[213];
    v_[363] = v_[362] * v_[218];
    v_[364] = 0.38 * v_[229];
    v_[365] = v_[364] * v_[213];
    v_[366] = v_[361] * v_[217] - v_[363] * v_[220] - v_[365] * v_[218];
    v_[367] = 0.325 * v_[229];
    v_[368] = 0.325 * v_[225];
    v_[369] = v_[368] * v_[227];
    v_[370] = v_[367] * v_[215] - v_[369] * v_[218];
    v_[371] = v_[369] * v_[215] + v_[367] * v_[218];
    v_[372] = 0.38 * v_[229];
    v_[373] = 0.38 * v_[225];
    v_[374] = v_[373] * v_[227];
    v_[375] = v_[370] * v_[220] + v_[371] * v_[217] + v_[372] * v_[215] - v_[374] * v_[218];
    v_[376] = 0.325 * v_[225];
    v_[229] = 0.325 * v_[229];
    v_[377] = v_[229] * v_[227];
    v_[378] = v_[376] * v_[215] + v_[377] * v_[218];
    v_[379] = v_[367] * v_[227];
    v_[225] = 0.325 * v_[225];
    v_[380] = v_[379] * v_[215] - v_[225] * v_[218];
    v_[381] = v_[378] * v_[217] + v_[380] * v_[220];
    v_[382] = v_[358] * x_in[32] + v_[366] * x_in[31] + v_[375] * x_in[30] + v_[381] * x_in[33] + x_in[21] + x_in[19] * v_[348] - x_in[20] * v_[291];
    jac[9] = (v_[261] + v_[264]) * v_[302] + (v_[303] - v_[304]) * v_[349] + (0 - v_[258] - v_[255]) * v_[382];
    v_[256] = v_[253] * v_[256] + v_[259] * v_[262];
    v_[259] = 2. * v_[260];
    v_[383] = 2. * v_[257];
    v_[254] = v_[259] * v_[254] + v_[383] * v_[250];
    v_[383] = v_[259] * v_[257] + v_[383] * v_[260];
    jac[10] = (v_[256] - v_[254]) * v_[302] + (0 - v_[258] - v_[383]) * v_[349] + (v_[303] + v_[304]) * v_[382];
    jac[11] = (0 - v_[255] - v_[383]) * v_[302] + (v_[256] + v_[254]) * v_[349] + (v_[261] - v_[264]) * v_[382];
    v_[383] = -0.5 * sin(v_[2]);
    v_[254] = v_[7] * v_[383];
    v_[2] = 0.5 * cos(v_[2]);
    v_[256] = v_[1] * v_[2];
    v_[255] = v_[254] * v_[10] + v_[256] * v_[6];
    v_[383] = v_[1] * v_[383];
    v_[2] = v_[7] * v_[2];
    v_[7] = v_[383] * v_[6] + v_[2] * v_[10];
    v_[1] = 2. * v_[7];
    v_[264] = v_[12] * v_[255] + v_[1] * v_[19];
    v_[2] = v_[383] * v_[10] - v_[2] * v_[6];
    v_[256] = v_[256] * v_[10] - v_[254] * v_[6];
    v_[254] = 2. * v_[256];
    v_[10] = v_[22] * v_[2] + v_[254] * v_[0];
    v_[6] = v_[22] * v_[255] + v_[254] * v_[19];
    v_[383] = v_[12] * v_[2] + v_[1] * v_[0];
    v_[7] = v_[12] * v_[7] + v_[1] * v_[11];
    v_[254] = v_[22] * v_[256] + v_[254] * v_[21];
    jac[12] = (v_[264] + v_[10]) * v_[33] + (v_[6] - v_[383]) * v_[50] + (0 - v_[7] - v_[254]) * v_[62];
    v_[256] = v_[12] * v_[256] + v_[1] * v_[21];
    v_[1] = 2. * v_[255];
    v_[2] = v_[18] * v_[2] + v_[1] * v_[0];
    v_[1] = v_[18] * v_[255] + v_[1] * v_[19];
    jac[13] = (v_[256] - v_[2]) * v_[33] + (0 - v_[7] - v_[1]) * v_[50] + (v_[6] + v_[383]) * v_[62];
    jac[14] = (0 - v_[254] - v_[1]) * v_[33] + (v_[256] + v_[2]) * v_[50] + (v_[264] - v_[10]) * v_[62];
    v_[1] = -0.5 * sin(v_[15]);
    v_[2] = v_[35] * v_[1];
    v_[15] = 0.5 * cos(v_[15]);
    v_[256] = v_[13] * v_[15];
    v_[254] = v_[2] * v_[64] + v_[256] * v_[17];
    v_[1] = v_[13] * v_[1];
    v_[15] = v_[35] * v_[15];
    v_[35] = v_[1] * v_[17] + v_[15] * v_[64];
    v_[13] = 2. * v_[35];
    v_[10] = v_[66] * v_[254] + v_[13] * v_[73];
    v_[15] = v_[1] * v_[64] - v_[15] * v_[17];
    v_[256] = v_[256] * v_[64] - v_[2] * v_[17];
    v_[2] = 2. * v_[256];
    v_[64] = v_[76] * v_[15] + v_[2] * v_[63];
    v_[17] = v_[76] * v_[254] + v_[2] * v_[73];
    v_[1] = v_[66] * v_[15] + v_[13] * v_[63];
    v_[35] = v_[66] * v_[35] + v_[13] * v_[65];
    v_[2] = v_[76] * v_[256] + v_[2] * v_[75];
    jac[15] = (v_[10] + v_[64]) * v_[115] + (v_[17] - v_[1]) * v_[162] + (0 - v_[35] - v_[2]) * v_[197];
    v_[256] = v_[66] * v_[256] + v_[13] * v_[75];
    v_[13] = 2. * v_[254];
    v_[15] = v_[72] * v_[15] + v_[13] * v_[63];
    v_[13] = v_[72] * v_[254] + v_[13] * v_[73];
    jac[16] = (v_[256] - v_[15]) * v_[115] + (0 - v_[35] - v_[13]) * v_[162] + (v_[17] + v_[1]) * v_[197];
    jac[17] = (0 - v_[2] - v_[13]) * v_[115] + (v_[256] + v_[15]) * v_[162] + (v_[10] - v_[64]) * v_[197];
    v_[13] = -0.5 * sin(v_[69]);
    v_[15] = v_[117] * v_[13];
    v_[69] = 0.5 * cos(v_[69]);
    v_[256] = v_[67] * v_[69];
    v_[2] = v_[15] * v_[199] + v_[256] * v_[71];
    v_[13] = v_[67] * v_[13];
    v_[69] = v_[117] * v_[69];
    v_[117] = v_[13] * v_[71] + v_[69] * v_[199];
    v_[67] = 2. * v_[117];
    v_[64] = v_[201] * v_[2] + v_[67] * v_[208];
    v_[69] = v_[13] * v_[199] - v_[69] * v_[71];
    v_[256] = v_[256] * v_[199] - v_[15] * v_[71];
    v_[15] = 2. * v_[256];
    v_[199] = v_[211] * v_[69] + v_[15] * v_[198];
    v_[71] = v_[211] * v_[2] + v_[15] * v_[208];
    v_[13] = v_[201] * v_[69] + v_[67] * v_[198];
    v_[117] = v_[201] * v_[117] + v_[67] * v_[200];
    v_[15] = v_[211] * v_[256] + v_[15] * v_[210];
    jac[18] = (v_[64] + v_[199]) * v_[222] + (v_[71] - v_[13]) * v_[239] + (0 - v_[117] - v_[15]) * v_[249];
    v_[256] = v_[201] * v_[256] + v_[67] * v_[210];
    v_[67] = 2. * v_[2];
    v_[69] = v_[207] * v_[69] + v_[67] * v_[198];
    v_[67] = v_[207] * v_[2] + v_[67] * v_[208];
    jac[19] = (v_[256] - v_[69]) * v_[222] + (0 - v_[117] - v_[67]) * v_[239] + (v_[71] + v_[13]) * v_[249];
    jac[20] = (0 - v_[15] - v_[67]) * v_[222] + (v_[256] + v_[69]) * v_[239] + (v_[64] - v_[199]) * v_[249];
    v_[67] = -0.5 * sin(v_[204]);
    v_[69] = v_[224] * v_[67];
    v_[204] = 0.5 * cos(v_[204]);
    v_[256] = v_[202] * v_[204];
    v_[15] = v_[69] * v_[251] + v_[256] * v_[206];
    v_[67] = v_[202] * v_[67];
    v_[204] = v_[224] * v_[204];
    v_[224] = v_[67] * v_[206] + v_[204] * v_[251];
    v_[202] = 2. * v_[224];
    v_[199] = v_[253] * v_[15] + v_[202] * v_[260];
    v_[204] = v_[67] * v_[251] - v_[204] * v_[206];
    v_[256] = v_[256] * v_[251] - v_[69] * v_[206];
    v_[69] = 2. * v_[256];
    v_[251] = v_[263] * v_[204] + v_[69] * v_[250];
    v_[206] = v_[263] * v_[15] + v_[69] * v_[260];
    v_[67] = v_[253] * v_[204] + v_[202] * v_[250];
    v_[224] = v_[253] * v_[224] + v_[202] * v_[252];
    v_[69] = v_[263] * v_[256] + v_[69] * v_[262];
    jac[21] = (v_[199] + v_[251]) * v_[302] + (v_[206] - v_[67]) * v_[349] + (0 - v_[224] - v_[69]) * v_[382];
    v_[256] = v_[253] * v_[256] + v_[202] * v_[262];
    v_[202] = 2. * v_[15];
    v_[204] = v_[259] * v_[204] + v_[202] * v_[250];
    v_[202] = v_[259] * v_[15] + v_[202] * v_[260];
    jac[22] = (v_[256] - v_[204]) * v_[302] + (0 - v_[224] - v_[202]) * v_[349] + (v_[206] + v_[67]) * v_[382];
    jac[23] = (0 - v_[69] - v_[202]) * v_[302] + (v_[256] + v_[204]) * v_[349] + (v_[199] - v_[251]) * v_[382];
    v_[202] = -0.5 * sin(v_[5]);
    v_[5] = 0.5 * cos(v_[5]);
    v_[204] = v_[3] * v_[202] + v_[8] * v_[5];
    v_[256] = v_[4] * v_[5] + v_[9] * v_[202];
    v_[69] = 2. * v_[256];
    v_[251] = v_[12] * v_[204] + v_[69] * v_[19];
    v_[9] = v_[4] * v_[202] - v_[9] * v_[5];
    v_[5] = v_[8] * v_[202] - v_[3] * v_[5];
    v_[202] = 2. * v_[5];
    v_[8] = v_[22] * v_[9] + v_[202] * v_[0];
    v_[3] = v_[22] * v_[204] + v_[202] * v_[19];
    v_[4] = v_[12] * v_[9] + v_[69] * v_[0];
    v_[256] = v_[12] * v_[256] + v_[69] * v_[11];
    v_[202] = v_[22] * v_[5] + v_[202] * v_[21];
    jac[24] = (v_[251] + v_[8]) * v_[33] + (v_[3] - v_[4]) * v_[50] + (0 - v_[256] - v_[202]) * v_[62];
    v_[5] = v_[12] * v_[5] + v_[69] * v_[21];
    v_[69] = 2. * v_[204];
    v_[9] = v_[18] * v_[9] + v_[69] * v_[0];
    v_[69] = v_[18] * v_[204] + v_[69] * v_[19];
    jac[25] = (v_[5] - v_[9]) * v_[33] + (0 - v_[256] - v_[69]) * v_[50] + (v_[3] + v_[4]) * v_[62];
    jac[26] = (0 - v_[202] - v_[69]) * v_[33] + (v_[5] + v_[9]) * v_[50] + (v_[251] - v_[8]) * v_[62];
    v_[69] = -0.5 * sin(v_[20]);
    v_[20] = 0.5 * cos(v_[20]);
    v_[9] = v_[14] * v_[69] + v_[34] * v_[20];
    v_[5] = v_[23] * v_[20] + v_[16] * v_[69];
    v_[202] = 2. * v_[5];
    v_[8] = v_[66] * v_[9] + v_[202] * v_[73];
    v_[16] = v_[23] * v_[69] - v_[16] * v_[20];
    v_[20] = v_[34] * v_[69] - v_[14] * v_[20];
    v_[69] = 2. * v_[20];
    v_[34] = v_[76] * v_[16] + v_[69] * v_[63];
    v_[14] = v_[76] * v_[9] + v_[69] * v_[73];
    v_[23] = v_[66] * v_[16] + v_[202] * v_[63];
    v_[5] = v_[66] * v_[5] + v_[202] * v_[65];
    v_[69] = v_[76] * v_[20] + v_[69] * v_[75];
    jac[27] = (v_[8] + v_[34]) * v_[115] + (v_[14] - v_[23]) * v_[162] + (0 - v_[5] - v_[69]) * v_[197];
    v_[20] = v_[66] * v_[20] + v_[202] * v_[75];
    v_[202] = 2. * v_[9];
    v_[16] = v_[72] * v_[16] + v_[202] * v_[63];
    v_[202] = v_[72] * v_[9] + v_[202] * v_[73];
    jac[28] = (v_[20] - v_[16]) * v_[115] + (0 - v_[5] - v_[202]) * v_[162] + (v_[14] + v_[23]) * v_[197];
    jac[29] = (0 - v_[69] - v_[202]) * v_[115] + (v_[20] + v_[16]) * v_[162] + (v_[8] - v_[34]) * v_[197];
    v_[202] = -0.5 * sin(v_[74]);
    v_[74] = 0.5 * cos(v_[74]);
    v_[16] = v_[68] * v_[202] + v_[116] * v_[74];
    v_[20] = v_[77] * v_[74] + v_[70] * v_[202];
    v_[69] = 2. * v_[20];
    v_[34] = v_[201] * v_[16] + v_[69] * v_[208];
    v_[70] = v_[77] * v_[202] - v_[70] * v_[74];
    v_[74] = v_[116] * v_[202] - v_[68] * v_[74];
    v_[202] = 2. * v_[74];
    v_[116] = v_[211] * v_[70] + v_[202] * v_[198];
    v_[68] = v_[211] * v_[16] + v_[202] * v_[208];
    v_[77] = v_[201] * v_[70] + v_[69] * v_[198];
    v_[20] = v_[201] * v_[20] + v_[69] * v_[200];
    v_[202] = v_[211] * v_[74] + v_[202] * v_[210];
    jac[30] = (v_[34] + v_[116]) * v_[222] + (v_[68] - v_[77]) * v_[239] + (0 - v_[20] - v_[202]) * v_[249];
    v_[74] = v_[201] * v_[74] + v_[69] * v_[210];
    v_[69] = 2. * v_[16];
    v_[70] = v_[207] * v_[70] + v_[69] * v_[198];
    v_[69] = v_[207] * v_[16] + v_[69] * v_[208];
    jac[31] = (v_[74] - v_[70]) * v_[222] + (0 - v_[20] - v_[69]) * v_[239] + (v_[68] + v_[77]) * v_[249];
    jac[32] = (0 - v_[202] - v_[69]) * v_[222] + (v_[74] + v_[70]) * v_[239] + (v_[34] - v_[116]) * v_[249];
    v_[69] = -0.5 * sin(v_[209]);
    v_[209] = 0.5 * cos(v_[209]);
    v_[70] = v_[203] * v_[69] + v_[223] * v_[209];
    v_[74] = v_[212] * v_[209] + v_[205] * v_[69];
    v_[202] = 2. * v_[74];
    v_[116] = v_[253] * v_[70] + v_[202] * v_[260];
    v_[205] = v_[212] * v_[69] - v_[205] * v_[209];
    v_[209] = v_[223] * v_[69] - v_[203] * v_[209];
    v_[69] = 2. * v_[209];
    v_[223] = v_[263] * v_[205] + v_[69] * v_[250];
    v_[203] = v_[263] * v_[70] + v_[69] * v_[260];
    v_[212] = v_[253] * v_[205] + v_[202] * v_[250];
    v_[74] = v_[253] * v_[74] + v_[202] * v_[252];
    v_[69] = v_[263] * v_[209] + v_[69] * v_[262];
    jac[33] = (v_[116] + v_[223]) * v_[302] + (v_[203] - v_[212]) * v_[349] + (0 - v_[74] - v_[69]) * v_[382];
    v_[209] = v_[253] * v_[209] + v_[202] * v_[262];
    v_[202] = 2. * v_[70];
    v_[205] = v_[259] * v_[205] + v_[202] * v_[250];
    v_[202] = v_[259] * v_[70] + v_[202] * v_[260];
    jac[34] = (v_[209] - v_[205]) * v_[302] + (0 - v_[74] - v_[202]) * v_[349] + (v_[203] + v_[212]) * v_[382];
    jac[35] = (0 - v_[69] - v_[202]) * v_[302] + (v_[209] + v_[205]) * v_[349] + (v_[116] - v_[223]) * v_[382];
    v_[202] = v_[22] * v_[19];
    v_[205] = v_[12] * v_[0];
    v_[209] = v_[202] - v_[205];
    v_[69] = -1 * sin(x_in[6]);
    v_[223] = cos(x_in[6]);
    v_[116] = (0.325 * v_[69] * v_[38] * v_[29] - 0.325 * v_[223] * v_[26]) * v_[31] + (-0.325 * v_[69] * v_[38] * v_[26] - 0.325 * v_[223] * v_[29]) * v_[28] + 0.38 * v_[69] * v_[38] * v_[29] - 0.38 * v_[223] * v_[26];
    v_[11] = v_[12] * v_[11];
    v_[382] = v_[22] * v_[21];
    v_[349] = 1 - v_[11] - v_[382];
    v_[302] = (-0.325 * v_[69] * v_[26] - 0.325 * v_[223] * v_[38] * v_[29]) * v_[31] + (0.325 * v_[223] * v_[38] * v_[26] - 0.325 * v_[69] * v_[29]) * v_[28] - 0.38 * v_[69] * v_[26] - 0.38 * v_[223] * v_[38] * v_[29];
    jac[72] = v_[209] * v_[116] + v_[349] * v_[302];
    v_[74] = v_[18] * v_[19];
    v_[11] = 1 - v_[11] - v_[74];
    v_[205] = v_[202] + v_[205];
    jac[73] = v_[11] * v_[116] + v_[205] * v_[302];
    v_[21] = v_[12] * v_[21];
    v_[18] = v_[18] * v_[0];
    v_[202] = v_[21] + v_[18];
    v_[19] = v_[12] * v_[19];
    v_[0] = v_[22] * v_[0];
    v_[22] = v_[19] - v_[0];
    jac[74] = v_[202] * v_[116] + v_[22] * v_[302];
    v_[302] = v_[66] * v_[73];
    v_[116] = v_[76] * v_[63];
    jac[279] = v_[302] + v_[116];
    v_[12] = (0.325 * v_[69] * v_[38] * v_[29] - 0.325 * v_[223] * v_[26]) * v_[31] + (-0.325 * v_[69] * v_[38] * v_[26] - 0.325 * v_[223] * v_[29]) * v_[28] + 0.38 * v_[69] * v_[38] * v_[29] - 0.38 * v_[223] * v_[26];
    v_[212] = 0.325 * v_[223] * v_[38];
    v_[212] = (-0.325 * v_[69] * v_[26] - v_[212] * v_[29]) * v_[31] + (v_[212] * v_[26] - 0.325 * v_[69] * v_[29]) * v_[28] - 0.38 * v_[69] * v_[26] - 0.38 * v_[223] * v_[38] * v_[29];
    v_[203] = x_in[18] * v_[12] - x_in[19] * v_[212];
    v_[70] = v_[76] * v_[73];
    v_[34] = v_[66] * v_[63];
    jac[267] = v_[70] - v_[34];
    v_[249] = 0.325 * v_[223];
    v_[239] = 0.325 * v_[223] * v_[38];
    v_[239] = ((-0.325 * v_[69] * v_[38] * v_[26] - v_[249] * v_[29]) * v_[31] + (v_[249] * v_[26] - 0.325 * v_[69] * v_[38] * v_[29]) * v_[28] - 0.38 * v_[69] * v_[38] * v_[26] - 0.38 * v_[223] * v_[29]) * x_in[26] + (0.325 * v_[69] * v_[24] * v_[29] * v_[31] + -0.325 * v_[69] * v_[24] * v_[26] * v_[28] + 0.38 * v_[69] * v_[24] * v_[29]) * x_in[25] + ((-0.325 * v_[69] * v_[26] - v_[239] * v_[29]) * v_[31] + (v_[239] * v_[26] - 0.325 * v_[69] * v_[29]) * v_[28] - 0.38 * v_[69] * v_[26] - 0.38 * v_[223] * v_[38] * v_[29]) * x_in[24] + ((0.325 * v_[223] * v_[26] - 0.325 * v_[69] * v_[38] * v_[29]) * v_[28] + (-0.325 * v_[69] * v_[38] * v_[26] - 0.325 * v_[223] * v_[29]) * v_[31]) * x_in[27] + x_in[20] * v_[212];
    v_[65] = v_[66] * v_[65];
    v_[76] = v_[76] * v_[75];
    jac[255] = 1 - v_[65] - v_[76];
    v_[249] = 0.325 * v_[223] * v_[38];
    v_[212] = 0.325 * v_[69];
    v_[222] = 0.325 * v_[223];
    v_[20] = 0.325 * v_[69] * v_[38];
    v_[20] = ((v_[249] * v_[26] - v_[212] * v_[29]) * v_[31] + (v_[212] * v_[26] + v_[249] * v_[29]) * v_[28] + 0.38 * v_[223] * v_[38] * v_[26] - 0.38 * v_[69] * v_[29]) * x_in[26] + (0.325 * v_[223] * v_[24] * v_[26] * v_[28] - 0.325 * v_[223] * v_[24] * v_[29] * v_[31] - 0.38 * v_[223] * v_[24] * v_[29]) * x_in[25] + ((v_[222] * v_[26] - v_[20] * v_[29]) * v_[31] + (v_[20] * v_[26] + v_[222] * v_[29]) * v_[28] + 0.38 * v_[223] * v_[26] - 0.38 * v_[69] * v_[38] * v_[29]) * x_in[24] + ((0.325 * v_[69] * v_[26] + 0.325 * v_[223] * v_[38] * v_[29]) * v_[28] + (0.325 * v_[223] * v_[38] * v_[26] - 0.325 * v_[69] * v_[29]) * v_[31]) * x_in[27] - x_in[20] * v_[12];
    jac[75] = jac[279] * v_[203] + jac[267] * v_[239] + jac[255] * v_[20];
    v_[75] = v_[66] * v_[75];
    v_[63] = v_[72] * v_[63];
    jac[280] = v_[75] - v_[63];
    v_[72] = v_[72] * v_[73];
    jac[268] = 1 - v_[65] - v_[72];
    jac[256] = v_[70] + v_[34];
    jac[76] = jac[280] * v_[203] + jac[268] * v_[239] + jac[256] * v_[20];
    jac[281] = 1 - v_[76] - v_[72];
    jac[269] = v_[75] + v_[63];
    jac[257] = v_[302] - v_[116];
    jac[77] = jac[281] * v_[203] + jac[269] * v_[239] + jac[257] * v_[20];
    v_[0] = v_[19] + v_[0];
    v_[19] = -1 * sin(x_in[7]);
    v_[20] = 0.325 * v_[19];
    v_[20] = v_[20] * v_[26] * v_[28] - v_[20] * v_[29] * v_[31] - 0.38 * v_[19] * v_[29];
    v_[239] = cos(x_in[7]);
    v_[47] = v_[37] * v_[239] * v_[29] * v_[31] + v_[43] * v_[239] * v_[26] * v_[28] + v_[47] * v_[239] * v_[29];
    v_[60] = (0 - v_[52] * v_[239] * v_[29]) * v_[31] + v_[55] * v_[239] * v_[26] * v_[28] - v_[60] * v_[239] * v_[29];
    jac[84] = v_[0] * v_[20] + v_[209] * v_[47] + v_[349] * v_[60];
    v_[18] = v_[21] - v_[18];
    jac[85] = v_[18] * v_[20] + v_[11] * v_[47] + v_[205] * v_[60];
    v_[74] = 1 - v_[382] - v_[74];
    jac[86] = v_[74] * v_[20] + v_[202] * v_[47] + v_[22] * v_[60];
    v_[60] = 0.325 * v_[19];
    v_[47] = 0.325 * v_[19];
    v_[101] = v_[93] * v_[239] * v_[29] * v_[31] + v_[97] * v_[239] * v_[26] * v_[28] + v_[101] * v_[239] * v_[29];
    v_[106] = v_[106] * v_[239];
    v_[106] = (0 - v_[106] * v_[29]) * v_[31] + v_[106] * v_[26] * v_[28] - v_[112] * v_[239] * v_[29];
    v_[47] = (v_[60] * v_[26] * v_[31] + v_[60] * v_[29] * v_[28] + 0.38 * v_[19] * v_[26]) * x_in[26] + (0.325 * v_[239] * v_[29] * v_[31] + -0.325 * v_[239] * v_[26] * v_[28] + 0.38 * v_[239] * v_[29]) * x_in[25] + (v_[47] * v_[29] * v_[28] + v_[47] * v_[26] * v_[31]) * x_in[27] + x_in[18] * v_[101] - x_in[19] * v_[106];
    v_[139] = v_[139] * v_[239];
    v_[60] = 0.325 * v_[19];
    v_[60] = v_[60] * v_[26] * v_[28] - v_[60] * v_[29] * v_[31] - 0.38 * v_[19] * v_[29];
    v_[139] = (v_[118] * v_[239] * v_[26] * v_[31] + (0 - v_[122] * v_[239] * v_[29]) * v_[28] - v_[125] * v_[239] * v_[26]) * x_in[26] + (v_[129] * v_[19] * v_[29] * v_[31] + v_[132] * v_[19] * v_[26] * v_[28] + v_[135] * v_[19] * v_[29]) * x_in[25] + ((0 - v_[139] * v_[29]) * v_[31] + v_[139] * v_[26] * v_[28] - v_[145] * v_[239] * v_[29]) * x_in[24] + ((0 - v_[149] * v_[239] * v_[29]) * v_[28] + v_[152] * v_[239] * v_[26] * v_[31]) * x_in[27] + x_in[20] * v_[106] - x_in[18] * v_[60];
    v_[163] = v_[163] * v_[239];
    v_[182] = v_[182] * v_[239];
    v_[182] = (v_[163] * v_[26] * v_[31] + v_[163] * v_[29] * v_[28] + v_[168] * v_[239] * v_[26]) * x_in[26] + (v_[172] * v_[19] * v_[26] * v_[28] - v_[175] * v_[19] * v_[29] * v_[31] - v_[178] * v_[19] * v_[29]) * x_in[25] + ((0 - v_[182] * v_[29]) * v_[31] + v_[182] * v_[26] * v_[28] - v_[187] * v_[239] * v_[29]) * x_in[24] + (v_[191] * v_[239] * v_[29] * v_[28] + v_[40] * v_[239] * v_[26] * v_[31]) * x_in[27] + x_in[19] * v_[60] - x_in[20] * v_[101];
    jac[87] = jac[279] * v_[47] + jac[267] * v_[139] + jac[255] * v_[182];
    jac[88] = jac[280] * v_[47] + jac[268] * v_[139] + jac[256] * v_[182];
    jac[89] = jac[281] * v_[47] + jac[269] * v_[139] + jac[257] * v_[182];
    v_[182] = cos(x_in[8]);
    v_[139] = -1 * sin(x_in[8]);
    v_[32] = v_[25] * v_[182] * v_[28] - v_[25] * v_[139] * v_[31] - v_[32] * v_[139];
    v_[49] = (v_[39] * v_[139] - v_[41] * v_[182]) * v_[31] + (v_[44] * v_[182] - v_[45] * v_[139]) * v_[28] + v_[48] * v_[139] - v_[49] * v_[182];
    v_[61] = (v_[51] * v_[182] - v_[53] * v_[139]) * v_[31] + (v_[56] * v_[182] - v_[57] * v_[139]) * v_[28] - v_[59] * v_[182] - v_[61] * v_[139];
    jac[96] = v_[0] * v_[32] + v_[209] * v_[49] + v_[349] * v_[61];
    jac[97] = v_[18] * v_[32] + v_[11] * v_[49] + v_[205] * v_[61];
    jac[98] = v_[74] * v_[32] + v_[202] * v_[49] + v_[22] * v_[61];
    v_[103] = (v_[94] * v_[139] - v_[95] * v_[182]) * v_[31] + (v_[98] * v_[182] - v_[99] * v_[139]) * v_[28] + v_[102] * v_[139] - v_[103] * v_[182];
    v_[113] = (v_[105] * v_[182] - v_[107] * v_[139]) * v_[31] + (v_[107] * v_[182] - v_[109] * v_[139]) * v_[28] - v_[111] * v_[182] - v_[113] * v_[139];
    v_[89] = (v_[78] * v_[182] * v_[31] + v_[78] * v_[139] * v_[28] + v_[81] * v_[182]) * x_in[26] + (v_[83] * v_[139] * v_[31] + v_[85] * v_[182] * v_[28] + v_[87] * v_[139]) * x_in[25] + (v_[89] * v_[139] * v_[28] + v_[89] * v_[182] * v_[31]) * x_in[27] + x_in[18] * v_[103] - x_in[19] * v_[113];
    v_[160] = v_[157] * v_[182] * v_[28] - v_[157] * v_[139] * v_[31] - v_[160] * v_[139];
    v_[113] = ((v_[119] * v_[182] - v_[120] * v_[139]) * v_[31] + (v_[120] * v_[182] - v_[123] * v_[139]) * v_[28] - v_[126] * v_[182] - v_[127] * v_[139]) * x_in[26] + (v_[130] * v_[139] * v_[31] + v_[133] * v_[182] * v_[28] + v_[136] * v_[139]) * x_in[25] + ((v_[138] * v_[182] - v_[140] * v_[139]) * v_[31] + (v_[140] * v_[182] - v_[142] * v_[139]) * v_[28] - v_[144] * v_[182] - v_[146] * v_[139]) * x_in[24] + ((v_[148] * v_[182] - v_[150] * v_[139]) * v_[28] + (v_[153] * v_[182] - v_[154] * v_[139]) * v_[31]) * x_in[27] + x_in[20] * v_[113] - x_in[18] * v_[160];
    v_[160] = ((v_[164] * v_[182] - v_[165] * v_[139]) * v_[31] + (v_[165] * v_[182] + v_[164] * v_[139]) * v_[28] + v_[169] * v_[182] - v_[170] * v_[139]) * x_in[26] + (v_[173] * v_[182] * v_[28] - v_[176] * v_[139] * v_[31] - v_[179] * v_[139]) * x_in[25] + ((v_[181] * v_[182] - v_[183] * v_[139]) * v_[31] + (v_[183] * v_[182] + v_[181] * v_[139]) * v_[28] + v_[186] * v_[182] - v_[188] * v_[139]) * x_in[24] + ((v_[190] * v_[182] + v_[192] * v_[139]) * v_[28] + (v_[194] * v_[182] - v_[36] * v_[139]) * v_[31]) * x_in[27] + x_in[19] * v_[160] - x_in[20] * v_[103];
    jac[99] = jac[279] * v_[89] + jac[267] * v_[113] + jac[255] * v_[160];
    jac[100] = jac[280] * v_[89] + jac[268] * v_[113] + jac[256] * v_[160];
    jac[101] = jac[281] * v_[89] + jac[269] * v_[113] + jac[257] * v_[160];
    v_[160] = cos(x_in[9]);
    v_[113] = -1 * sin(x_in[9]);
    v_[30] = v_[27] * v_[160] - v_[30] * v_[113];
    v_[46] = v_[42] * v_[113] + v_[46] * v_[160];
    v_[58] = v_[54] * v_[113] + v_[58] * v_[160];
    jac[108] = v_[0] * v_[30] + v_[209] * v_[46] + v_[349] * v_[58];
    jac[109] = v_[18] * v_[30] + v_[11] * v_[46] + v_[205] * v_[58];
    jac[110] = v_[74] * v_[30] + v_[202] * v_[46] + v_[22] * v_[58];
    v_[100] = v_[96] * v_[113] + v_[100] * v_[160];
    v_[110] = v_[108] * v_[113] + v_[110] * v_[160];
    v_[91] = (v_[79] * v_[113] + v_[80] * v_[160]) * x_in[26] + (v_[84] * v_[113] + v_[86] * v_[160]) * x_in[25] + (v_[90] * v_[160] + v_[91] * v_[113]) * x_in[27] + x_in[18] * v_[100] - x_in[19] * v_[110];
    v_[159] = v_[158] * v_[160] - v_[159] * v_[113];
    v_[110] = (v_[121] * v_[113] + v_[124] * v_[160]) * x_in[26] + (v_[131] * v_[113] + v_[134] * v_[160]) * x_in[25] + (v_[141] * v_[113] + v_[143] * v_[160]) * x_in[24] + (v_[151] * v_[160] + v_[155] * v_[113]) * x_in[27] + x_in[20] * v_[110] - x_in[18] * v_[159];
    v_[159] = (v_[166] * v_[113] + v_[167] * v_[160]) * x_in[26] + (v_[174] * v_[160] - v_[177] * v_[113]) * x_in[25] + (v_[184] * v_[113] + v_[185] * v_[160]) * x_in[24] + (v_[193] * v_[160] + v_[195] * v_[113]) * x_in[27] + x_in[19] * v_[159] - x_in[20] * v_[100];
    jac[111] = jac[279] * v_[91] + jac[267] * v_[110] + jac[255] * v_[159];
    jac[112] = jac[280] * v_[91] + jac[268] * v_[110] + jac[256] * v_[159];
    jac[113] = jac[281] * v_[91] + jac[269] * v_[110] + jac[257] * v_[159];
    v_[159] = v_[211] * v_[208];
    v_[110] = v_[201] * v_[198];
    v_[91] = v_[159] - v_[110];
    v_[100] = -1 * sin(x_in[12]);
    v_[113] = cos(x_in[12]);
    v_[160] = (0.325 * v_[100] * v_[227] * v_[218] - 0.325 * v_[113] * v_[215]) * v_[220] + (-0.325 * v_[100] * v_[227] * v_[215] - 0.325 * v_[113] * v_[218]) * v_[217] + 0.38 * v_[100] * v_[227] * v_[218] - 0.38 * v_[113] * v_[215];
    v_[200] = v_[201] * v_[200];
    v_[195] = v_[211] * v_[210];
    v_[193] = 1 - v_[200] - v_[195];
    v_[185] = 0.325 * v_[113] * v_[227];
    v_[185] = (-0.325 * v_[100] * v_[215] - v_[185] * v_[218]) * v_[220] + (v_[185] * v_[215] - 0.325 * v_[100] * v_[218]) * v_[217] - 0.38 * v_[100] * v_[215] - 0.38 * v_[113] * v_[227] * v_[218];
    jac[150] = v_[91] * v_[160] + v_[193] * v_[185];
    v_[184] = v_[207] * v_[208];
    v_[200] = 1 - v_[200] - v_[184];
    v_[110] = v_[159] + v_[110];
    jac[151] = v_[200] * v_[160] + v_[110] * v_[185];
    v_[210] = v_[201] * v_[210];
    v_[207] = v_[207] * v_[198];
    v_[159] = v_[210] + v_[207];
    v_[208] = v_[201] * v_[208];
    v_[198] = v_[211] * v_[198];
    v_[211] = v_[208] - v_[198];
    jac[152] = v_[159] * v_[160] + v_[211] * v_[185];
    v_[185] = v_[253] * v_[260];
    v_[160] = v_[263] * v_[250];
    jac[285] = v_[185] + v_[160];
    v_[201] = (0.325 * v_[100] * v_[227] * v_[218] - 0.325 * v_[113] * v_[215]) * v_[220] + (-0.325 * v_[100] * v_[227] * v_[215] - 0.325 * v_[113] * v_[218]) * v_[217] + 0.38 * v_[100] * v_[227] * v_[218] - 0.38 * v_[113] * v_[215];
    v_[177] = 0.325 * v_[113] * v_[227];
    v_[177] = (-0.325 * v_[100] * v_[215] - v_[177] * v_[218]) * v_[220] + (v_[177] * v_[215] - 0.325 * v_[100] * v_[218]) * v_[217] - 0.38 * v_[100] * v_[215] - 0.38 * v_[113] * v_[227] * v_[218];
    v_[174] = x_in[18] * v_[201] - x_in[19] * v_[177];
    v_[167] = v_[263] * v_[260];
    v_[166] = v_[253] * v_[250];
    jac[273] = v_[167] - v_[166];
    v_[155] = 0.325 * v_[113];
    v_[151] = 0.325 * v_[113] * v_[227];
    v_[151] = ((-0.325 * v_[100] * v_[227] * v_[215] - v_[155] * v_[218]) * v_[220] + (v_[155] * v_[215] - 0.325 * v_[100] * v_[227] * v_[218]) * v_[217] - 0.38 * v_[100] * v_[227] * v_[215] - 0.38 * v_[113] * v_[218]) * x_in[32] + (0.325 * v_[100] * v_[213] * v_[218] * v_[220] + -0.325 * v_[100] * v_[213] * v_[215] * v_[217] + 0.38 * v_[100] * v_[213] * v_[218]) * x_in[31] + ((-0.325 * v_[100] * v_[215] - v_[151] * v_[218]) * v_[220] + (v_[151] * v_[215] - 0.325 * v_[100] * v_[218]) * v_[217] - 0.38 * v_[100] * v_[215] - 0.38 * v_[113] * v_[227] * v_[218]) * x_in[30] + ((0.325 * v_[113] * v_[215] - 0.325 * v_[100] * v_[227] * v_[218]) * v_[217] + (-0.325 * v_[100] * v_[227] * v_[215] - 0.325 * v_[113] * v_[218]) * v_[220]) * x_in[33] + x_in[20] * v_[177];
    v_[252] = v_[253] * v_[252];
    v_[263] = v_[263] * v_[262];
    jac[261] = 1 - v_[252] - v_[263];
    v_[155] = 0.325 * v_[113];
    v_[177] = v_[155] * v_[227];
    v_[143] = 0.325 * v_[100];
    v_[141] = 0.325 * v_[113];
    v_[134] = 0.325 * v_[100] * v_[227];
    v_[134] = ((v_[177] * v_[215] - v_[143] * v_[218]) * v_[220] + (v_[143] * v_[215] + v_[177] * v_[218]) * v_[217] + 0.38 * v_[113] * v_[227] * v_[215] - 0.38 * v_[100] * v_[218]) * x_in[32] + (0.325 * v_[113] * v_[213] * v_[215] * v_[217] - v_[155] * v_[213] * v_[218] * v_[220] - 0.38 * v_[113] * v_[213] * v_[218]) * x_in[31] + ((v_[141] * v_[215] - v_[134] * v_[218]) * v_[220] + (v_[134] * v_[215] + v_[141] * v_[218]) * v_[217] + 0.38 * v_[113] * v_[215] - 0.38 * v_[100] * v_[227] * v_[218]) * x_in[30] + ((0.325 * v_[100] * v_[215] + 0.325 * v_[113] * v_[227] * v_[218]) * v_[217] + (v_[141] * v_[227] * v_[215] - 0.325 * v_[100] * v_[218]) * v_[220]) * x_in[33] - x_in[20] * v_[201];
    jac[153] = jac[285] * v_[174] + jac[273] * v_[151] + jac[261] * v_[134];
    v_[262] = v_[253] * v_[262];
    v_[250] = v_[259] * v_[250];
    jac[286] = v_[262] - v_[250];
    v_[259] = v_[259] * v_[260];
    jac[274] = 1 - v_[252] - v_[259];
    jac[262] = v_[167] + v_[166];
    jac[154] = jac[286] * v_[174] + jac[274] * v_[151] + jac[262] * v_[134];
    jac[287] = 1 - v_[263] - v_[259];
    jac[275] = v_[262] + v_[250];
    jac[263] = v_[185] - v_[160];
    jac[155] = jac[287] * v_[174] + jac[275] * v_[151] + jac[263] * v_[134];
    v_[198] = v_[208] + v_[198];
    v_[208] = -1 * sin(x_in[13]);
    v_[134] = 0.325 * v_[208];
    v_[134] = v_[134] * v_[215] * v_[217] - v_[134] * v_[218] * v_[220] - 0.38 * v_[208] * v_[218];
    v_[151] = cos(x_in[13]);
    v_[236] = v_[226] * v_[151] * v_[218] * v_[220] + v_[232] * v_[151] * v_[215] * v_[217] + v_[236] * v_[151] * v_[218];
    v_[241] = v_[241] * v_[151];
    v_[241] = (0 - v_[241] * v_[218]) * v_[220] + v_[241] * v_[215] * v_[217] - v_[247] * v_[151] * v_[218];
    jac[162] = v_[198] * v_[134] + v_[91] * v_[236] + v_[193] * v_[241];
    v_[207] = v_[210] - v_[207];
    jac[163] = v_[207] * v_[134] + v_[200] * v_[236] + v_[110] * v_[241];
    v_[184] = 1 - v_[195] - v_[184];
    jac[164] = v_[184] * v_[134] + v_[159] * v_[236] + v_[211] * v_[241];
    v_[241] = 0.325 * v_[208];
    v_[236] = 0.325 * v_[208];
    v_[288] = v_[280] * v_[151] * v_[218] * v_[220] + v_[284] * v_[151] * v_[215] * v_[217] + v_[288] * v_[151] * v_[218];
    v_[293] = v_[293] * v_[151];
    v_[293] = (0 - v_[293] * v_[218]) * v_[220] + v_[293] * v_[215] * v_[217] - v_[299] * v_[151] * v_[218];
    v_[236] = (v_[241] * v_[215] * v_[220] + v_[241] * v_[218] * v_[217] + 0.38 * v_[208] * v_[215]) * x_in[32] + (0.325 * v_[151] * v_[218] * v_[220] + -0.325 * v_[151] * v_[215] * v_[217] + 0.38 * v_[151] * v_[218]) * x_in[31] + (v_[236] * v_[218] * v_[217] + v_[236] * v_[215] * v_[220]) * x_in[33] + x_in[18] * v_[288] - x_in[19] * v_[293];
    v_[326] = v_[326] * v_[151];
    v_[241] = 0.325 * v_[208];
    v_[241] = v_[241] * v_[215] * v_[217] - v_[241] * v_[218] * v_[220] - 0.38 * v_[208] * v_[218];
    v_[326] = (v_[305] * v_[151] * v_[215] * v_[220] + (0 - v_[309] * v_[151] * v_[218]) * v_[217] - v_[312] * v_[151] * v_[215]) * x_in[32] + (v_[316] * v_[208] * v_[218] * v_[220] + v_[319] * v_[208] * v_[215] * v_[217] + v_[322] * v_[208] * v_[218]) * x_in[31] + ((0 - v_[326] * v_[218]) * v_[220] + v_[326] * v_[215] * v_[217] - v_[332] * v_[151] * v_[218]) * x_in[30] + ((0 - v_[336] * v_[151] * v_[218]) * v_[217] + v_[339] * v_[151] * v_[215] * v_[220]) * x_in[33] + x_in[20] * v_[293] - x_in[18] * v_[241];
    v_[293] = v_[350] * v_[151];
    v_[368] = v_[368] * v_[151];
    v_[368] = (v_[293] * v_[215] * v_[220] + v_[293] * v_[218] * v_[217] + v_[355] * v_[151] * v_[215]) * x_in[32] + (v_[359] * v_[208] * v_[215] * v_[217] - v_[350] * v_[208] * v_[218] * v_[220] - v_[364] * v_[208] * v_[218]) * x_in[31] + ((0 - v_[368] * v_[218]) * v_[220] + v_[368] * v_[215] * v_[217] - v_[373] * v_[151] * v_[218]) * x_in[30] + (v_[229] * v_[151] * v_[218] * v_[217] + v_[367] * v_[151] * v_[215] * v_[220]) * x_in[33] + x_in[19] * v_[241] - x_in[20] * v_[288];
    jac[165] = jac[285] * v_[236] + jac[273] * v_[326] + jac[261] * v_[368];
    jac[166] = jac[286] * v_[236] + jac[274] * v_[326] + jac[262] * v_[368];
    jac[167] = jac[287] * v_[236] + jac[275] * v_[326] + jac[263] * v_[368];
    v_[368] = cos(x_in[14]);
    v_[326] = -1 * sin(x_in[14]);
    v_[221] = v_[214] * v_[368] * v_[217] - v_[214] * v_[326] * v_[220] - v_[221] * v_[326];
    v_[238] = (v_[228] * v_[326] - v_[230] * v_[368]) * v_[220] + (v_[233] * v_[368] - v_[234] * v_[326]) * v_[217] + v_[237] * v_[326] - v_[238] * v_[368];
    v_[248] = (v_[240] * v_[368] - v_[242] * v_[326]) * v_[220] + (v_[242] * v_[368] - v_[244] * v_[326]) * v_[217] - v_[246] * v_[368] - v_[248] * v_[326];
    jac[174] = v_[198] * v_[221] + v_[91] * v_[238] + v_[193] * v_[248];
    jac[175] = v_[207] * v_[221] + v_[200] * v_[238] + v_[110] * v_[248];
    jac[176] = v_[184] * v_[221] + v_[159] * v_[238] + v_[211] * v_[248];
    v_[290] = (v_[281] * v_[326] - v_[282] * v_[368]) * v_[220] + (v_[285] * v_[368] - v_[286] * v_[326]) * v_[217] + v_[289] * v_[326] - v_[290] * v_[368];
    v_[300] = (v_[292] * v_[368] - v_[294] * v_[326]) * v_[220] + (v_[294] * v_[368] - v_[296] * v_[326]) * v_[217] - v_[298] * v_[368] - v_[300] * v_[326];
    v_[276] = (v_[265] * v_[368] * v_[220] + v_[265] * v_[326] * v_[217] + v_[268] * v_[368]) * x_in[32] + (v_[270] * v_[326] * v_[220] + v_[272] * v_[368] * v_[217] + v_[274] * v_[326]) * x_in[31] + (v_[276] * v_[326] * v_[217] + v_[276] * v_[368] * v_[220]) * x_in[33] + x_in[18] * v_[290] - x_in[19] * v_[300];
    v_[347] = v_[344] * v_[368] * v_[217] - v_[344] * v_[326] * v_[220] - v_[347] * v_[326];
    v_[300] = ((v_[306] * v_[368] - v_[307] * v_[326]) * v_[220] + (v_[307] * v_[368] - v_[310] * v_[326]) * v_[217] - v_[313] * v_[368] - v_[314] * v_[326]) * x_in[32] + (v_[317] * v_[326] * v_[220] + v_[320] * v_[368] * v_[217] + v_[323] * v_[326]) * x_in[31] + ((v_[325] * v_[368] - v_[327] * v_[326]) * v_[220] + (v_[327] * v_[368] - v_[329] * v_[326]) * v_[217] - v_[331] * v_[368] - v_[333] * v_[326]) * x_in[30] + ((v_[335] * v_[368] - v_[337] * v_[326]) * v_[217] + (v_[340] * v_[368] - v_[341] * v_[326]) * v_[220]) * x_in[33] + x_in[20] * v_[300] - x_in[18] * v_[347];
    v_[347] = ((v_[351] * v_[368] - v_[352] * v_[326]) * v_[220] + (v_[352] * v_[368] + v_[351] * v_[326]) * v_[217] + v_[356] * v_[368] - v_[357] * v_[326]) * x_in[32] + (v_[360] * v_[368] * v_[217] - v_[362] * v_[326] * v_[220] - v_[365] * v_[326]) * x_in[31] + ((v_[367] * v_[368] - v_[369] * v_[326]) * v_[220] + (v_[369] * v_[368] + v_[367] * v_[326]) * v_[217] + v_[372] * v_[368] - v_[374] * v_[326]) * x_in[30] + ((v_[376] * v_[368] + v_[377] * v_[326]) * v_[217] + (v_[379] * v_[368] - v_[225] * v_[326]) * v_[220]) * x_in[33] + x_in[19] * v_[347] - x_in[20] * v_[290];
    jac[177] = jac[285] * v_[276] + jac[273] * v_[300] + jac[261] * v_[347];
    jac[178] = jac[286] * v_[276] + jac[274] * v_[300] + jac[262] * v_[347];
    jac[179] = jac[287] * v_[276] + jac[275] * v_[300] + jac[263] * v_[347];
    v_[347] = cos(x_in[15]);
    v_[300] = -1 * sin(x_in[15]);
    v_[219] = v_[216] * v_[347] - v_[219] * v_[300];
    v_[235] = v_[231] * v_[300] + v_[235] * v_[347];
    v_[245] = v_[243] * v_[300] + v_[245] * v_[347];
    jac[186] = v_[198] * v_[219] + v_[91] * v_[235] + v_[193] * v_[245];
    jac[187] = v_[207] * v_[219] + v_[200] * v_[235] + v_[110] * v_[245];
    jac[188] = v_[184] * v_[219] + v_[159] * v_[235] + v_[211] * v_[245];
    v_[287] = v_[283] * v_[300] + v_[287] * v_[347];
    v_[297] = v_[295] * v_[300] + v_[297] * v_[347];
    v_[278] = (v_[266] * v_[300] + v_[267] * v_[347]) * x_in[32] + (v_[271] * v_[300] + v_[273] * v_[347]) * x_in[31] + (v_[277] * v_[347] + v_[278] * v_[300]) * x_in[33] + x_in[18] * v_[287] - x_in[19] * v_[297];
    v_[346] = v_[345] * v_[347] - v_[346] * v_[300];
    v_[297] = (v_[308] * v_[300] + v_[311] * v_[347]) * x_in[32] + (v_[318] * v_[300] + v_[321] * v_[347]) * x_in[31] + (v_[328] * v_[300] + v_[330] * v_[347]) * x_in[30] + (v_[338] * v_[347] + v_[342] * v_[300]) * x_in[33] + x_in[20] * v_[297] - x_in[18] * v_[346];
    v_[346] = (v_[353] * v_[300] + v_[354] * v_[347]) * x_in[32] + (v_[361] * v_[347] - v_[363] * v_[300]) * x_in[31] + (v_[370] * v_[300] + v_[371] * v_[347]) * x_in[30] + (v_[378] * v_[347] + v_[380] * v_[300]) * x_in[33] + x_in[19] * v_[346] - x_in[20] * v_[287];
    jac[189] = jac[285] * v_[278] + jac[273] * v_[297] + jac[261] * v_[346];
    jac[190] = jac[286] * v_[278] + jac[274] * v_[297] + jac[262] * v_[346];
    jac[191] = jac[287] * v_[278] + jac[275] * v_[297] + jac[263] * v_[346];
    v_[346] = 0 - v_[161];
    jac[219] = jac[279] * v_[104] + jac[267] * v_[346];
    jac[220] = jac[280] * v_[104] + jac[268] * v_[346];
    jac[221] = jac[281] * v_[104] + jac[269] * v_[346];
    v_[346] = 0 - v_[348];
    jac[225] = jac[285] * v_[291] + jac[273] * v_[346];
    jac[226] = jac[286] * v_[291] + jac[274] * v_[346];
    jac[227] = jac[287] * v_[291] + jac[275] * v_[346];
    v_[346] = 0 - v_[114];
    jac[231] = jac[279] * v_[346] + jac[255] * v_[161];
    jac[232] = jac[280] * v_[346] + jac[256] * v_[161];
    jac[233] = jac[281] * v_[346] + jac[257] * v_[161];
    v_[346] = 0 - v_[301];
    jac[237] = jac[285] * v_[346] + jac[261] * v_[348];
    jac[238] = jac[286] * v_[346] + jac[262] * v_[348];
    jac[239] = jac[287] * v_[346] + jac[263] * v_[348];
    v_[104] = 0 - v_[104];
    jac[243] = jac[267] * v_[114] + jac[255] * v_[104];
    jac[244] = jac[268] * v_[114] + jac[256] * v_[104];
    jac[245] = jac[269] * v_[114] + jac[257] * v_[104];
    v_[291] = 0 - v_[291];
    jac[249] = jac[273] * v_[301] + jac[261] * v_[291];
    jac[250] = jac[274] * v_[301] + jac[262] * v_[291];
    jac[251] = jac[275] * v_[301] + jac[263] * v_[291];
    jac[291] = jac[267] * v_[147] + jac[255] * v_[189];
    jac[292] = jac[268] * v_[147] + jac[256] * v_[189];
    jac[293] = jac[269] * v_[147] + jac[257] * v_[189];
    jac[303] = jac[279] * v_[88] + jac[267] * v_[137] + jac[255] * v_[180];
    jac[304] = jac[280] * v_[88] + jac[268] * v_[137] + jac[256] * v_[180];
    jac[305] = jac[281] * v_[88] + jac[269] * v_[137] + jac[257] * v_[180];
    jac[315] = jac[279] * v_[82] + jac[267] * v_[128] + jac[255] * v_[171];
    jac[316] = jac[280] * v_[82] + jac[268] * v_[128] + jac[256] * v_[171];
    jac[317] = jac[281] * v_[82] + jac[269] * v_[128] + jac[257] * v_[171];
    jac[327] = jac[279] * v_[92] + jac[267] * v_[156] + jac[255] * v_[196];
    jac[328] = jac[280] * v_[92] + jac[268] * v_[156] + jac[256] * v_[196];
    jac[329] = jac[281] * v_[92] + jac[269] * v_[156] + jac[257] * v_[196];
    jac[369] = jac[273] * v_[334] + jac[261] * v_[375];
    jac[370] = jac[274] * v_[334] + jac[262] * v_[375];
    jac[371] = jac[275] * v_[334] + jac[263] * v_[375];
    jac[381] = jac[285] * v_[275] + jac[273] * v_[324] + jac[261] * v_[366];
    jac[382] = jac[286] * v_[275] + jac[274] * v_[324] + jac[262] * v_[366];
    jac[383] = jac[287] * v_[275] + jac[275] * v_[324] + jac[263] * v_[366];
    jac[393] = jac[285] * v_[269] + jac[273] * v_[315] + jac[261] * v_[358];
    jac[394] = jac[286] * v_[269] + jac[274] * v_[315] + jac[262] * v_[358];
    jac[395] = jac[287] * v_[269] + jac[275] * v_[315] + jac[263] * v_[358];
    jac[405] = jac[285] * v_[279] + jac[273] * v_[343] + jac[261] * v_[381];
    jac[406] = jac[286] * v_[279] + jac[274] * v_[343] + jac[262] * v_[381];
    jac[407] = jac[287] * v_[279] + jac[275] * v_[343] + jac[263] * v_[381];
    // dependent variables without operations
    jac[36] = 1;
    jac[42] = 1;
    jac[49] = 1;
    jac[55] = 1;
    jac[62] = 1;
    jac[68] = 1;


    return jac_;
}

} // namespace Talos
} // namespace models
} // namespace ct

// clang-format on
