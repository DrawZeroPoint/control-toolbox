/**********************************************************************************************************************
This file is part of the Control Toolbox (https://github.com/ethz-adrl/control-toolbox), copyright by ETH Zurich.
Licensed under the BSD-2 license (see LICENSE file in main directory)
**********************************************************************************************************************/

// clang-format off

#include "FrankaLinearizedForward.h"

namespace ct {
namespace models {
namespace Franka {


const FrankaLinearizedForward::state_matrix_t& FrankaLinearizedForward::getDerivativeState(
    const state_vector_t& x,
    const control_vector_t& u,
    const double t)
{
    double* jac = dFdx_.data();
    Eigen::Matrix<double, 14 + 7, 1> x_in;
    x_in << x, u;

        vX_[0] = 0 - cos(x_in[1]);
    vX_[1] = - -1 * sin(x_in[1]);
    vX_[2] = vX_[1] * x_in[7];
    vX_[3] = vX_[2] * x_in[8];
    vX_[4] = 0 - sin(x_in[1]);
    vX_[5] = vX_[4] * x_in[7];
    vX_[6] = - cos(x_in[1]);
    vX_[7] = vX_[6] * x_in[7];
    vX_[8] = vX_[5] * vX_[7] + vX_[7] * vX_[5];
    vX_[9] = vX_[0] * x_in[7];
    vX_[10] = -1 * vX_[9] + x_in[9];
    vX_[11] = sin(x_in[2]);
    vX_[12] = -0.316 * vX_[11];
    vX_[13] = vX_[12] * vX_[7];
    vX_[14] = -1 * vX_[2];
    vX_[15] = cos(x_in[2]);
    vX_[16] = 0.316 * vX_[15];
    vX_[17] = vX_[12] * vX_[5] + vX_[16] * x_in[8];
    vX_[18] = vX_[10] * vX_[13] + vX_[14] * vX_[17];
    vX_[19] = vX_[15] * vX_[5] + vX_[11] * x_in[8];
    vX_[20] = 0 - vX_[11];
    vX_[21] = vX_[20] * vX_[7];
    vX_[22] = vX_[15] * vX_[7];
    vX_[23] = vX_[20] * vX_[5] + vX_[15] * x_in[8];
    vX_[24] = vX_[19] * vX_[21] + vX_[22] * vX_[23];
    vX_[25] = vX_[19] * vX_[14] + vX_[22] * vX_[10];
    vX_[26] = cos(x_in[3]);
    vX_[27] = sin(x_in[3]);
    vX_[28] = 0 - vX_[27];
    vX_[29] = vX_[28] * vX_[19] + vX_[26] * vX_[10];
    vX_[30] = -0.316 * vX_[15];
    vX_[31] = vX_[30] * vX_[7];
    vX_[32] = -0.0825 * vX_[14] + -1 * vX_[31];
    vX_[33] = vX_[28] * vX_[22] + vX_[26] * vX_[14];
    vX_[34] = -0.316 * vX_[11];
    vX_[35] = vX_[30] * vX_[5] + vX_[34] * x_in[8];
    vX_[36] = -0.0825 * vX_[10] + -1 * vX_[35];
    vX_[37] = -1 * vX_[23] + x_in[10];
    vX_[38] = -0.0825 * vX_[26];
    vX_[39] = 0 - vX_[27];
    vX_[40] = vX_[38] * vX_[21] + vX_[39] * vX_[13];
    vX_[41] = -1 * vX_[21];
    vX_[42] = vX_[38] * vX_[23] + vX_[39] * vX_[17];
    vX_[43] = vX_[29] * vX_[32] + vX_[33] * vX_[36] - (vX_[37] * vX_[40] + vX_[41] * vX_[42]);
    vX_[44] = vX_[29] * vX_[41] + vX_[33] * vX_[37];
    vX_[45] = vX_[37] * vX_[41] + vX_[41] * vX_[37];
    vX_[46] = vX_[26] * vX_[19] + vX_[27] * vX_[10];
    vX_[47] = vX_[26] * vX_[22] + vX_[27] * vX_[14];
    vX_[48] = vX_[46] * vX_[47] + vX_[47] * vX_[46];
    vX_[49] = sin(x_in[5]);
    vX_[50] = cos(x_in[6]);
    vX_[51] = -0.088 * vX_[50];
    vX_[52] = 0.735522 * vX_[51];
    vX_[53] = sin(x_in[6]);
    vX_[54] = -0.088 * vX_[53];
    vX_[55] = -1 * vX_[54];
    vX_[56] = 0.733529826725046 * vX_[55] - -0.00492748973017121 * vX_[51];
    vX_[57] = -0.00492748973017121 * vX_[55] - 0.72333422730663 * vX_[51];
    vX_[58] = vX_[56] * vX_[55] - vX_[57] * vX_[51];
    vX_[59] = 0.0128378177682551 + -0.015470969748 * vX_[51] + vX_[52] * vX_[51] - vX_[58];
    vX_[60] = 0 - 0.735522 * vX_[55];
    vX_[61] = 0.0147502744829958 - -0.006254879088 * vX_[55] - vX_[60] * vX_[55] - vX_[58];
    vX_[62] = -0.000581908304553986 + -0.003127439544 * vX_[51] + vX_[60] * vX_[51] - -0.007735484874 * vX_[55];
    vX_[63] = vX_[53] * vX_[61] + vX_[50] * vX_[62];
    vX_[64] = vX_[53] * vX_[62] + vX_[50] * vX_[59];
    vX_[65] = vX_[63] * vX_[53] + vX_[64] * vX_[50];
    vX_[66] = 0 - vX_[53];
    vX_[67] = -0.000103758764 + vX_[64] * vX_[66] + vX_[63] * vX_[50];
    vX_[68] = 0.011794561 + vX_[58] + vX_[65];
    vX_[69] = vX_[67] / vX_[68];
    vX_[65] = 0.0024804603 + vX_[59] + vX_[61] + vX_[58] - vX_[65] - vX_[67] * vX_[69];
    vX_[70] = cos(x_in[5]);
    vX_[71] = 0.0456552523787178 * vX_[55] - 0.000863976360112152 * vX_[51];
    vX_[72] = -1 * 2. * vX_[71];
    vX_[73] = 0.00106536842387716 * vX_[55] - -0.0426708405168984 * vX_[51];
    vX_[74] = -1 * 2. * vX_[73];
    vX_[71] = 0 - vX_[71];
    vX_[75] = 9.3569106e-05 + vX_[66] * vX_[73] + vX_[50] * vX_[71];
    vX_[76] = vX_[75] / vX_[68];
    vX_[77] = 0.0015241109 + vX_[72] * vX_[66] + vX_[74] * vX_[50] + vX_[50] * vX_[73] + vX_[53] * vX_[71] - vX_[67] * vX_[76];
    vX_[78] = vX_[49] * vX_[65] + vX_[70] * vX_[77];
    vX_[58] = 0.010567766 + vX_[58] - vX_[75] * vX_[76];
    vX_[79] = vX_[49] * vX_[77] + vX_[70] * vX_[58];
    vX_[80] = vX_[78] * vX_[49] + vX_[79] * vX_[70];
    vX_[81] = 0.0108695105 + vX_[80];
    vX_[82] = vX_[29] + x_in[11];
    vX_[83] = cos(x_in[4]);
    vX_[84] = -0.384 * vX_[83];
    vX_[85] = sin(x_in[4]);
    vX_[86] = -0.0825 * vX_[85];
    vX_[87] = -0.384 * vX_[85];
    vX_[88] = 0 - vX_[85];
    vX_[89] = -0.0825 * vX_[27];
    vX_[90] = vX_[89] * vX_[21] + vX_[26] * vX_[13];
    vX_[91] = vX_[84] * vX_[41] + vX_[86] * vX_[33] + vX_[87] * vX_[47] + vX_[88] * vX_[32] + vX_[83] * vX_[90];
    vX_[92] = vX_[89] * vX_[23] + vX_[26] * vX_[17];
    vX_[93] = vX_[84] * vX_[37] + vX_[86] * vX_[29] + vX_[87] * vX_[46] + vX_[88] * vX_[36] + vX_[83] * vX_[92];
    vX_[94] = vX_[82] * vX_[91] + vX_[33] * vX_[93];
    vX_[95] = 0 - vX_[85];
    vX_[96] = vX_[83] * vX_[46] + vX_[95] * vX_[37];
    vX_[97] = -0.0825 * vX_[41] + vX_[40];
    vX_[98] = vX_[83] * vX_[47] + vX_[95] * vX_[41];
    vX_[99] = -0.0825 * vX_[37] + vX_[42];
    vX_[100] = vX_[96] * vX_[97] + vX_[98] * vX_[99];
    vX_[101] = 0 - vX_[83];
    vX_[102] = vX_[95] * vX_[47] + vX_[101] * vX_[41];
    vX_[103] = vX_[95] * vX_[46] + vX_[101] * vX_[37];
    vX_[104] = vX_[96] * vX_[102] + vX_[98] * vX_[103];
    vX_[105] = vX_[96] * vX_[33] + vX_[98] * vX_[82];
    vX_[106] = 0 - vX_[49];
    vX_[107] = vX_[106] * vX_[96] + vX_[70] * vX_[82];
    vX_[108] = 0.384 * vX_[85];
    vX_[109] = -0.0825 * vX_[83];
    vX_[110] = -0.384 * vX_[83];
    vX_[111] = 0 - vX_[83];
    vX_[85] = 0 - vX_[85];
    vX_[112] = vX_[108] * vX_[41] + vX_[109] * vX_[33] + vX_[110] * vX_[47] + vX_[111] * vX_[32] + vX_[85] * vX_[90];
    vX_[113] = -1 * vX_[112];
    vX_[114] = vX_[106] * vX_[98] + vX_[70] * vX_[33];
    vX_[115] = vX_[108] * vX_[37] + vX_[109] * vX_[29] + vX_[110] * vX_[46] + vX_[111] * vX_[36] + vX_[85] * vX_[92];
    vX_[116] = -1 * vX_[115];
    vX_[117] = -1 * vX_[103] + x_in[12];
    vX_[118] = vX_[106] * vX_[91] + vX_[70] * vX_[97];
    vX_[119] = -1 * vX_[102];
    vX_[120] = vX_[106] * vX_[93] + vX_[70] * vX_[99];
    vX_[121] = vX_[107] * vX_[113] + vX_[114] * vX_[116] - (vX_[117] * vX_[118] + vX_[119] * vX_[120]);
    vX_[122] = vX_[107] * vX_[119] + vX_[114] * vX_[117];
    vX_[123] = vX_[117] * vX_[119] + vX_[119] * vX_[117];
    vX_[124] = vX_[70] * vX_[96] + vX_[49] * vX_[82];
    vX_[125] = vX_[70] * vX_[98] + vX_[49] * vX_[33];
    vX_[126] = vX_[124] * vX_[125] + vX_[125] * vX_[124];
    vX_[127] = -0.088 * vX_[50];
    vX_[128] = vX_[50] * vX_[124] + vX_[53] * vX_[117];
    vX_[129] = -0.088 * vX_[119] + -1 * vX_[118];
    vX_[130] = vX_[50] * vX_[125] + vX_[53] * vX_[119];
    vX_[131] = -0.088 * vX_[117] + -1 * vX_[120];
    vX_[132] = vX_[128] * vX_[129] + vX_[130] * vX_[131];
    vX_[133] = -1 * vX_[107] + x_in[13];
    vX_[134] = vX_[70] * vX_[91] + vX_[49] * vX_[97];
    vX_[135] = vX_[53] * vX_[113] + vX_[50] * vX_[134] + vX_[54] * vX_[114];
    vX_[136] = -1 * vX_[114];
    vX_[137] = vX_[70] * vX_[93] + vX_[49] * vX_[99];
    vX_[138] = vX_[53] * vX_[116] + vX_[50] * vX_[137] + vX_[54] * vX_[107];
    vX_[139] = vX_[133] * vX_[135] + vX_[136] * vX_[138];
    vX_[140] = vX_[132] - vX_[139];
    vX_[141] = vX_[66] * vX_[125] + vX_[50] * vX_[119];
    vX_[142] = vX_[66] * vX_[124] + vX_[50] * vX_[117];
    vX_[143] = vX_[128] * vX_[141] + vX_[130] * vX_[142];
    vX_[144] = vX_[142] * vX_[136] + vX_[141] * vX_[133];
    vX_[145] = (- vX_[130]) * x_in[13];
    vX_[146] = vX_[141] * x_in[13];
    vX_[147] = (- vX_[135]) * x_in[13];
    vX_[148] = 0 - vX_[53];
    vX_[149] = vX_[50] * vX_[113] + vX_[148] * vX_[134] + vX_[127] * vX_[114];
    vX_[150] = vX_[149] * x_in[13];
    vX_[151] = vX_[128] * vX_[136] + vX_[130] * vX_[133];
    vX_[152] = vX_[50] * vX_[116] + vX_[148] * vX_[137] + vX_[127] * vX_[107];
    vX_[129] = vX_[142] * vX_[129] + vX_[141] * vX_[131] - (vX_[133] * vX_[149] + vX_[136] * vX_[152]);
    vX_[153] = vX_[142] * vX_[141] + vX_[141] * vX_[142];
    vX_[154] = vX_[128] * vX_[130] + vX_[130] * vX_[128];
    vX_[139] = 0.007735484874 * (vX_[139] - vX_[132]) + -0.002420945 * vX_[143] + -0.0005483591 * vX_[151] - -0.003127439544 * vX_[129] - -0.0016724827 * vX_[144] - -0.0003951087 * (vX_[153] - vX_[154]);
    vX_[132] = 0 - vX_[139];
    vX_[136] = vX_[133] * vX_[136] + vX_[136] * vX_[133];
    vX_[155] = -0.735522 * vX_[140] + 0.007735484874 * vX_[143] + 0.045305948634 * vX_[144] + 0.000863976360112152 * vX_[145] + -0.0426708405168984 * vX_[146] + 0.72333422730663 * vX_[147] + -0.00492748973017121 * vX_[150] + (0.007735484874 * vX_[132]) / 0.0049096523 - -0.003127439544 * (vX_[136] + vX_[154]);
    vX_[156] = 0.735522 * vX_[129] + 0.045305948634 * vX_[151] + -0.003127439544 * vX_[143] + 0.0456552523787178 * vX_[145] + 0.00106536842387716 * vX_[146] + -0.00492748973017121 * vX_[147] + 0.733529826725046 * vX_[150] + (0.003127439544 * vX_[132]) / 0.0049096523 - 0.007735484874 * (vX_[136] + vX_[153]);
    vX_[157] = (- vX_[125]) * x_in[12];
    vX_[158] = vX_[114] * x_in[12];
    vX_[159] = -0.007735484874 + vX_[52];
    vX_[160] = 0 - vX_[159];
    vX_[161] = -0.003127439544 + vX_[60];
    vX_[162] = vX_[50] * vX_[160] + vX_[66] * vX_[161];
    vX_[163] = 0.100241616695 + vX_[162];
    vX_[164] = vX_[163] / vX_[68];
    vX_[165] = 0 - vX_[75] * vX_[164];
    vX_[166] = (- vX_[134]) * x_in[12];
    vX_[159] = -1 * (vX_[57] + vX_[159]);
    vX_[167] = -1 * (vX_[56] + vX_[161]);
    vX_[168] = vX_[53] * vX_[160] + vX_[50] * vX_[161];
    vX_[169] = -0.0426708405168984 * vX_[53] + 0.000863976360112152 * vX_[50];
    vX_[170] = 0.00106536842387716 * vX_[53] + 0.0456552523787178 * vX_[50];
    vX_[171] = 0.023526756935 + vX_[169] * vX_[66] + vX_[170] * vX_[50];
    vX_[172] = vX_[171] / vX_[68];
    vX_[173] = -0.017527158935 + vX_[159] * vX_[66] + vX_[167] * vX_[50] + vX_[168] - vX_[75] * vX_[172];
    vX_[174] = vX_[118] * x_in[12];
    vX_[175] = vX_[117] * vX_[134] + vX_[119] * vX_[137];
    vX_[113] = vX_[124] * vX_[113] + vX_[125] * vX_[116];
    vX_[176] = vX_[124] * vX_[114] + vX_[125] * vX_[107];
    vX_[119] = vX_[124] * vX_[119] + vX_[125] * vX_[117];
    vX_[149] = vX_[128] * vX_[149] + vX_[130] * vX_[152] - (vX_[142] * vX_[135] + vX_[141] * vX_[138]);
    vX_[129] = 0.045305948634 * vX_[129] + -0.0003951087 * vX_[144] + -0.0016724827 * (vX_[136] - vX_[154]) + 0.0128378177682551 * vX_[145] + -0.000581908304553986 * vX_[146] + 0.000863976360112152 * vX_[147] + 0.0456552523787178 * vX_[150] + (-0.0005483591 * vX_[132]) / 0.0049096523 - 0.007735484874 * vX_[149] - -0.0104103567 * vX_[151] - -0.0005483591 * vX_[143];
    vX_[136] = -0.003127439544 * vX_[149] + 0.045305948634 * vX_[140] + -0.0079894117 * vX_[144] + -0.0016724827 * vX_[143] + -0.000581908304553986 * vX_[145] + 0.0147502744829958 * vX_[146] + -0.0426708405168984 * vX_[147] + 0.00106536842387716 * vX_[150] + (-0.0016724827 * vX_[132]) / 0.0049096523 - -0.0003951087 * vX_[151] - -0.0005483591 * (vX_[136] - vX_[153]);
    vX_[149] = 0.735522 * vX_[149] + 0.007735484874 * vX_[151] + -0.003127439544 * vX_[144] + -0.007735484874 * vX_[145] + -0.003127439544 * vX_[146] - 0.045305948634 * (vX_[153] + vX_[154]);
    vX_[154] = vX_[107] * vX_[114] + vX_[114] * vX_[107];
    vX_[153] = 0.100241616695 * (vX_[175] - vX_[113]) + 0.0080873057 * vX_[176] + 9.3569106e-05 * vX_[119] + vX_[50] * vX_[129] + vX_[53] * vX_[136] + -0.088 * vX_[149] - -0.023526756935 * vX_[121] - -0.000103758764 * vX_[122] - 0.0015241109 * (vX_[154] - vX_[126]);
    vX_[151] = 0 - vX_[153];
    vX_[134] = vX_[124] * vX_[118] + vX_[125] * vX_[120] - (vX_[107] * vX_[134] + vX_[114] * vX_[137]);
    vX_[139] = -0.017527158935 * vX_[121] + 0.0015241109 * vX_[122] + -0.000103758764 * (vX_[123] - vX_[126]) + vX_[127] * vX_[155] + vX_[54] * vX_[156] + -1 * (vX_[139] + (0.0049096523 * vX_[132]) / 0.0049096523) + vX_[58] * vX_[157] + vX_[77] * vX_[158] + vX_[165] * vX_[166] + vX_[173] * vX_[174] + (vX_[75] * vX_[151]) / vX_[68] - 0.100241616695 * vX_[134] - 0.0093141007 * vX_[119] - 9.3569106e-05 * vX_[176];
    vX_[113] = vX_[113] - vX_[175];
    vX_[168] = 0.017527158935 - vX_[168] - vX_[67] * vX_[164];
    vX_[175] = -0.0426708405168984 * vX_[50] + 0.000863976360112152 * vX_[66];
    vX_[125] = 0.00106536842387716 * vX_[50] + 0.0456552523787178 * vX_[66];
    vX_[118] = vX_[175] * vX_[66] + vX_[125] * vX_[50] - vX_[67] * vX_[172];
    vX_[136] = -0.023526756935 * vX_[134] + -0.017527158935 * vX_[113] + 0.001226795 * vX_[122] + -0.000103758764 * vX_[176] + vX_[66] * vX_[129] + vX_[50] * vX_[136] + vX_[77] * vX_[157] + vX_[65] * vX_[158] + vX_[168] * vX_[166] + vX_[118] * vX_[174] + (vX_[67] * vX_[151]) / vX_[68] - 0.0015241109 * vX_[119] - 9.3569106e-05 * (vX_[123] - vX_[154]);
    vX_[97] = vX_[103] * vX_[97] + vX_[102] * vX_[99] - (vX_[82] * vX_[112] + vX_[33] * vX_[115]);
    vX_[129] = vX_[103] * vX_[33] + vX_[102] * vX_[82];
    vX_[114] = vX_[103] * vX_[102] + vX_[102] * vX_[103];
    vX_[144] = vX_[96] * vX_[98] + vX_[98] * vX_[96];
    vX_[143] = -0.014653732538 * (vX_[94] - vX_[100]) + -0.0079672 * vX_[104] + 0.002164052 * vX_[105] + vX_[70] * vX_[139] + vX_[49] * vX_[136] - 0.05034347249 * vX_[97] - -0.0046002455 * vX_[129] - -0.0015152446 * (vX_[114] - vX_[144]);
    vX_[140] = 0 - vX_[143];
    vX_[100] = vX_[100] - vX_[94];
    vX_[94] = vX_[170] * vX_[53] + vX_[169] * vX_[50];
    vX_[141] = vX_[94] / vX_[68];
    vX_[162] = -0.100241616695 + vX_[159] * vX_[50] + vX_[167] * vX_[53] - vX_[162] - vX_[75] * vX_[141];
    vX_[135] = -0.023526756935 + vX_[175] * vX_[50] + vX_[125] * vX_[53] - vX_[67] * vX_[141];
    vX_[130] = 0 - vX_[163] * vX_[141];
    vX_[177] = -0.00492748973017121 * vX_[53] + -0.0121877726933703 * vX_[50];
    vX_[178] = -0.00199217327495371 * vX_[53] + -0.00492748973017121 * vX_[50];
    vX_[179] = vX_[177] * vX_[66] + vX_[178] * vX_[50] - vX_[171] * vX_[141];
    vX_[180] = 0 - vX_[162];
    vX_[181] = vX_[70] * vX_[180] + vX_[106] * vX_[135];
    vX_[182] = -0.014653732538 + vX_[181];
    vX_[183] = vX_[182] / vX_[81];
    vX_[184] = 0 - 0.002164052 * vX_[183];
    vX_[185] = (- vX_[98]) * x_in[11];
    vX_[186] = vX_[49] * vX_[180] + vX_[70] * vX_[135];
    vX_[187] = -0.0046002455 + vX_[79] * vX_[106] + vX_[78] * vX_[70];
    vX_[188] = 0.047121686402 - vX_[186] - vX_[187] * vX_[183];
    vX_[189] = vX_[102] * x_in[11];
    vX_[190] = vX_[178] * vX_[53] + vX_[177] * vX_[50];
    vX_[191] = 2.402077 + vX_[190] - vX_[94] * vX_[141];
    vX_[192] = 1.225946 + vX_[191] - vX_[182] * vX_[183];
    vX_[193] = (- vX_[91]) * x_in[11];
    vX_[194] = -1 * 2. * vX_[130];
    vX_[195] = -1 * 2. * vX_[179];
    vX_[196] = 0 - vX_[130];
    vX_[197] = vX_[49] * vX_[168] + vX_[70] * vX_[165];
    vX_[198] = vX_[49] * vX_[118] + vX_[70] * vX_[173];
    vX_[199] = -0.05034347249 + vX_[197] * vX_[106] + vX_[198] * vX_[70];
    vX_[200] = vX_[194] * vX_[106] + vX_[195] * vX_[70] + vX_[70] * vX_[179] + vX_[49] * vX_[196] - vX_[199] * vX_[183];
    vX_[201] = vX_[112] * x_in[11];
    vX_[202] = vX_[82] * vX_[33] + vX_[33] * vX_[82];
    vX_[134] = -1.225946 * vX_[100] + -0.014653732538 * vX_[104] + -0.047121686402 * vX_[129] + -1 * (1.666555 * vX_[134] + 0.100241616695 * vX_[119] + -0.023526756935 * vX_[122] + vX_[50] * vX_[155] + vX_[53] * vX_[156] + vX_[162] * vX_[157] + vX_[135] * vX_[158] + vX_[130] * vX_[166] + vX_[179] * vX_[174] + (vX_[94] * vX_[151]) / vX_[68] - -0.017527158935 * (vX_[154] + vX_[126])) + vX_[184] * vX_[185] + vX_[188] * vX_[189] + vX_[192] * vX_[193] + vX_[200] * vX_[201] + (vX_[182] * vX_[140]) / vX_[81] - 0.05034347249 * (vX_[202] + vX_[144]);
    vX_[203] = 2.402077 - vX_[163] * vX_[164];
    vX_[204] = 0 - vX_[171] * vX_[164];
    vX_[113] = -1.666555 * vX_[113] + 0.100241616695 * vX_[176] + -0.017527158935 * vX_[122] + -1 * vX_[149] + vX_[165] * vX_[157] + vX_[168] * vX_[158] + vX_[203] * vX_[166] + vX_[204] * vX_[174] + (vX_[163] * vX_[151]) / vX_[68] - -0.023526756935 * (vX_[123] + vX_[126]);
    vX_[190] = 2.38789705403168 - vX_[190] - vX_[171] * vX_[172];
    vX_[154] = 1.666555 * vX_[121] + -0.017527158935 * vX_[119] + -0.023526756935 * vX_[176] + vX_[148] * vX_[155] + vX_[50] * vX_[156] + vX_[173] * vX_[157] + vX_[118] * vX_[158] + vX_[204] * vX_[166] + vX_[190] * vX_[174] + (vX_[171] * vX_[151]) / vX_[68] - 0.100241616695 * (vX_[123] + vX_[154]);
    vX_[119] = -1 * vX_[162];
    vX_[176] = -1 * vX_[135];
    vX_[156] = vX_[199] / vX_[81];
    vX_[186] = -0.047121686402 + vX_[119] * vX_[106] + vX_[176] * vX_[70] + vX_[186] - 0.002164052 * vX_[156];
    vX_[155] = vX_[70] * vX_[168] + vX_[106] * vX_[165];
    vX_[123] = vX_[70] * vX_[118] + vX_[106] * vX_[173];
    vX_[121] = vX_[155] * vX_[106] + vX_[123] * vX_[70] - vX_[187] * vX_[156];
    vX_[149] = vX_[203] - vX_[191];
    vX_[126] = vX_[190] - vX_[191];
    vX_[122] = vX_[49] * vX_[126] + vX_[70] * vX_[204];
    vX_[205] = vX_[49] * vX_[204] + vX_[70] * vX_[149];
    vX_[206] = vX_[122] * vX_[49] + vX_[205] * vX_[70];
    vX_[207] = 1.225946 + vX_[149] + vX_[126] + vX_[191] - vX_[206] - vX_[199] * vX_[156];
    vX_[208] = 1.225946 * vX_[97] + -0.047121686402 * vX_[105] + 0.05034347249 * vX_[104] + vX_[106] * vX_[113] + vX_[70] * vX_[154] + vX_[186] * vX_[185] + vX_[121] * vX_[189] + vX_[200] * vX_[193] + vX_[207] * vX_[201] + (vX_[199] * vX_[140]) / vX_[81] - -0.014653732538 * (vX_[202] + vX_[114]);
    vX_[209] = -0.0825 * vX_[101];
    vX_[210] = vX_[86] * vX_[207] - vX_[209] * vX_[200];
    vX_[211] = vX_[86] * vX_[200] - vX_[209] * vX_[192];
    vX_[212] = vX_[210] * vX_[86] - vX_[211] * vX_[209];
    vX_[213] = vX_[83] * vX_[110] + vX_[95] * vX_[108];
    vX_[214] = vX_[213] * vX_[200];
    vX_[215] = vX_[198] * vX_[49] + vX_[197] * vX_[70];
    vX_[216] = vX_[215] / vX_[81];
    vX_[217] = vX_[205] * vX_[106] + vX_[122] * vX_[70] - vX_[199] * vX_[216];
    vX_[218] = vX_[86] * vX_[217];
    vX_[219] = vX_[214] - vX_[218];
    vX_[220] = vX_[106] * vX_[179] + vX_[70] * vX_[196] - vX_[182] * vX_[216];
    vX_[221] = vX_[213] * vX_[192] - vX_[86] * vX_[220];
    vX_[222] = vX_[121] * vX_[86] + vX_[219] * vX_[86] - vX_[188] * vX_[209] - vX_[221] * vX_[209];
    vX_[223] = vX_[209] * vX_[217] - vX_[213] * vX_[207];
    vX_[224] = vX_[209] * vX_[220];
    vX_[214] = vX_[224] - vX_[214];
    vX_[225] = vX_[186] * vX_[86] + vX_[223] * vX_[86] - vX_[184] * vX_[209] - vX_[214] * vX_[209];
    vX_[226] = 0 - vX_[225];
    vX_[227] = -0.0016444875 + vX_[95] * vX_[222] + vX_[83] * vX_[226];
    vX_[228] = 2. * vX_[188];
    vX_[229] = vX_[187] / vX_[81];
    vX_[80] = 0.03942757 + vX_[58] + vX_[65] - vX_[80] - vX_[187] * vX_[229];
    vX_[230] = 0.05034347249 + vX_[155] * vX_[70] + vX_[123] * vX_[49] - vX_[187] * vX_[216];
    vX_[231] = 2. * vX_[230];
    vX_[206] = 1.225946 + vX_[191] + vX_[206] - vX_[215] * vX_[216];
    vX_[191] = vX_[213] * vX_[220] - vX_[86] * vX_[206];
    vX_[232] = vX_[228] * vX_[213] + vX_[80] + vX_[221] * vX_[213] - vX_[231] * vX_[86] - vX_[191] * vX_[86] - vX_[212];
    vX_[233] = 0.002164052 / vX_[81];
    vX_[234] = -0.0015152446 - vX_[187] * vX_[233];
    vX_[181] = 0.014653732538 + vX_[119] * vX_[70] + vX_[176] * vX_[49] - vX_[181] - 0.002164052 * vX_[216];
    vX_[235] = vX_[184] * vX_[213] + vX_[234] + vX_[230] * vX_[209] + vX_[191] * vX_[209] - vX_[121] * vX_[213] - vX_[181] * vX_[86] - vX_[219] * vX_[213];
    vX_[236] = vX_[95] * vX_[232] + vX_[101] * vX_[235];
    vX_[237] = 2. * vX_[181];
    vX_[238] = 0.03146037 - 0.002164052 * vX_[233];
    vX_[239] = vX_[209] * vX_[206] - vX_[213] * vX_[217];
    vX_[240] = 2. * vX_[186];
    vX_[241] = vX_[237] * vX_[209] + vX_[238] + vX_[239] * vX_[209] - vX_[240] * vX_[213] - vX_[223] * vX_[213] - vX_[212];
    vX_[242] = vX_[95] * vX_[235] + vX_[101] * vX_[241];
    vX_[243] = vX_[236] * vX_[95] + vX_[242] * vX_[101];
    vX_[244] = 0.07758615 + vX_[212] + vX_[243];
    vX_[245] = vX_[227] / vX_[244];
    vX_[246] = 0.03239943 + vX_[212] - vX_[227] * vX_[245];
    vX_[247] = (- vX_[47]) * x_in[10];
    vX_[225] = 2. * vX_[225];
    vX_[248] = 2. * vX_[222];
    vX_[249] = 0.003905355 + vX_[242] * vX_[95] + vX_[236] * vX_[83];
    vX_[250] = 0.027715843 + vX_[225] * vX_[95] + vX_[248] * vX_[83] + vX_[101] * vX_[222] + vX_[95] * vX_[226] - vX_[249] * vX_[245];
    vX_[251] = vX_[33] * x_in[10];
    vX_[224] = vX_[218] - vX_[224];
    vX_[218] = vX_[239] + vX_[181];
    vX_[252] = 0 - vX_[218];
    vX_[253] = vX_[191] + vX_[230];
    vX_[254] = vX_[83] * vX_[252] + vX_[95] * vX_[253];
    vX_[255] = -0.19076837715 + vX_[254];
    vX_[256] = vX_[255] / vX_[244];
    vX_[257] = vX_[224] - vX_[227] * vX_[256];
    vX_[258] = (- vX_[90]) * x_in[10];
    vX_[218] = vX_[211] + vX_[218];
    vX_[259] = vX_[210] + vX_[253];
    vX_[260] = vX_[95] * vX_[252] + vX_[101] * vX_[253];
    vX_[261] = vX_[221] + vX_[188];
    vX_[262] = vX_[184] + vX_[214] - vX_[224];
    vX_[263] = vX_[95] * vX_[261] + vX_[101] * vX_[262];
    vX_[264] = vX_[121] + vX_[219] - vX_[224];
    vX_[265] = vX_[223] + vX_[186];
    vX_[266] = vX_[95] * vX_[264] + vX_[101] * vX_[265];
    vX_[267] = -0.374644408005 + vX_[263] * vX_[95] + vX_[266] * vX_[83];
    vX_[268] = vX_[267] / vX_[244];
    vX_[269] = 0.09850206933 + vX_[218] * vX_[95] + vX_[259] * vX_[83] + vX_[260] - vX_[227] * vX_[268];
    vX_[270] = vX_[40] * x_in[10];
    vX_[271] = vX_[37] * vX_[90] + vX_[41] * vX_[92];
    vX_[32] = vX_[46] * vX_[32] + vX_[47] * vX_[36];
    vX_[272] = vX_[46] * vX_[33] + vX_[47] * vX_[29];
    vX_[41] = vX_[46] * vX_[41] + vX_[47] * vX_[37];
    vX_[112] = vX_[96] * vX_[112] + vX_[98] * vX_[115] - (vX_[103] * vX_[91] + vX_[102] * vX_[93]);
    vX_[97] = -0.047121686402 * vX_[97] + -0.0015152446 * vX_[129] + -0.0046002455 * (vX_[202] - vX_[144]) + -1 * (vX_[153] + (vX_[68] * vX_[151]) / vX_[68]) + vX_[238] * vX_[185] + vX_[234] * vX_[189] + vX_[184] * vX_[193] + vX_[186] * vX_[201] + (0.002164052 * vX_[140]) / vX_[81] - -0.014653732538 * vX_[112] - -0.0285580595 * vX_[105] - 0.002164052 * vX_[104];
    vX_[202] = 0.05034347249 * vX_[112] + -0.047121686402 * vX_[100] + -0.0205908595 * vX_[129] + -0.0046002455 * vX_[104] + vX_[106] * vX_[139] + vX_[70] * vX_[136] + vX_[234] * vX_[185] + vX_[80] * vX_[189] + vX_[188] * vX_[193] + vX_[121] * vX_[201] + (vX_[187] * vX_[140]) / vX_[81] - -0.0015152446 * vX_[105] - 0.002164052 * (vX_[202] - vX_[114]);
    vX_[112] = 1.225946 * vX_[112] + -0.014653732538 * vX_[105] + 0.05034347249 * vX_[129] + vX_[70] * vX_[113] + vX_[49] * vX_[154] + vX_[181] * vX_[185] + vX_[230] * vX_[189] + vX_[220] * vX_[193] + vX_[217] * vX_[201] + (vX_[215] * vX_[140]) / vX_[81] - -0.047121686402 * (vX_[114] + vX_[144]);
    vX_[154] = vX_[29] * vX_[33] + vX_[33] * vX_[29];
    vX_[113] = -0.19076837715 * (vX_[271] - vX_[32]) + -0.035277844 * vX_[272] + -0.0016444875 * vX_[41] + vX_[101] * vX_[97] + vX_[95] * vX_[202] + -0.0825 * vX_[112] + vX_[108] * vX_[134] + vX_[84] * vX_[208] - 0.374644408005 * vX_[43] - 0.003905355 * vX_[44] - 0.027715843 * (vX_[154] - vX_[48]);
    vX_[144] = 0 - vX_[113];
    vX_[90] = vX_[46] * vX_[40] + vX_[47] * vX_[42] - (vX_[29] * vX_[90] + vX_[33] * vX_[92]);
    vX_[143] = 0.09850206933 * vX_[43] + 0.027715843 * vX_[44] + 0.003905355 * (vX_[45] - vX_[48]) + (vX_[81] * vX_[140]) / vX_[81] + vX_[143] + vX_[109] * vX_[134] + vX_[86] * vX_[208] + vX_[246] * vX_[247] + vX_[250] * vX_[251] + vX_[257] * vX_[258] + vX_[269] * vX_[270] + (vX_[227] * vX_[144]) / vX_[244] - -0.19076837715 * vX_[90] - 0.00990887600000001 * vX_[41] - -0.0016444875 * vX_[272];
    vX_[32] = vX_[32] - vX_[271];
    vX_[271] = vX_[249] / vX_[244];
    vX_[243] = 0.067677274 + vX_[241] + vX_[232] + vX_[212] - vX_[243] - vX_[249] * vX_[271];
    vX_[260] = -0.09850206933 - vX_[260] - vX_[249] * vX_[256];
    vX_[212] = vX_[83] * vX_[261] + vX_[95] * vX_[262];
    vX_[47] = vX_[83] * vX_[264] + vX_[95] * vX_[265];
    vX_[40] = vX_[212] * vX_[95] + vX_[47] * vX_[83] + vX_[224] - vX_[249] * vX_[268];
    vX_[202] = 0.374644408005 * vX_[90] + 0.09850206933 * vX_[32] + 0.04518672 * vX_[44] + 0.003905355 * vX_[272] + vX_[95] * vX_[97] + vX_[83] * vX_[202] + vX_[110] * vX_[134] + vX_[87] * vX_[208] + vX_[250] * vX_[247] + vX_[243] * vX_[251] + vX_[260] * vX_[258] + vX_[40] * vX_[270] + (vX_[249] * vX_[144]) / vX_[244] - 0.027715843 * vX_[41] - -0.0016444875 * (vX_[45] - vX_[154]);
    vX_[224] = vX_[263] * vX_[101] + vX_[266] * vX_[95] + vX_[224];
    vX_[97] = vX_[224] / vX_[244];
    vX_[254] = 0.19076837715 + vX_[218] * vX_[101] + vX_[259] * vX_[95] - vX_[254] - vX_[227] * vX_[97];
    vX_[33] = 0.374644408005 + vX_[212] * vX_[101] + vX_[47] * vX_[95] - vX_[249] * vX_[97];
    vX_[114] = 0 - vX_[220];
    vX_[129] = vX_[95] * vX_[217] + vX_[83] * vX_[114] - vX_[255] * vX_[97];
    vX_[105] = vX_[192] - vX_[206];
    vX_[100] = vX_[95] * vX_[200] + vX_[101] * vX_[105];
    vX_[136] = vX_[207] - vX_[206];
    vX_[139] = vX_[95] * vX_[136] + vX_[101] * vX_[200];
    vX_[104] = vX_[100] * vX_[95] + vX_[139] * vX_[83] - vX_[267] * vX_[97];
    vX_[90] = 3.587895 * vX_[90] + -0.19076837715 * vX_[41] + 0.374644408005 * vX_[44] + vX_[111] * vX_[134] + vX_[88] * vX_[208] + vX_[254] * vX_[247] + vX_[33] * vX_[251] + vX_[129] * vX_[258] + vX_[104] * vX_[270] + (vX_[224] * vX_[144]) / vX_[244] - 0.09850206933 * (vX_[154] + vX_[48]);
    vX_[153] = -(vX_[10] * vX_[31] + vX_[14] * vX_[35]);
    vX_[102] = vX_[23] * vX_[14] + vX_[21] * vX_[10];
    vX_[98] = vX_[23] * vX_[21] + vX_[21] * vX_[23];
    vX_[91] = vX_[19] * vX_[22] + vX_[22] * vX_[19];
    vX_[273] = 0.088844724872 * vX_[18] + -0.003616545 * vX_[24] + -0.004377257 * vX_[25] + vX_[26] * vX_[143] + vX_[27] * vX_[202] + -0.0825 * vX_[90] - 0.126729164208 * vX_[153] - -0.0054876483 * vX_[102] - -0.008248334 * (vX_[98] - vX_[91]);
    vX_[274] = -1 * vX_[89];
    vX_[275] = vX_[139] * vX_[95] + vX_[100] * vX_[101];
    vX_[276] = 3.587895 + vX_[105] + vX_[136] + vX_[206] - vX_[275] - vX_[267] * vX_[268];
    vX_[277] = -0.0825 * vX_[26];
    vX_[278] = 2. * vX_[220];
    vX_[279] = 2. * vX_[217];
    vX_[280] = vX_[278] * vX_[95] + vX_[279] * vX_[83] + vX_[101] * vX_[217] + vX_[95] * vX_[114] - vX_[267] * vX_[256];
    vX_[281] = vX_[274] * vX_[276] - vX_[277] * vX_[280];
    vX_[282] = 3.587895 + vX_[206] - vX_[255] * vX_[256];
    vX_[283] = vX_[274] * vX_[280] - vX_[277] * vX_[282];
    vX_[284] = vX_[281] * vX_[274] - vX_[283] * vX_[277];
    vX_[285] = 2. * vX_[33];
    vX_[275] = 3.587895 + vX_[206] + vX_[275] - vX_[224] * vX_[97];
    vX_[286] = -0 - vX_[274] * vX_[275];
    vX_[287] = vX_[243] - vX_[285] * vX_[274] - vX_[286] * vX_[274] - vX_[284];
    vX_[288] = vX_[250] + vX_[33] * vX_[277] + vX_[286] * vX_[277] - vX_[254] * vX_[274];
    vX_[289] = vX_[27] * vX_[287] + vX_[26] * vX_[288];
    vX_[290] = 2. * vX_[254];
    vX_[291] = vX_[277] * vX_[275];
    vX_[292] = vX_[290] * vX_[277] + vX_[246] + vX_[291] * vX_[277] - vX_[284];
    vX_[293] = vX_[27] * vX_[288] + vX_[26] * vX_[292];
    vX_[294] = vX_[289] * vX_[27] + vX_[293] * vX_[26];
    vX_[295] = 0.018249203 + vX_[284] + vX_[294];
    vX_[296] = 0 - vX_[273];
    vX_[297] = vX_[291] + vX_[254];
    vX_[298] = 0 - vX_[297];
    vX_[299] = vX_[286] + vX_[33];
    vX_[300] = vX_[27] * vX_[298] + vX_[26] * vX_[299];
    vX_[301] = -0.0054876483 + vX_[293] * vX_[28] + vX_[289] * vX_[26];
    vX_[302] = vX_[26] * vX_[298] + vX_[28] * vX_[299];
    vX_[303] = 0.088844724872 + vX_[302];
    vX_[304] = vX_[303] / vX_[295];
    vX_[305] = 0.214708623208 - vX_[300] - vX_[301] * vX_[304];
    vX_[306] = 2. * vX_[305];
    vX_[307] = vX_[15] * vX_[30] + vX_[11] * vX_[34];
    vX_[308] = vX_[301] / vX_[295];
    vX_[294] = 0.056494925 + vX_[292] + vX_[287] + vX_[284] - vX_[294] - vX_[301] * vX_[308];
    vX_[309] = 3.228604 + vX_[275] - vX_[303] * vX_[304];
    vX_[310] = vX_[307] * vX_[309];
    vX_[311] = vX_[306] * vX_[307] + vX_[294] + vX_[310] * vX_[307];
    vX_[312] = vX_[274] * vX_[104];
    vX_[313] = vX_[277] * vX_[129];
    vX_[314] = vX_[312] - vX_[313];
    vX_[312] = -0 - vX_[312];
    vX_[315] = 0 - vX_[274] * vX_[129];
    vX_[316] = vX_[40] * vX_[274] + vX_[312] * vX_[274] - vX_[260] * vX_[277] - vX_[315] * vX_[277];
    vX_[317] = vX_[277] * vX_[104];
    vX_[318] = vX_[269] * vX_[274] + vX_[317] * vX_[274] - vX_[257] * vX_[277] - vX_[313] * vX_[277];
    vX_[319] = 0 - vX_[318];
    vX_[320] = -0.004377257 + vX_[28] * vX_[316] + vX_[26] * vX_[319];
    vX_[321] = vX_[314] - vX_[320] * vX_[304];
    vX_[318] = -1 * 2. * vX_[318];
    vX_[322] = -1 * 2. * vX_[316];
    vX_[323] = vX_[320] / vX_[295];
    vX_[324] = -0.008248334 + vX_[318] * vX_[28] + vX_[322] * vX_[26] + vX_[26] * vX_[316] + vX_[27] * vX_[319] - vX_[301] * vX_[323];
    vX_[325] = vX_[315] + vX_[260];
    vX_[326] = vX_[257] + vX_[313] - vX_[314];
    vX_[327] = vX_[26] * vX_[325] + vX_[28] * vX_[326];
    vX_[328] = vX_[40] + vX_[312] - vX_[314];
    vX_[329] = vX_[317] + vX_[269];
    vX_[330] = vX_[26] * vX_[328] + vX_[28] * vX_[329];
    vX_[331] = vX_[27] * vX_[325] + vX_[26] * vX_[326];
    vX_[332] = vX_[27] * vX_[328] + vX_[26] * vX_[329];
    vX_[333] = -0.126729164208 + vX_[331] * vX_[28] + vX_[332] * vX_[26];
    vX_[334] = vX_[333] / vX_[295];
    vX_[335] = vX_[327] * vX_[28] + vX_[330] * vX_[26] + vX_[314] - vX_[301] * vX_[334];
    vX_[336] = -1 * 2. * vX_[129];
    vX_[337] = -1 * 2. * vX_[104];
    vX_[338] = 0 - vX_[129];
    vX_[339] = vX_[336] * vX_[28] + vX_[337] * vX_[26] + vX_[26] * vX_[104] + vX_[27] * vX_[338] - vX_[333] * vX_[304];
    vX_[340] = vX_[307] * vX_[339];
    vX_[341] = vX_[321] * vX_[307] + vX_[324] - vX_[335] * vX_[307] - vX_[340] * vX_[307];
    vX_[342] = vX_[11] * vX_[311] + vX_[15] * vX_[341];
    vX_[284] = 0.05287838 + vX_[284] - vX_[320] * vX_[323];
    vX_[297] = -1 * (vX_[283] + vX_[297]);
    vX_[343] = -1 * (vX_[281] + vX_[299]);
    vX_[300] = -0.214708623208 + vX_[297] * vX_[28] + vX_[343] * vX_[26] + vX_[300] - vX_[320] * vX_[334];
    vX_[344] = 2. * vX_[300];
    vX_[345] = vX_[282] - vX_[275];
    vX_[346] = vX_[276] - vX_[275];
    vX_[347] = vX_[27] * vX_[280] + vX_[26] * vX_[345];
    vX_[348] = vX_[27] * vX_[346] + vX_[26] * vX_[280];
    vX_[349] = 3.228604 + vX_[345] + vX_[346] + vX_[275] - vX_[347] * vX_[26] - vX_[348] * vX_[27] - vX_[333] * vX_[334];
    vX_[350] = -0 - vX_[307] * vX_[349];
    vX_[351] = vX_[284] - vX_[344] * vX_[307] - vX_[350] * vX_[307];
    vX_[352] = vX_[11] * vX_[341] + vX_[15] * vX_[351];
    vX_[353] = vX_[342] * vX_[11] + vX_[352] * vX_[15];
    vX_[354] = 0.026534991 + vX_[353];
    vX_[355] = 0.0007689361 / vX_[354];
    vX_[356] = 0.028124284 - 0.0007689361 * vX_[355];
    vX_[357] = (- vX_[7]) * x_in[8];
    vX_[358] = 0.010261103 + vX_[352] * vX_[20] + vX_[342] * vX_[15];
    vX_[359] = -0.003983359 - vX_[358] * vX_[355];
    vX_[360] = vX_[9] * vX_[2] + vX_[2] * vX_[9];
    vX_[361] = vX_[7] * x_in[8];
    vX_[7] = vX_[5] * vX_[2] + vX_[7] * vX_[9];
    vX_[14] = vX_[10] * vX_[14] + vX_[14] * vX_[10];
    vX_[32] = -3.587895 * vX_[32] + -0.19076837715 * vX_[272] + 0.09850206933 * vX_[44] + vX_[112] + vX_[257] * vX_[247] + vX_[260] * vX_[251] + vX_[282] * vX_[258] + vX_[280] * vX_[270] + (vX_[255] * vX_[144]) / vX_[244] - 0.374644408005 * (vX_[45] + vX_[48]);
    vX_[154] = 3.587895 * vX_[43] + 0.09850206933 * vX_[41] + 0.374644408005 * vX_[272] + vX_[85] * vX_[134] + vX_[83] * vX_[208] + vX_[269] * vX_[247] + vX_[40] * vX_[251] + vX_[280] * vX_[258] + vX_[276] * vX_[270] + (vX_[267] * vX_[144]) / vX_[244] - -0.19076837715 * (vX_[45] + vX_[154]);
    vX_[41] = (- vX_[22]) * x_in[9];
    vX_[272] = vX_[21] * x_in[9];
    vX_[208] = (- vX_[13]) * x_in[9];
    vX_[134] = vX_[31] * x_in[9];
    vX_[31] = vX_[19] * vX_[31] + vX_[22] * vX_[35] - (vX_[23] * vX_[13] + vX_[21] * vX_[17]);
    vX_[113] = -0.214708623208 * vX_[153] + -0.008248334 * vX_[102] + -0.0054876483 * (vX_[14] - vX_[91]) + vX_[38] * vX_[32] + vX_[89] * vX_[154] + -1 * (vX_[113] + (vX_[244] * vX_[144]) / vX_[244]) + vX_[284] * vX_[41] + vX_[324] * vX_[272] + vX_[321] * vX_[208] + vX_[300] * vX_[134] + (vX_[320] * vX_[296]) / vX_[295] - 0.088844724872 * vX_[31] - -0.038245722 * vX_[25] - -0.004377257 * vX_[24];
    vX_[18] = - vX_[18];
    vX_[31] = 0.126729164208 * vX_[31] + -0.214708623208 * vX_[18] + -0.034629177 * vX_[102] + -0.0054876483 * vX_[24] + vX_[28] * vX_[143] + vX_[26] * vX_[202] + vX_[324] * vX_[41] + vX_[294] * vX_[272] + vX_[305] * vX_[208] + vX_[335] * vX_[134] + (vX_[301] * vX_[296]) / vX_[295] - -0.008248334 * vX_[25] - -0.004377257 * (vX_[14] - vX_[98]);
    vX_[18] = -3.228604 * vX_[18] + 0.088844724872 * vX_[24] + -0.214708623208 * vX_[102] + -1 * vX_[90] + vX_[321] * vX_[41] + vX_[305] * vX_[272] + vX_[309] * vX_[208] + vX_[339] * vX_[134] + (vX_[303] * vX_[296]) / vX_[295] - 0.126729164208 * (vX_[14] + vX_[91]);
    vX_[154] = 3.228604 * vX_[153] + -0.214708623208 * vX_[25] + 0.126729164208 * vX_[24] + vX_[39] * vX_[32] + vX_[26] * vX_[154] + vX_[300] * vX_[41] + vX_[335] * vX_[272] + vX_[339] * vX_[208] + vX_[349] * vX_[134] + (vX_[333] * vX_[296]) / vX_[295] - 0.088844724872 * (vX_[14] + vX_[98]);
    vX_[32] = 0.010261103 * vX_[3] + -0.003983359 * (vX_[360] - vX_[8]) - 0.0007689361 * vX_[361] - 0.019620772 * vX_[7] - vX_[15] * vX_[113] - vX_[11] * vX_[31] - vX_[34] * vX_[18] - vX_[16] * vX_[154];
    vX_[14] = vX_[9] * x_in[8];
    vX_[98] = x_in[8] * x_in[8];
    vX_[153] = vX_[5] * vX_[5];
    vX_[25] = vX_[10] * vX_[17];
    vX_[24] = vX_[19] * vX_[23];
    vX_[91] = vX_[19] * vX_[10];
    vX_[102] = vX_[29] * vX_[36] - vX_[37] * vX_[42];
    vX_[90] = vX_[29] * vX_[37];
    vX_[202] = vX_[37] * vX_[37];
    vX_[143] = vX_[46] * vX_[46];
    vX_[22] = vX_[82] * vX_[93];
    vX_[21] = vX_[96] * vX_[99];
    vX_[13] = vX_[96] * vX_[103];
    vX_[45] = vX_[96] * vX_[82];
    vX_[43] = vX_[107] * vX_[116] - vX_[117] * vX_[120];
    vX_[112] = vX_[107] * vX_[117];
    vX_[48] = vX_[117] * vX_[117];
    vX_[44] = vX_[124] * vX_[124];
    vX_[2] = vX_[128] * vX_[131];
    vX_[362] = vX_[133] * vX_[138];
    vX_[363] = vX_[2] - vX_[362];
    vX_[364] = vX_[128] * vX_[142];
    vX_[365] = vX_[142] * vX_[133];
    vX_[366] = 0 - vX_[128];
    vX_[367] = vX_[366] * x_in[13];
    vX_[368] = vX_[142] * x_in[13];
    vX_[369] = 0 - vX_[138];
    vX_[370] = vX_[369] * x_in[13];
    vX_[371] = vX_[152] * x_in[13];
    vX_[372] = vX_[128] * vX_[133];
    vX_[373] = vX_[142] * vX_[131] - vX_[133] * vX_[152];
    vX_[374] = vX_[142] * vX_[142];
    vX_[375] = vX_[128] * vX_[128];
    vX_[362] = 0.007735484874 * (vX_[362] - vX_[2]) + -0.002420945 * vX_[364] + -0.0005483591 * vX_[372] - -0.003127439544 * vX_[373] - -0.0016724827 * vX_[365] - -0.0003951087 * (vX_[374] - vX_[375]);
    vX_[2] = x_in[20] - vX_[362];
    vX_[376] = vX_[133] * vX_[133];
    vX_[377] = -0.735522 * vX_[363] + 0.007735484874 * vX_[364] + 0.045305948634 * vX_[365] + 0.000863976360112152 * vX_[367] + -0.0426708405168984 * vX_[368] + 0.72333422730663 * vX_[370] + -0.00492748973017121 * vX_[371] + (0.007735484874 * vX_[2]) / 0.0049096523 - -0.003127439544 * (vX_[376] + vX_[375]);
    vX_[378] = 0.735522 * vX_[373] + 0.045305948634 * vX_[372] + -0.003127439544 * vX_[364] + 0.0456552523787178 * vX_[367] + 0.00106536842387716 * vX_[368] + -0.00492748973017121 * vX_[370] + 0.733529826725046 * vX_[371] + (0.003127439544 * vX_[2]) / 0.0049096523 - 0.007735484874 * (vX_[376] + vX_[374]);
    vX_[379] = 0 - vX_[124];
    vX_[380] = vX_[379] * x_in[12];
    vX_[381] = vX_[107] * x_in[12];
    vX_[382] = 0 - vX_[137];
    vX_[383] = vX_[382] * x_in[12];
    vX_[384] = vX_[120] * x_in[12];
    vX_[385] = vX_[117] * vX_[137];
    vX_[386] = vX_[124] * vX_[116];
    vX_[387] = vX_[124] * vX_[107];
    vX_[388] = vX_[124] * vX_[117];
    vX_[389] = vX_[128] * vX_[152] - vX_[142] * vX_[138];
    vX_[373] = 0.045305948634 * vX_[373] + -0.0003951087 * vX_[365] + -0.0016724827 * (vX_[376] - vX_[375]) + 0.0128378177682551 * vX_[367] + -0.000581908304553986 * vX_[368] + 0.000863976360112152 * vX_[370] + 0.0456552523787178 * vX_[371] + (-0.0005483591 * vX_[2]) / 0.0049096523 - 0.007735484874 * vX_[389] - -0.0104103567 * vX_[372] - -0.0005483591 * vX_[364];
    vX_[376] = -0.003127439544 * vX_[389] + 0.045305948634 * vX_[363] + -0.0079894117 * vX_[365] + -0.0016724827 * vX_[364] + -0.000581908304553986 * vX_[367] + 0.0147502744829958 * vX_[368] + -0.0426708405168984 * vX_[370] + 0.00106536842387716 * vX_[371] + (-0.0016724827 * vX_[2]) / 0.0049096523 - -0.0003951087 * vX_[372] - -0.0005483591 * (vX_[376] - vX_[374]);
    vX_[389] = 0.735522 * vX_[389] + 0.007735484874 * vX_[372] + -0.003127439544 * vX_[365] + -0.007735484874 * vX_[367] + -0.003127439544 * vX_[368] - 0.045305948634 * (vX_[374] + vX_[375]);
    vX_[375] = vX_[107] * vX_[107];
    vX_[374] = 0.100241616695 * (vX_[385] - vX_[386]) + 0.0080873057 * vX_[387] + 9.3569106e-05 * vX_[388] + vX_[50] * vX_[373] + vX_[53] * vX_[376] + -0.088 * vX_[389] - -0.023526756935 * vX_[43] - -0.000103758764 * vX_[112] - 0.0015241109 * (vX_[375] - vX_[44]);
    vX_[372] = x_in[19] - vX_[374];
    vX_[368] = (vX_[75] * vX_[372]) / vX_[68];
    vX_[367] = vX_[124] * vX_[120] - vX_[107] * vX_[137];
    vX_[2] = -0.017527158935 * vX_[43] + 0.0015241109 * vX_[112] + -0.000103758764 * (vX_[48] - vX_[44]) + vX_[127] * vX_[377] + vX_[54] * vX_[378] + -1 * (vX_[362] + (0.0049096523 * vX_[2]) / 0.0049096523) + vX_[58] * vX_[380] + vX_[77] * vX_[381] + vX_[165] * vX_[383] + vX_[173] * vX_[384] + vX_[368] - 0.100241616695 * vX_[367] - 0.0093141007 * vX_[388] - 9.3569106e-05 * vX_[387];
    vX_[386] = vX_[386] - vX_[385];
    vX_[385] = (vX_[67] * vX_[372]) / vX_[68];
    vX_[362] = -0.023526756935 * vX_[367] + -0.017527158935 * vX_[386] + 0.001226795 * vX_[112] + -0.000103758764 * vX_[387] + vX_[66] * vX_[373] + vX_[50] * vX_[376] + vX_[77] * vX_[380] + vX_[65] * vX_[381] + vX_[168] * vX_[383] + vX_[118] * vX_[384] + vX_[385] - 0.0015241109 * vX_[388] - 9.3569106e-05 * (vX_[48] - vX_[375]);
    vX_[365] = vX_[103] * vX_[99] - vX_[82] * vX_[115];
    vX_[371] = vX_[103] * vX_[82];
    vX_[370] = vX_[103] * vX_[103];
    vX_[364] = vX_[96] * vX_[96];
    vX_[363] = -0.014653732538 * (vX_[22] - vX_[21]) + -0.0079672 * vX_[13] + 0.002164052 * vX_[45] + vX_[70] * vX_[2] + vX_[49] * vX_[362] - 0.05034347249 * vX_[365] - -0.0046002455 * vX_[371] - -0.0015152446 * (vX_[370] - vX_[364]);
    vX_[390] = x_in[18] - vX_[363];
    vX_[391] = (vX_[81] * vX_[390]) / vX_[81];
    vX_[21] = vX_[21] - vX_[22];
    vX_[22] = (vX_[94] * vX_[372]) / vX_[68];
    vX_[392] = 0 - vX_[96];
    vX_[393] = vX_[392] * x_in[11];
    vX_[394] = vX_[103] * x_in[11];
    vX_[395] = 0 - vX_[93];
    vX_[396] = vX_[395] * x_in[11];
    vX_[397] = vX_[115] * x_in[11];
    vX_[398] = (vX_[182] * vX_[390]) / vX_[81];
    vX_[399] = vX_[82] * vX_[82];
    vX_[367] = -1.225946 * vX_[21] + -0.014653732538 * vX_[13] + -0.047121686402 * vX_[371] + -1 * (1.666555 * vX_[367] + 0.100241616695 * vX_[388] + -0.023526756935 * vX_[112] + vX_[50] * vX_[377] + vX_[53] * vX_[378] + vX_[162] * vX_[380] + vX_[135] * vX_[381] + vX_[130] * vX_[383] + vX_[179] * vX_[384] + vX_[22] - -0.017527158935 * (vX_[375] + vX_[44])) + vX_[184] * vX_[393] + vX_[188] * vX_[394] + vX_[192] * vX_[396] + vX_[200] * vX_[397] + vX_[398] - 0.05034347249 * (vX_[399] + vX_[364]);
    vX_[400] = (vX_[163] * vX_[372]) / vX_[68];
    vX_[386] = -1.666555 * vX_[386] + 0.100241616695 * vX_[387] + -0.017527158935 * vX_[112] + -1 * vX_[389] + vX_[165] * vX_[380] + vX_[168] * vX_[381] + vX_[203] * vX_[383] + vX_[204] * vX_[384] + vX_[400] - -0.023526756935 * (vX_[48] + vX_[44]);
    vX_[389] = (vX_[171] * vX_[372]) / vX_[68];
    vX_[375] = 1.666555 * vX_[43] + -0.017527158935 * vX_[388] + -0.023526756935 * vX_[387] + vX_[148] * vX_[377] + vX_[50] * vX_[378] + vX_[173] * vX_[380] + vX_[118] * vX_[381] + vX_[204] * vX_[383] + vX_[190] * vX_[384] + vX_[389] - 0.100241616695 * (vX_[48] + vX_[375]);
    vX_[388] = (vX_[199] * vX_[390]) / vX_[81];
    vX_[387] = 1.225946 * vX_[365] + -0.047121686402 * vX_[45] + 0.05034347249 * vX_[13] + vX_[106] * vX_[386] + vX_[70] * vX_[375] + vX_[186] * vX_[393] + vX_[121] * vX_[394] + vX_[200] * vX_[396] + vX_[207] * vX_[397] + vX_[388] - -0.014653732538 * (vX_[399] + vX_[370]);
    vX_[48] = 0 - vX_[46];
    vX_[43] = vX_[48] * x_in[10];
    vX_[44] = vX_[29] * x_in[10];
    vX_[112] = 0 - vX_[92];
    vX_[401] = vX_[112] * x_in[10];
    vX_[402] = vX_[42] * x_in[10];
    vX_[403] = vX_[37] * vX_[92];
    vX_[404] = vX_[46] * vX_[36];
    vX_[405] = vX_[46] * vX_[29];
    vX_[406] = vX_[46] * vX_[37];
    vX_[407] = (vX_[68] * vX_[372]) / vX_[68];
    vX_[408] = (0.002164052 * vX_[390]) / vX_[81];
    vX_[409] = vX_[96] * vX_[115] - vX_[103] * vX_[93];
    vX_[365] = -0.047121686402 * vX_[365] + -0.0015152446 * vX_[371] + -0.0046002455 * (vX_[399] - vX_[364]) + -1 * (vX_[374] + vX_[407]) + vX_[238] * vX_[393] + vX_[234] * vX_[394] + vX_[184] * vX_[396] + vX_[186] * vX_[397] + vX_[408] - -0.014653732538 * vX_[409] - -0.0285580595 * vX_[45] - 0.002164052 * vX_[13];
    vX_[374] = (vX_[187] * vX_[390]) / vX_[81];
    vX_[399] = 0.05034347249 * vX_[409] + -0.047121686402 * vX_[21] + -0.0205908595 * vX_[371] + -0.0046002455 * vX_[13] + vX_[106] * vX_[2] + vX_[70] * vX_[362] + vX_[234] * vX_[393] + vX_[80] * vX_[394] + vX_[188] * vX_[396] + vX_[121] * vX_[397] + vX_[374] - -0.0015152446 * vX_[45] - 0.002164052 * (vX_[399] - vX_[370]);
    vX_[21] = (vX_[215] * vX_[390]) / vX_[81];
    vX_[409] = 1.225946 * vX_[409] + -0.014653732538 * vX_[45] + 0.05034347249 * vX_[371] + vX_[70] * vX_[386] + vX_[49] * vX_[375] + vX_[181] * vX_[393] + vX_[230] * vX_[394] + vX_[220] * vX_[396] + vX_[217] * vX_[397] + vX_[21] - -0.047121686402 * (vX_[370] + vX_[364]);
    vX_[364] = vX_[29] * vX_[29];
    vX_[370] = -0.19076837715 * (vX_[403] - vX_[404]) + -0.035277844 * vX_[405] + -0.0016444875 * vX_[406] + vX_[101] * vX_[365] + vX_[95] * vX_[399] + -0.0825 * vX_[409] + vX_[108] * vX_[367] + vX_[84] * vX_[387] - 0.374644408005 * vX_[102] - 0.003905355 * vX_[90] - 0.027715843 * (vX_[364] - vX_[143]);
    vX_[371] = x_in[17] - vX_[370];
    vX_[45] = (vX_[227] * vX_[371]) / vX_[244];
    vX_[13] = vX_[46] * vX_[42] - vX_[29] * vX_[92];
    vX_[363] = 0.09850206933 * vX_[102] + 0.027715843 * vX_[90] + 0.003905355 * (vX_[202] - vX_[143]) + vX_[391] + vX_[363] + vX_[109] * vX_[367] + vX_[86] * vX_[387] + vX_[246] * vX_[43] + vX_[250] * vX_[44] + vX_[257] * vX_[401] + vX_[269] * vX_[402] + vX_[45] - -0.19076837715 * vX_[13] - 0.00990887600000001 * vX_[406] - -0.0016444875 * vX_[405];
    vX_[404] = vX_[404] - vX_[403];
    vX_[403] = (vX_[249] * vX_[371]) / vX_[244];
    vX_[410] = 0.374644408005 * vX_[13] + 0.09850206933 * vX_[404] + 0.04518672 * vX_[90] + 0.003905355 * vX_[405] + vX_[95] * vX_[365] + vX_[83] * vX_[399] + vX_[110] * vX_[367] + vX_[87] * vX_[387] + vX_[250] * vX_[43] + vX_[243] * vX_[44] + vX_[260] * vX_[401] + vX_[40] * vX_[402] + vX_[403] - 0.027715843 * vX_[406] - -0.0016444875 * (vX_[202] - vX_[364]);
    vX_[411] = (vX_[224] * vX_[371]) / vX_[244];
    vX_[13] = 3.587895 * vX_[13] + -0.19076837715 * vX_[406] + 0.374644408005 * vX_[90] + vX_[111] * vX_[367] + vX_[88] * vX_[387] + vX_[254] * vX_[43] + vX_[33] * vX_[44] + vX_[129] * vX_[401] + vX_[104] * vX_[402] + vX_[411] - 0.09850206933 * (vX_[364] + vX_[143]);
    vX_[412] = -0 - vX_[10] * vX_[35];
    vX_[413] = vX_[23] * vX_[10];
    vX_[414] = vX_[23] * vX_[23];
    vX_[415] = vX_[19] * vX_[19];
    vX_[416] = 0.088844724872 * vX_[25] + -0.003616545 * vX_[24] + -0.004377257 * vX_[91] + vX_[26] * vX_[363] + vX_[27] * vX_[410] + -0.0825 * vX_[13] - 0.126729164208 * vX_[412] - -0.0054876483 * vX_[413] - -0.008248334 * (vX_[414] - vX_[415]);
    vX_[417] = x_in[16] - vX_[416];
    vX_[418] = (vX_[295] * vX_[417]) / vX_[295];
    vX_[419] = 0 - vX_[5];
    vX_[420] = vX_[419] * x_in[8];
    vX_[421] = vX_[9] * vX_[9];
    vX_[422] = vX_[5] * x_in[8];
    vX_[423] = vX_[5] * vX_[9];
    vX_[424] = vX_[10] * vX_[10];
    vX_[425] = (vX_[255] * vX_[371]) / vX_[244];
    vX_[404] = -3.587895 * vX_[404] + -0.19076837715 * vX_[405] + 0.09850206933 * vX_[90] + vX_[409] + vX_[257] * vX_[43] + vX_[260] * vX_[44] + vX_[282] * vX_[401] + vX_[280] * vX_[402] + vX_[425] - 0.374644408005 * (vX_[202] + vX_[143]);
    vX_[409] = (vX_[267] * vX_[371]) / vX_[244];
    vX_[364] = 3.587895 * vX_[102] + 0.09850206933 * vX_[406] + 0.374644408005 * vX_[405] + vX_[85] * vX_[367] + vX_[83] * vX_[387] + vX_[269] * vX_[43] + vX_[40] * vX_[44] + vX_[280] * vX_[401] + vX_[276] * vX_[402] + vX_[409] - -0.19076837715 * (vX_[202] + vX_[364]);
    vX_[406] = (vX_[244] * vX_[371]) / vX_[244];
    vX_[405] = 0 - vX_[19];
    vX_[202] = vX_[405] * x_in[9];
    vX_[102] = vX_[23] * x_in[9];
    vX_[143] = 0 - vX_[17];
    vX_[90] = vX_[143] * x_in[9];
    vX_[426] = vX_[35] * x_in[9];
    vX_[427] = (vX_[320] * vX_[417]) / vX_[295];
    vX_[428] = vX_[19] * vX_[35] - vX_[23] * vX_[17];
    vX_[370] = -0.214708623208 * vX_[412] + -0.008248334 * vX_[413] + -0.0054876483 * (vX_[424] - vX_[415]) + vX_[38] * vX_[404] + vX_[89] * vX_[364] + -1 * (vX_[370] + vX_[406]) + vX_[284] * vX_[202] + vX_[324] * vX_[102] + vX_[321] * vX_[90] + vX_[300] * vX_[426] + vX_[427] - 0.088844724872 * vX_[428] - -0.038245722 * vX_[91] - -0.004377257 * vX_[24];
    vX_[25] = -0 - vX_[25];
    vX_[429] = (vX_[301] * vX_[417]) / vX_[295];
    vX_[428] = 0.126729164208 * vX_[428] + -0.214708623208 * vX_[25] + -0.034629177 * vX_[413] + -0.0054876483 * vX_[24] + vX_[28] * vX_[363] + vX_[26] * vX_[410] + vX_[324] * vX_[202] + vX_[294] * vX_[102] + vX_[305] * vX_[90] + vX_[335] * vX_[426] + vX_[429] - -0.008248334 * vX_[91] - -0.004377257 * (vX_[424] - vX_[414]);
    vX_[430] = (vX_[303] * vX_[417]) / vX_[295];
    vX_[25] = -3.228604 * vX_[25] + 0.088844724872 * vX_[24] + -0.214708623208 * vX_[413] + -1 * vX_[13] + vX_[321] * vX_[202] + vX_[305] * vX_[102] + vX_[309] * vX_[90] + vX_[339] * vX_[426] + vX_[430] - 0.126729164208 * (vX_[424] + vX_[415]);
    vX_[415] = (vX_[333] * vX_[417]) / vX_[295];
    vX_[424] = 3.228604 * vX_[412] + -0.214708623208 * vX_[91] + 0.126729164208 * vX_[24] + vX_[39] * vX_[404] + vX_[26] * vX_[364] + vX_[300] * vX_[202] + vX_[335] * vX_[102] + vX_[339] * vX_[90] + vX_[349] * vX_[426] + vX_[415] - 0.088844724872 * (vX_[424] + vX_[414]);
    vX_[414] = 0.010261103 * vX_[14] + -0.003983359 * (vX_[421] - vX_[153]) + x_in[15] - 0.0007689361 * vX_[422] - 0.019620772 * vX_[423] - vX_[15] * vX_[370] - vX_[11] * vX_[428] - vX_[34] * vX_[25] - vX_[16] * vX_[424];
    vX_[412] = (0.0007689361 * vX_[414]) / vX_[354];
    vX_[416] = -0.003983359 * vX_[14] + 0.010261103 * (vX_[98] - vX_[153]) + -1 * (vX_[416] + vX_[418]) + vX_[356] * vX_[420] + vX_[359] * vX_[14] + vX_[412] - 0.018031479 * vX_[422] - 0.0007689361 * vX_[423];
    vX_[153] = vX_[358] / vX_[354];
    vX_[353] = 0.008503512 + vX_[351] + vX_[311] - vX_[353] - vX_[358] * vX_[153];
    vX_[91] = (vX_[358] * vX_[414]) / vX_[354];
    vX_[423] = -0.001589293 * vX_[14] + 0.010261103 * vX_[423] + vX_[20] * vX_[370] + vX_[15] * vX_[428] + vX_[30] * vX_[25] + vX_[12] * vX_[424] + vX_[359] * vX_[420] + vX_[353] * vX_[14] + vX_[91] - -0.003983359 * vX_[422] - 0.0007689361 * (vX_[98] - vX_[421]);
    vX_[422] = vX_[310] + vX_[305];
    vX_[421] = vX_[321] - vX_[340];
    vX_[98] = vX_[15] * vX_[422] + vX_[20] * vX_[421];
    vX_[24] = vX_[340] + vX_[335];
    vX_[413] = vX_[350] + vX_[300];
    vX_[13] = vX_[15] * vX_[24] + vX_[20] * vX_[413];
    vX_[431] = vX_[11] * vX_[422] + vX_[15] * vX_[421];
    vX_[432] = vX_[11] * vX_[24] + vX_[15] * vX_[413];
    vX_[433] = 0.01857971472 + vX_[431] * vX_[20] + vX_[432] * vX_[15];
    vX_[434] = vX_[433] / vX_[354];
    vX_[435] = vX_[98] * vX_[20] + vX_[13] * vX_[15] - vX_[358] * vX_[434];
    vX_[314] = vX_[331] * vX_[26] + vX_[332] * vX_[27] + vX_[314];
    vX_[436] = vX_[314] / vX_[295];
    vX_[437] = vX_[347] * vX_[28] + vX_[348] * vX_[26] - vX_[333] * vX_[436];
    vX_[302] = -0.088844724872 + vX_[297] * vX_[26] + vX_[343] * vX_[27] - vX_[307] * vX_[437] - vX_[302] - vX_[320] * vX_[436];
    vX_[438] = -1 * vX_[302];
    vX_[439] = vX_[28] * vX_[104] + vX_[26] * vX_[338] - vX_[303] * vX_[436];
    vX_[440] = 0.126729164208 + vX_[327] * vX_[26] + vX_[330] * vX_[27] + vX_[307] * vX_[439] - vX_[301] * vX_[436];
    vX_[441] = -1 * vX_[440];
    vX_[302] = -0 - vX_[302];
    vX_[442] = vX_[11] * vX_[302] + vX_[15] * vX_[440];
    vX_[443] = 0.00226100637 + vX_[438] * vX_[20] + vX_[441] * vX_[15] + vX_[442] - 0.0007689361 * vX_[434];
    vX_[444] = vX_[4] * vX_[435] + vX_[0] * vX_[443];
    vX_[445] = -0.002031994566 + vX_[20] * vX_[440] + vX_[15] * vX_[302];
    vX_[446] = vX_[445] / vX_[354];
    vX_[442] = -0.00226100637 - vX_[442] - vX_[358] * vX_[446];
    vX_[447] = 0 - 0.0007689361 * vX_[446];
    vX_[448] = vX_[4] * vX_[442] + vX_[0] * vX_[447];
    vX_[449] = vX_[4] * vX_[359] + vX_[0] * vX_[356];
    vX_[450] = vX_[4] * vX_[353] + vX_[0] * vX_[359];
    vX_[451] = 0.0092131635 + vX_[449] * vX_[0] + vX_[450] * vX_[4];
    vX_[452] = (x_in[14] - vX_[0] * vX_[416] - vX_[4] * vX_[423] - 9.81 * (vX_[444] * vX_[4] + vX_[448] * vX_[0])) / vX_[451];
    jac[21] = (0 - (vX_[0] * (-0.003983359 * vX_[3] + 0.010261103 * (0 - vX_[8]) + -1 * (vX_[273] + (vX_[295] * vX_[296]) / vX_[295]) + vX_[356] * vX_[357] + vX_[359] * vX_[3] + (0.0007689361 * vX_[32]) / vX_[354] - 0.018031479 * vX_[361] - 0.0007689361 * vX_[7]) + vX_[1] * vX_[416]) - (vX_[4] * (-0.001589293 * vX_[3] + 0.010261103 * vX_[7] + vX_[20] * vX_[113] + vX_[15] * vX_[31] + vX_[30] * vX_[18] + vX_[12] * vX_[154] + vX_[359] * vX_[357] + vX_[353] * vX_[3] + (vX_[358] * vX_[32]) / vX_[354] - -0.003983359 * vX_[361] - 0.0007689361 * (0 - vX_[360])) + vX_[6] * vX_[423]) - 9.81 * (vX_[444] * vX_[6] + (vX_[6] * vX_[435] + vX_[1] * vX_[443]) * vX_[4] + vX_[448] * vX_[1] + (vX_[6] * vX_[442] + vX_[1] * vX_[447]) * vX_[0]) - vX_[452] * (vX_[449] * vX_[1] + (vX_[6] * vX_[359] + vX_[1] * vX_[356]) * vX_[0] + vX_[450] * vX_[6] + (vX_[6] * vX_[353] + vX_[1] * vX_[359]) * vX_[4])) / vX_[451];
    vX_[357] = vX_[0] * jac[21] + vX_[1] * vX_[452] + vX_[357];
    vX_[3] = vX_[4] * jac[21] + vX_[6] * vX_[452] + vX_[3];
    vX_[1] = 9.81 * vX_[1];
    vX_[6] = 9.81 * vX_[6];
    jac[22] = (vX_[32] - 0.0007689361 * vX_[357] - vX_[358] * vX_[3] - vX_[445] * vX_[1] - vX_[433] * vX_[6]) / vX_[354];
    vX_[357] = -1 * vX_[357];
    vX_[41] = vX_[15] * jac[22] + vX_[20] * vX_[3] + vX_[41];
    vX_[272] = vX_[11] * jac[22] + vX_[15] * vX_[3] + vX_[272];
    vX_[1] = -1 * vX_[1];
    vX_[32] = 0 - vX_[11];
    vX_[208] = vX_[34] * jac[22] + vX_[30] * vX_[3] + vX_[32] * vX_[6] + vX_[208];
    vX_[6] = vX_[16] * jac[22] + vX_[12] * vX_[3] + vX_[15] * vX_[6] + vX_[134];
    jac[23] = (vX_[296] - vX_[295] * vX_[357] - vX_[320] * vX_[41] - vX_[301] * vX_[272] - vX_[314] * vX_[1] - vX_[303] * vX_[208] - vX_[333] * vX_[6]) / vX_[295];
    vX_[296] = -1 * vX_[41];
    vX_[357] = vX_[357] + jac[23];
    vX_[247] = vX_[26] * vX_[357] + vX_[28] * vX_[272] + vX_[247];
    vX_[272] = vX_[27] * vX_[357] + vX_[26] * vX_[272] + vX_[251];
    vX_[357] = -0.0825 * vX_[357] + -1 * vX_[208];
    vX_[258] = vX_[26] * vX_[1] + vX_[39] * vX_[6] + vX_[38] * vX_[41] + vX_[258];
    vX_[6] = vX_[27] * vX_[1] + vX_[26] * vX_[6] + vX_[89] * vX_[41] + vX_[270];
    jac[24] = (vX_[144] - vX_[244] * vX_[296] - vX_[227] * vX_[247] - vX_[249] * vX_[272] - vX_[224] * vX_[357] - vX_[255] * vX_[258] - vX_[267] * vX_[6]) / vX_[244];
    vX_[296] = vX_[296] + jac[24];
    vX_[185] = vX_[101] * vX_[296] + vX_[95] * vX_[272] + vX_[185];
    vX_[189] = vX_[95] * vX_[296] + vX_[83] * vX_[272] + vX_[189];
    vX_[258] = -0.0825 * vX_[296] + vX_[258];
    vX_[193] = vX_[108] * vX_[296] + vX_[109] * vX_[247] + vX_[110] * vX_[272] + vX_[111] * vX_[357] + vX_[85] * vX_[6] + vX_[193];
    vX_[296] = vX_[84] * vX_[296] + vX_[86] * vX_[247] + vX_[87] * vX_[272] + vX_[88] * vX_[357] + vX_[83] * vX_[6] + vX_[201];
    jac[25] = (vX_[140] - vX_[81] * vX_[247] - 0.002164052 * vX_[185] - vX_[187] * vX_[189] - vX_[215] * vX_[258] - vX_[182] * vX_[193] - vX_[199] * vX_[296]) / vX_[81];
    vX_[185] = -1 * vX_[185];
    vX_[247] = vX_[247] + jac[25];
    vX_[157] = vX_[70] * vX_[247] + vX_[106] * vX_[189] + vX_[157];
    vX_[247] = vX_[49] * vX_[247] + vX_[70] * vX_[189] + vX_[158];
    vX_[193] = -1 * vX_[193];
    vX_[174] = vX_[49] * vX_[258] + vX_[70] * vX_[296] + vX_[174];
    jac[26] = (vX_[151] - vX_[68] * vX_[185] - vX_[75] * vX_[157] - vX_[67] * vX_[247] - vX_[94] * vX_[193] - vX_[163] * (vX_[70] * vX_[258] + vX_[106] * vX_[296] + vX_[166]) - vX_[171] * vX_[174]) / vX_[68];
    vX_[185] = vX_[185] + jac[26];
    jac[27] = (vX_[132] - 0.0049096523 * -1 * vX_[157] - -0.0005483591 * (vX_[50] * vX_[185] + vX_[66] * vX_[247] + vX_[145]) - -0.0016724827 * (vX_[53] * vX_[185] + vX_[50] * vX_[247] + vX_[146]) - 0.007735484874 * (vX_[50] * vX_[193] + vX_[148] * vX_[174] + vX_[127] * vX_[157] + vX_[147]) - 0.003127439544 * (vX_[53] * vX_[193] + vX_[50] * vX_[174] + vX_[54] * vX_[157] + vX_[150])) / 0.0049096523;
    vX_[185] = cos(x_in[2]);
    vX_[174] = -0.316 * vX_[185];
    vX_[193] = -1 * sin(x_in[2]);
    vX_[247] = 0.316 * vX_[193];
    vX_[157] = vX_[174] * vX_[5] + vX_[247] * x_in[8];
    vX_[132] = vX_[10] * vX_[157];
    vX_[150] = - vX_[185];
    vX_[147] = vX_[150] * vX_[5] + vX_[193] * x_in[8];
    vX_[146] = vX_[193] * vX_[5] + vX_[185] * x_in[8];
    vX_[145] = vX_[19] * vX_[147] + vX_[146] * vX_[23];
    vX_[296] = vX_[146] * vX_[10];
    vX_[258] = -0.316 * vX_[193];
    vX_[151] = -0.316 * vX_[185];
    vX_[166] = vX_[258] * vX_[5] + vX_[151] * x_in[8];
    vX_[189] = -1 * vX_[166];
    vX_[158] = vX_[28] * vX_[146];
    vX_[140] = vX_[38] * vX_[147] + vX_[39] * vX_[157];
    vX_[6] = -1 * vX_[147];
    vX_[357] = vX_[29] * vX_[189] + vX_[158] * vX_[36] - (vX_[37] * vX_[140] + vX_[6] * vX_[42]);
    vX_[272] = vX_[29] * vX_[6] + vX_[158] * vX_[37];
    vX_[201] = vX_[37] * vX_[6] + vX_[6] * vX_[37];
    vX_[144] = vX_[26] * vX_[146];
    vX_[1] = vX_[46] * vX_[144] + vX_[144] * vX_[46];
    vX_[41] = vX_[89] * vX_[147] + vX_[26] * vX_[157];
    vX_[270] = vX_[84] * vX_[6] + vX_[86] * vX_[158] + vX_[87] * vX_[144] + vX_[88] * vX_[189] + vX_[83] * vX_[41];
    vX_[208] = vX_[82] * vX_[270] + vX_[158] * vX_[93];
    vX_[251] = -0.0825 * vX_[6] + vX_[140];
    vX_[3] = vX_[83] * vX_[144] + vX_[95] * vX_[6];
    vX_[134] = vX_[96] * vX_[251] + vX_[3] * vX_[99];
    vX_[450] = vX_[95] * vX_[144] + vX_[101] * vX_[6];
    vX_[449] = vX_[96] * vX_[450] + vX_[3] * vX_[103];
    vX_[448] = vX_[96] * vX_[158] + vX_[3] * vX_[82];
    vX_[447] = vX_[108] * vX_[6] + vX_[109] * vX_[158] + vX_[110] * vX_[144] + vX_[111] * vX_[189] + vX_[85] * vX_[41];
    vX_[442] = -1 * vX_[447];
    vX_[444] = vX_[106] * vX_[3] + vX_[70] * vX_[158];
    vX_[443] = vX_[106] * vX_[270] + vX_[70] * vX_[251];
    vX_[435] = -1 * vX_[450];
    vX_[423] = vX_[107] * vX_[442] + vX_[444] * vX_[116] - (vX_[117] * vX_[443] + vX_[435] * vX_[120]);
    vX_[416] = vX_[107] * vX_[435] + vX_[444] * vX_[117];
    vX_[154] = vX_[117] * vX_[435] + vX_[435] * vX_[117];
    vX_[18] = vX_[70] * vX_[3] + vX_[49] * vX_[158];
    vX_[31] = vX_[124] * vX_[18] + vX_[18] * vX_[124];
    vX_[113] = -0.088 * vX_[435] + -1 * vX_[443];
    vX_[7] = vX_[50] * vX_[18] + vX_[53] * vX_[435];
    vX_[361] = vX_[128] * vX_[113] + vX_[7] * vX_[131];
    vX_[360] = vX_[70] * vX_[270] + vX_[49] * vX_[251];
    vX_[273] = vX_[53] * vX_[442] + vX_[50] * vX_[360] + vX_[54] * vX_[444];
    vX_[8] = -1 * vX_[444];
    vX_[453] = vX_[133] * vX_[273] + vX_[8] * vX_[138];
    vX_[454] = vX_[361] - vX_[453];
    vX_[455] = vX_[66] * vX_[18] + vX_[50] * vX_[435];
    vX_[456] = vX_[128] * vX_[455] + vX_[7] * vX_[142];
    vX_[457] = vX_[142] * vX_[8] + vX_[455] * vX_[133];
    vX_[458] = (- vX_[7]) * x_in[13];
    vX_[459] = vX_[455] * x_in[13];
    vX_[460] = (- vX_[273]) * x_in[13];
    vX_[461] = vX_[50] * vX_[442] + vX_[148] * vX_[360] + vX_[127] * vX_[444];
    vX_[462] = vX_[461] * x_in[13];
    vX_[463] = vX_[128] * vX_[8] + vX_[7] * vX_[133];
    vX_[113] = vX_[142] * vX_[113] + vX_[455] * vX_[131] - (vX_[133] * vX_[461] + vX_[8] * vX_[152]);
    vX_[464] = vX_[142] * vX_[455] + vX_[455] * vX_[142];
    vX_[465] = vX_[128] * vX_[7] + vX_[7] * vX_[128];
    vX_[453] = 0.007735484874 * (vX_[453] - vX_[361]) + -0.002420945 * vX_[456] + -0.0005483591 * vX_[463] - -0.003127439544 * vX_[113] - -0.0016724827 * vX_[457] - -0.0003951087 * (vX_[464] - vX_[465]);
    vX_[361] = 0 - vX_[453];
    vX_[8] = vX_[133] * vX_[8] + vX_[8] * vX_[133];
    vX_[466] = -0.735522 * vX_[454] + 0.007735484874 * vX_[456] + 0.045305948634 * vX_[457] + 0.000863976360112152 * vX_[458] + -0.0426708405168984 * vX_[459] + 0.72333422730663 * vX_[460] + -0.00492748973017121 * vX_[462] + (0.007735484874 * vX_[361]) / 0.0049096523 - -0.003127439544 * (vX_[8] + vX_[465]);
    vX_[467] = 0.735522 * vX_[113] + 0.045305948634 * vX_[463] + -0.003127439544 * vX_[456] + 0.0456552523787178 * vX_[458] + 0.00106536842387716 * vX_[459] + -0.00492748973017121 * vX_[460] + 0.733529826725046 * vX_[462] + (0.003127439544 * vX_[361]) / 0.0049096523 - 0.007735484874 * (vX_[8] + vX_[464]);
    vX_[468] = (- vX_[18]) * x_in[12];
    vX_[469] = vX_[444] * x_in[12];
    vX_[470] = (- vX_[360]) * x_in[12];
    vX_[471] = vX_[443] * x_in[12];
    vX_[472] = vX_[117] * vX_[360] + vX_[435] * vX_[137];
    vX_[442] = vX_[124] * vX_[442] + vX_[18] * vX_[116];
    vX_[473] = vX_[124] * vX_[444] + vX_[18] * vX_[107];
    vX_[435] = vX_[124] * vX_[435] + vX_[18] * vX_[117];
    vX_[461] = vX_[128] * vX_[461] + vX_[7] * vX_[152] - (vX_[142] * vX_[273] + vX_[455] * vX_[138]);
    vX_[113] = 0.045305948634 * vX_[113] + -0.0003951087 * vX_[457] + -0.0016724827 * (vX_[8] - vX_[465]) + 0.0128378177682551 * vX_[458] + -0.000581908304553986 * vX_[459] + 0.000863976360112152 * vX_[460] + 0.0456552523787178 * vX_[462] + (-0.0005483591 * vX_[361]) / 0.0049096523 - 0.007735484874 * vX_[461] - -0.0104103567 * vX_[463] - -0.0005483591 * vX_[456];
    vX_[8] = -0.003127439544 * vX_[461] + 0.045305948634 * vX_[454] + -0.0079894117 * vX_[457] + -0.0016724827 * vX_[456] + -0.000581908304553986 * vX_[458] + 0.0147502744829958 * vX_[459] + -0.0426708405168984 * vX_[460] + 0.00106536842387716 * vX_[462] + (-0.0016724827 * vX_[361]) / 0.0049096523 - -0.0003951087 * vX_[463] - -0.0005483591 * (vX_[8] - vX_[464]);
    vX_[461] = 0.735522 * vX_[461] + 0.007735484874 * vX_[463] + -0.003127439544 * vX_[457] + -0.007735484874 * vX_[458] + -0.003127439544 * vX_[459] - 0.045305948634 * (vX_[464] + vX_[465]);
    vX_[465] = vX_[107] * vX_[444] + vX_[444] * vX_[107];
    vX_[464] = 0.100241616695 * (vX_[472] - vX_[442]) + 0.0080873057 * vX_[473] + 9.3569106e-05 * vX_[435] + vX_[50] * vX_[113] + vX_[53] * vX_[8] + -0.088 * vX_[461] - -0.023526756935 * vX_[423] - -0.000103758764 * vX_[416] - 0.0015241109 * (vX_[465] - vX_[31]);
    vX_[463] = 0 - vX_[464];
    vX_[360] = vX_[124] * vX_[443] + vX_[18] * vX_[120] - (vX_[107] * vX_[360] + vX_[444] * vX_[137]);
    vX_[453] = -0.017527158935 * vX_[423] + 0.0015241109 * vX_[416] + -0.000103758764 * (vX_[154] - vX_[31]) + vX_[127] * vX_[466] + vX_[54] * vX_[467] + -1 * (vX_[453] + (0.0049096523 * vX_[361]) / 0.0049096523) + vX_[58] * vX_[468] + vX_[77] * vX_[469] + vX_[165] * vX_[470] + vX_[173] * vX_[471] + (vX_[75] * vX_[463]) / vX_[68] - 0.100241616695 * vX_[360] - 0.0093141007 * vX_[435] - 9.3569106e-05 * vX_[473];
    vX_[442] = vX_[442] - vX_[472];
    vX_[8] = -0.023526756935 * vX_[360] + -0.017527158935 * vX_[442] + 0.001226795 * vX_[416] + -0.000103758764 * vX_[473] + vX_[66] * vX_[113] + vX_[50] * vX_[8] + vX_[77] * vX_[468] + vX_[65] * vX_[469] + vX_[168] * vX_[470] + vX_[118] * vX_[471] + (vX_[67] * vX_[463]) / vX_[68] - 0.0015241109 * vX_[435] - 9.3569106e-05 * (vX_[154] - vX_[465]);
    vX_[251] = vX_[103] * vX_[251] + vX_[450] * vX_[99] - (vX_[82] * vX_[447] + vX_[158] * vX_[115]);
    vX_[113] = vX_[103] * vX_[158] + vX_[450] * vX_[82];
    vX_[472] = vX_[103] * vX_[450] + vX_[450] * vX_[103];
    vX_[18] = vX_[96] * vX_[3] + vX_[3] * vX_[96];
    vX_[443] = -0.014653732538 * (vX_[208] - vX_[134]) + -0.0079672 * vX_[449] + 0.002164052 * vX_[448] + vX_[70] * vX_[453] + vX_[49] * vX_[8] - 0.05034347249 * vX_[251] - -0.0046002455 * vX_[113] - -0.0015152446 * (vX_[472] - vX_[18]);
    vX_[444] = 0 - vX_[443];
    vX_[134] = vX_[134] - vX_[208];
    vX_[208] = (- vX_[3]) * x_in[11];
    vX_[457] = vX_[450] * x_in[11];
    vX_[456] = (- vX_[270]) * x_in[11];
    vX_[454] = vX_[447] * x_in[11];
    vX_[455] = vX_[82] * vX_[158] + vX_[158] * vX_[82];
    vX_[360] = -1.225946 * vX_[134] + -0.014653732538 * vX_[449] + -0.047121686402 * vX_[113] + -1 * (1.666555 * vX_[360] + 0.100241616695 * vX_[435] + -0.023526756935 * vX_[416] + vX_[50] * vX_[466] + vX_[53] * vX_[467] + vX_[162] * vX_[468] + vX_[135] * vX_[469] + vX_[130] * vX_[470] + vX_[179] * vX_[471] + (vX_[94] * vX_[463]) / vX_[68] - -0.017527158935 * (vX_[465] + vX_[31])) + vX_[184] * vX_[208] + vX_[188] * vX_[457] + vX_[192] * vX_[456] + vX_[200] * vX_[454] + (vX_[182] * vX_[444]) / vX_[81] - 0.05034347249 * (vX_[455] + vX_[18]);
    vX_[442] = -1.666555 * vX_[442] + 0.100241616695 * vX_[473] + -0.017527158935 * vX_[416] + -1 * vX_[461] + vX_[165] * vX_[468] + vX_[168] * vX_[469] + vX_[203] * vX_[470] + vX_[204] * vX_[471] + (vX_[163] * vX_[463]) / vX_[68] - -0.023526756935 * (vX_[154] + vX_[31]);
    vX_[465] = 1.666555 * vX_[423] + -0.017527158935 * vX_[435] + -0.023526756935 * vX_[473] + vX_[148] * vX_[466] + vX_[50] * vX_[467] + vX_[173] * vX_[468] + vX_[118] * vX_[469] + vX_[204] * vX_[470] + vX_[190] * vX_[471] + (vX_[171] * vX_[463]) / vX_[68] - 0.100241616695 * (vX_[154] + vX_[465]);
    vX_[435] = 1.225946 * vX_[251] + -0.047121686402 * vX_[448] + 0.05034347249 * vX_[449] + vX_[106] * vX_[442] + vX_[70] * vX_[465] + vX_[186] * vX_[208] + vX_[121] * vX_[457] + vX_[200] * vX_[456] + vX_[207] * vX_[454] + (vX_[199] * vX_[444]) / vX_[81] - -0.014653732538 * (vX_[455] + vX_[472]);
    vX_[473] = (- vX_[144]) * x_in[10];
    vX_[467] = vX_[158] * x_in[10];
    vX_[466] = (- vX_[41]) * x_in[10];
    vX_[154] = vX_[140] * x_in[10];
    vX_[423] = vX_[37] * vX_[41] + vX_[6] * vX_[92];
    vX_[189] = vX_[46] * vX_[189] + vX_[144] * vX_[36];
    vX_[461] = vX_[46] * vX_[158] + vX_[144] * vX_[29];
    vX_[6] = vX_[46] * vX_[6] + vX_[144] * vX_[37];
    vX_[447] = vX_[96] * vX_[447] + vX_[3] * vX_[115] - (vX_[103] * vX_[270] + vX_[450] * vX_[93]);
    vX_[251] = -0.047121686402 * vX_[251] + -0.0015152446 * vX_[113] + -0.0046002455 * (vX_[455] - vX_[18]) + -1 * (vX_[464] + (vX_[68] * vX_[463]) / vX_[68]) + vX_[238] * vX_[208] + vX_[234] * vX_[457] + vX_[184] * vX_[456] + vX_[186] * vX_[454] + (0.002164052 * vX_[444]) / vX_[81] - -0.014653732538 * vX_[447] - -0.0285580595 * vX_[448] - 0.002164052 * vX_[449];
    vX_[455] = 0.05034347249 * vX_[447] + -0.047121686402 * vX_[134] + -0.0205908595 * vX_[113] + -0.0046002455 * vX_[449] + vX_[106] * vX_[453] + vX_[70] * vX_[8] + vX_[234] * vX_[208] + vX_[80] * vX_[457] + vX_[188] * vX_[456] + vX_[121] * vX_[454] + (vX_[187] * vX_[444]) / vX_[81] - -0.0015152446 * vX_[448] - 0.002164052 * (vX_[455] - vX_[472]);
    vX_[447] = 1.225946 * vX_[447] + -0.014653732538 * vX_[448] + 0.05034347249 * vX_[113] + vX_[70] * vX_[442] + vX_[49] * vX_[465] + vX_[181] * vX_[208] + vX_[230] * vX_[457] + vX_[220] * vX_[456] + vX_[217] * vX_[454] + (vX_[215] * vX_[444]) / vX_[81] - -0.047121686402 * (vX_[472] + vX_[18]);
    vX_[465] = vX_[29] * vX_[158] + vX_[158] * vX_[29];
    vX_[442] = -0.19076837715 * (vX_[423] - vX_[189]) + -0.035277844 * vX_[461] + -0.0016444875 * vX_[6] + vX_[101] * vX_[251] + vX_[95] * vX_[455] + -0.0825 * vX_[447] + vX_[108] * vX_[360] + vX_[84] * vX_[435] - 0.374644408005 * vX_[357] - 0.003905355 * vX_[272] - 0.027715843 * (vX_[465] - vX_[1]);
    vX_[18] = 0 - vX_[442];
    vX_[41] = vX_[46] * vX_[140] + vX_[144] * vX_[42] - (vX_[29] * vX_[41] + vX_[158] * vX_[92]);
    vX_[443] = 0.09850206933 * vX_[357] + 0.027715843 * vX_[272] + 0.003905355 * (vX_[201] - vX_[1]) + (vX_[81] * vX_[444]) / vX_[81] + vX_[443] + vX_[109] * vX_[360] + vX_[86] * vX_[435] + vX_[246] * vX_[473] + vX_[250] * vX_[467] + vX_[257] * vX_[466] + vX_[269] * vX_[154] + (vX_[227] * vX_[18]) / vX_[244] - -0.19076837715 * vX_[41] - 0.00990887600000001 * vX_[6] - -0.0016444875 * vX_[461];
    vX_[189] = vX_[189] - vX_[423];
    vX_[455] = 0.374644408005 * vX_[41] + 0.09850206933 * vX_[189] + 0.04518672 * vX_[272] + 0.003905355 * vX_[461] + vX_[95] * vX_[251] + vX_[83] * vX_[455] + vX_[110] * vX_[360] + vX_[87] * vX_[435] + vX_[250] * vX_[473] + vX_[243] * vX_[467] + vX_[260] * vX_[466] + vX_[40] * vX_[154] + (vX_[249] * vX_[18]) / vX_[244] - 0.027715843 * vX_[6] - -0.0016444875 * (vX_[201] - vX_[465]);
    vX_[41] = 3.587895 * vX_[41] + -0.19076837715 * vX_[6] + 0.374644408005 * vX_[272] + vX_[111] * vX_[360] + vX_[88] * vX_[435] + vX_[254] * vX_[473] + vX_[33] * vX_[467] + vX_[129] * vX_[466] + vX_[104] * vX_[154] + (vX_[224] * vX_[18]) / vX_[244] - 0.09850206933 * (vX_[465] + vX_[1]);
    vX_[251] = - vX_[10] * vX_[166];
    vX_[423] = vX_[147] * vX_[10];
    vX_[144] = vX_[23] * vX_[147] + vX_[147] * vX_[23];
    vX_[140] = vX_[19] * vX_[146] + vX_[146] * vX_[19];
    vX_[158] = 0.088844724872 * vX_[132] + -0.003616545 * vX_[145] + -0.004377257 * vX_[296] + vX_[26] * vX_[443] + vX_[27] * vX_[455] + -0.0825 * vX_[41] - 0.126729164208 * vX_[251] - -0.0054876483 * vX_[423] - -0.008248334 * (vX_[144] - vX_[140]);
    vX_[472] = 0 - vX_[158];
    vX_[113] = vX_[15] * vX_[258] + vX_[193] * vX_[30] + vX_[11] * vX_[151] + vX_[185] * vX_[34];
    vX_[448] = vX_[113] * vX_[309];
    vX_[310] = vX_[306] * vX_[113] + vX_[310] * vX_[113] + vX_[448] * vX_[307];
    vX_[306] = vX_[113] * vX_[339];
    vX_[340] = vX_[321] * vX_[113] - vX_[335] * vX_[113] - (vX_[340] * vX_[113] + vX_[306] * vX_[307]);
    vX_[311] = vX_[11] * vX_[310] + vX_[185] * vX_[311] + vX_[15] * vX_[340] + vX_[193] * vX_[341];
    vX_[134] = - vX_[113] * vX_[349];
    vX_[350] = 0 - vX_[344] * vX_[113] - (vX_[350] * vX_[113] + vX_[134] * vX_[307]);
    vX_[340] = vX_[11] * vX_[340] + vX_[185] * vX_[341] + vX_[15] * vX_[350] + vX_[193] * vX_[351];
    vX_[351] = vX_[342] * vX_[185] + vX_[311] * vX_[11] + vX_[352] * vX_[193] + vX_[340] * vX_[15];
    vX_[341] = ((- vX_[355]) * vX_[351]) / vX_[354];
    vX_[344] = - 0.0007689361 * vX_[341];
    vX_[340] = vX_[352] * vX_[150] + vX_[340] * vX_[20] + vX_[342] * vX_[193] + vX_[311] * vX_[15];
    vX_[341] = -(vX_[358] * vX_[341] + vX_[340] * vX_[355]);
    vX_[189] = -3.587895 * vX_[189] + -0.19076837715 * vX_[461] + 0.09850206933 * vX_[272] + vX_[447] + vX_[257] * vX_[473] + vX_[260] * vX_[467] + vX_[282] * vX_[466] + vX_[280] * vX_[154] + (vX_[255] * vX_[18]) / vX_[244] - 0.374644408005 * (vX_[201] + vX_[1]);
    vX_[465] = 3.587895 * vX_[357] + 0.09850206933 * vX_[6] + 0.374644408005 * vX_[461] + vX_[85] * vX_[360] + vX_[83] * vX_[435] + vX_[269] * vX_[473] + vX_[40] * vX_[467] + vX_[280] * vX_[466] + vX_[276] * vX_[154] + (vX_[267] * vX_[18]) / vX_[244] - -0.19076837715 * (vX_[201] + vX_[465]);
    vX_[6] = (- vX_[146]) * x_in[9];
    vX_[461] = vX_[147] * x_in[9];
    vX_[435] = (- vX_[157]) * x_in[9];
    vX_[360] = vX_[166] * x_in[9];
    vX_[166] = vX_[19] * vX_[166] + vX_[146] * vX_[35] - (vX_[23] * vX_[157] + vX_[147] * vX_[17]);
    vX_[442] = -0.214708623208 * vX_[251] + -0.008248334 * vX_[423] + -0.0054876483 * (0 - vX_[140]) + vX_[38] * vX_[189] + vX_[89] * vX_[465] + -1 * (vX_[442] + (vX_[244] * vX_[18]) / vX_[244]) + vX_[284] * vX_[6] + vX_[324] * vX_[461] + vX_[321] * vX_[435] + vX_[300] * vX_[360] + (vX_[320] * vX_[472]) / vX_[295] - 0.088844724872 * vX_[166] - -0.038245722 * vX_[296] - -0.004377257 * vX_[145];
    vX_[132] = - vX_[132];
    vX_[166] = 0.126729164208 * vX_[166] + -0.214708623208 * vX_[132] + -0.034629177 * vX_[423] + -0.0054876483 * vX_[145] + vX_[28] * vX_[443] + vX_[26] * vX_[455] + vX_[324] * vX_[6] + vX_[294] * vX_[461] + vX_[305] * vX_[435] + vX_[335] * vX_[360] + (vX_[301] * vX_[472]) / vX_[295] - -0.008248334 * vX_[296] - -0.004377257 * (0 - vX_[144]);
    vX_[132] = -3.228604 * vX_[132] + 0.088844724872 * vX_[145] + -0.214708623208 * vX_[423] + -1 * vX_[41] + vX_[321] * vX_[6] + vX_[305] * vX_[461] + vX_[309] * vX_[435] + vX_[339] * vX_[360] + (vX_[303] * vX_[472]) / vX_[295] - 0.126729164208 * vX_[140];
    vX_[465] = 3.228604 * vX_[251] + -0.214708623208 * vX_[296] + 0.126729164208 * vX_[145] + vX_[39] * vX_[189] + vX_[26] * vX_[465] + vX_[300] * vX_[6] + vX_[335] * vX_[461] + vX_[339] * vX_[435] + vX_[349] * vX_[360] + (vX_[333] * vX_[472]) / vX_[295] - 0.088844724872 * vX_[144];
    vX_[189] = 0 - (vX_[15] * vX_[442] + vX_[193] * vX_[370]) - (vX_[11] * vX_[166] + vX_[185] * vX_[428]) - (vX_[34] * vX_[132] + vX_[151] * vX_[25]) - (vX_[16] * vX_[465] + vX_[247] * vX_[424]);
    vX_[350] = vX_[350] + vX_[310] - vX_[351] - (vX_[358] * (vX_[340] - vX_[153] * vX_[351]) / vX_[354] + vX_[340] * vX_[153]);
    vX_[310] = 0 - vX_[306];
    vX_[432] = vX_[431] * vX_[150] + (vX_[11] * vX_[448] + vX_[185] * vX_[422] + vX_[15] * vX_[310] + vX_[193] * vX_[421]) * vX_[20] + vX_[432] * vX_[193] + (vX_[11] * vX_[306] + vX_[185] * vX_[24] + vX_[15] * vX_[134] + vX_[193] * vX_[413]) * vX_[15];
    vX_[431] = (vX_[432] - vX_[434] * vX_[351]) / vX_[354];
    vX_[437] = 0 - vX_[113] * vX_[437];
    vX_[113] = vX_[113] * vX_[439];
    vX_[439] = - vX_[437];
    vX_[144] = vX_[11] * vX_[439] + vX_[185] * vX_[302] + vX_[15] * vX_[113] + vX_[193] * vX_[440];
    vX_[439] = vX_[20] * vX_[113] + vX_[150] * vX_[440] + vX_[15] * vX_[439] + vX_[193] * vX_[302];
    vX_[302] = (vX_[439] - vX_[446] * vX_[351]) / vX_[354];
    jac[35] = (0 - vX_[0] * (-1 * (vX_[158] + (vX_[295] * vX_[472]) / vX_[295]) + vX_[344] * vX_[420] + vX_[341] * vX_[14] + (0.0007689361 * vX_[189] - vX_[412] * vX_[351]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[442] + vX_[150] * vX_[370] + vX_[15] * vX_[166] + vX_[193] * vX_[428] + vX_[30] * vX_[132] + vX_[258] * vX_[25] + vX_[12] * vX_[465] + vX_[174] * vX_[424] + vX_[341] * vX_[420] + vX_[350] * vX_[14] + (vX_[358] * vX_[189] + vX_[340] * vX_[414] - vX_[91] * vX_[351]) / vX_[354]) - 9.81 * ((vX_[4] * (vX_[98] * vX_[150] + (vX_[15] * vX_[448] + vX_[193] * vX_[422] + vX_[20] * vX_[310] + vX_[150] * vX_[421]) * vX_[20] + vX_[13] * vX_[193] + (vX_[15] * vX_[306] + vX_[193] * vX_[24] + vX_[20] * vX_[134] + vX_[150] * vX_[413]) * vX_[15] - (vX_[358] * vX_[431] + vX_[340] * vX_[434])) + vX_[0] * (vX_[438] * vX_[150] + -1 * vX_[437] * vX_[20] + vX_[441] * vX_[193] + -1 * vX_[113] * vX_[15] + vX_[144] - 0.0007689361 * vX_[431])) * vX_[4] + (vX_[4] * (0 - vX_[144] - (vX_[358] * vX_[302] + vX_[340] * vX_[446])) + vX_[0] * (- 0.0007689361 * vX_[302])) * vX_[0]) - vX_[452] * ((vX_[4] * vX_[341] + vX_[0] * vX_[344]) * vX_[0] + (vX_[4] * vX_[350] + vX_[0] * vX_[341]) * vX_[4])) / vX_[451];
    vX_[302] = vX_[0] * jac[35];
    vX_[144] = vX_[4] * jac[35];
    vX_[113] = vX_[4] * vX_[452] + vX_[14];
    vX_[437] = 9.81 * vX_[0];
    vX_[431] = 9.81 * vX_[4];
    vX_[310] = vX_[0] * vX_[452] + vX_[420];
    vX_[445] = (vX_[414] - 0.0007689361 * vX_[310] - vX_[358] * vX_[113] - vX_[445] * vX_[437] - vX_[433] * vX_[431]) / vX_[354];
    jac[36] = (vX_[189] - 0.0007689361 * vX_[302] - (vX_[358] * vX_[144] + vX_[340] * vX_[113]) - vX_[439] * vX_[437] - vX_[432] * vX_[431] - vX_[445] * vX_[351]) / vX_[354];
    vX_[302] = -1 * vX_[302];
    vX_[6] = vX_[15] * jac[36] + vX_[193] * vX_[445] + vX_[20] * vX_[144] + vX_[150] * vX_[113] + vX_[6];
    vX_[461] = vX_[11] * jac[36] + vX_[185] * vX_[445] + vX_[15] * vX_[144] + vX_[193] * vX_[113] + vX_[461];
    vX_[435] = vX_[34] * jac[36] + vX_[151] * vX_[445] + vX_[30] * vX_[144] + vX_[258] * vX_[113] + (- vX_[185]) * vX_[431] + vX_[435];
    vX_[144] = vX_[16] * jac[36] + vX_[247] * vX_[445] + vX_[12] * vX_[144] + vX_[174] * vX_[113] + vX_[193] * vX_[431] + vX_[360];
    jac[37] = (vX_[472] - vX_[295] * vX_[302] - vX_[320] * vX_[6] - vX_[301] * vX_[461] - vX_[303] * vX_[435] - vX_[333] * vX_[144]) / vX_[295];
    vX_[472] = -1 * vX_[6];
    vX_[302] = vX_[302] + jac[37];
    vX_[473] = vX_[26] * vX_[302] + vX_[28] * vX_[461] + vX_[473];
    vX_[461] = vX_[27] * vX_[302] + vX_[26] * vX_[461] + vX_[467];
    vX_[302] = -0.0825 * vX_[302] + -1 * vX_[435];
    vX_[466] = vX_[39] * vX_[144] + vX_[38] * vX_[6] + vX_[466];
    vX_[144] = vX_[26] * vX_[144] + vX_[89] * vX_[6] + vX_[154];
    jac[38] = (vX_[18] - vX_[244] * vX_[472] - vX_[227] * vX_[473] - vX_[249] * vX_[461] - vX_[224] * vX_[302] - vX_[255] * vX_[466] - vX_[267] * vX_[144]) / vX_[244];
    vX_[472] = vX_[472] + jac[38];
    vX_[208] = vX_[101] * vX_[472] + vX_[95] * vX_[461] + vX_[208];
    vX_[457] = vX_[95] * vX_[472] + vX_[83] * vX_[461] + vX_[457];
    vX_[466] = -0.0825 * vX_[472] + vX_[466];
    vX_[456] = vX_[108] * vX_[472] + vX_[109] * vX_[473] + vX_[110] * vX_[461] + vX_[111] * vX_[302] + vX_[85] * vX_[144] + vX_[456];
    vX_[472] = vX_[84] * vX_[472] + vX_[86] * vX_[473] + vX_[87] * vX_[461] + vX_[88] * vX_[302] + vX_[83] * vX_[144] + vX_[454];
    jac[39] = (vX_[444] - vX_[81] * vX_[473] - 0.002164052 * vX_[208] - vX_[187] * vX_[457] - vX_[215] * vX_[466] - vX_[182] * vX_[456] - vX_[199] * vX_[472]) / vX_[81];
    vX_[208] = -1 * vX_[208];
    vX_[473] = vX_[473] + jac[39];
    vX_[468] = vX_[70] * vX_[473] + vX_[106] * vX_[457] + vX_[468];
    vX_[473] = vX_[49] * vX_[473] + vX_[70] * vX_[457] + vX_[469];
    vX_[456] = -1 * vX_[456];
    vX_[471] = vX_[49] * vX_[466] + vX_[70] * vX_[472] + vX_[471];
    jac[40] = (vX_[463] - vX_[68] * vX_[208] - vX_[75] * vX_[468] - vX_[67] * vX_[473] - vX_[94] * vX_[456] - vX_[163] * (vX_[70] * vX_[466] + vX_[106] * vX_[472] + vX_[470]) - vX_[171] * vX_[471]) / vX_[68];
    vX_[208] = vX_[208] + jac[40];
    jac[41] = (vX_[361] - 0.0049096523 * -1 * vX_[468] - -0.0005483591 * (vX_[50] * vX_[208] + vX_[66] * vX_[473] + vX_[458]) - -0.0016724827 * (vX_[53] * vX_[208] + vX_[50] * vX_[473] + vX_[459]) - 0.007735484874 * (vX_[50] * vX_[456] + vX_[148] * vX_[471] + vX_[127] * vX_[468] + vX_[460]) - 0.003127439544 * (vX_[53] * vX_[456] + vX_[50] * vX_[471] + vX_[54] * vX_[468] + vX_[462])) / 0.0049096523;
    vX_[208] = cos(x_in[3]);
    vX_[471] = - vX_[208];
    vX_[456] = -1 * sin(x_in[3]);
    vX_[473] = vX_[471] * vX_[19] + vX_[456] * vX_[10];
    vX_[468] = -0.0825 * vX_[456];
    vX_[361] = - vX_[208];
    vX_[462] = vX_[468] * vX_[23] + vX_[361] * vX_[17];
    vX_[460] = vX_[473] * vX_[36] - vX_[37] * vX_[462];
    vX_[459] = vX_[473] * vX_[37];
    vX_[458] = vX_[456] * vX_[19] + vX_[208] * vX_[10];
    vX_[472] = vX_[46] * vX_[458] + vX_[458] * vX_[46];
    vX_[466] = -0.0825 * vX_[208];
    vX_[463] = vX_[466] * vX_[23] + vX_[456] * vX_[17];
    vX_[470] = vX_[86] * vX_[473] + vX_[87] * vX_[458] + vX_[83] * vX_[463];
    vX_[457] = vX_[82] * vX_[470] + vX_[473] * vX_[93];
    vX_[469] = vX_[83] * vX_[458];
    vX_[444] = vX_[96] * vX_[462] + vX_[469] * vX_[99];
    vX_[144] = vX_[95] * vX_[458];
    vX_[302] = vX_[96] * vX_[144] + vX_[469] * vX_[103];
    vX_[461] = vX_[96] * vX_[473] + vX_[469] * vX_[82];
    vX_[454] = vX_[109] * vX_[473] + vX_[110] * vX_[458] + vX_[85] * vX_[463];
    vX_[18] = -1 * vX_[454];
    vX_[6] = vX_[106] * vX_[469] + vX_[70] * vX_[473];
    vX_[154] = vX_[106] * vX_[470] + vX_[70] * vX_[462];
    vX_[435] = -1 * vX_[144];
    vX_[467] = vX_[107] * vX_[18] + vX_[6] * vX_[116] - (vX_[117] * vX_[154] + vX_[435] * vX_[120]);
    vX_[360] = vX_[107] * vX_[435] + vX_[6] * vX_[117];
    vX_[247] = vX_[117] * vX_[435] + vX_[435] * vX_[117];
    vX_[193] = vX_[70] * vX_[469] + vX_[49] * vX_[473];
    vX_[174] = vX_[124] * vX_[193] + vX_[193] * vX_[124];
    vX_[151] = -0.088 * vX_[435] + -1 * vX_[154];
    vX_[258] = vX_[50] * vX_[193] + vX_[53] * vX_[435];
    vX_[185] = vX_[128] * vX_[151] + vX_[258] * vX_[131];
    vX_[150] = vX_[70] * vX_[470] + vX_[49] * vX_[462];
    vX_[439] = vX_[53] * vX_[18] + vX_[50] * vX_[150] + vX_[54] * vX_[6];
    vX_[432] = -1 * vX_[6];
    vX_[189] = vX_[133] * vX_[439] + vX_[432] * vX_[138];
    vX_[340] = vX_[185] - vX_[189];
    vX_[351] = vX_[66] * vX_[193] + vX_[50] * vX_[435];
    vX_[433] = vX_[128] * vX_[351] + vX_[258] * vX_[142];
    vX_[350] = vX_[142] * vX_[432] + vX_[351] * vX_[133];
    vX_[465] = (- vX_[258]) * x_in[13];
    vX_[132] = vX_[351] * x_in[13];
    vX_[166] = (- vX_[439]) * x_in[13];
    vX_[442] = vX_[50] * vX_[18] + vX_[148] * vX_[150] + vX_[127] * vX_[6];
    vX_[341] = vX_[442] * x_in[13];
    vX_[344] = vX_[128] * vX_[432] + vX_[258] * vX_[133];
    vX_[151] = vX_[142] * vX_[151] + vX_[351] * vX_[131] - (vX_[133] * vX_[442] + vX_[432] * vX_[152]);
    vX_[134] = vX_[142] * vX_[351] + vX_[351] * vX_[142];
    vX_[306] = vX_[128] * vX_[258] + vX_[258] * vX_[128];
    vX_[189] = 0.007735484874 * (vX_[189] - vX_[185]) + -0.002420945 * vX_[433] + -0.0005483591 * vX_[344] - -0.003127439544 * vX_[151] - -0.0016724827 * vX_[350] - -0.0003951087 * (vX_[134] - vX_[306]);
    vX_[185] = 0 - vX_[189];
    vX_[432] = vX_[133] * vX_[432] + vX_[432] * vX_[133];
    vX_[448] = -0.735522 * vX_[340] + 0.007735484874 * vX_[433] + 0.045305948634 * vX_[350] + 0.000863976360112152 * vX_[465] + -0.0426708405168984 * vX_[132] + 0.72333422730663 * vX_[166] + -0.00492748973017121 * vX_[341] + (0.007735484874 * vX_[185]) / 0.0049096523 - -0.003127439544 * (vX_[432] + vX_[306]);
    vX_[158] = 0.735522 * vX_[151] + 0.045305948634 * vX_[344] + -0.003127439544 * vX_[433] + 0.0456552523787178 * vX_[465] + 0.00106536842387716 * vX_[132] + -0.00492748973017121 * vX_[166] + 0.733529826725046 * vX_[341] + (0.003127439544 * vX_[185]) / 0.0049096523 - 0.007735484874 * (vX_[432] + vX_[134]);
    vX_[441] = (- vX_[193]) * x_in[12];
    vX_[438] = vX_[6] * x_in[12];
    vX_[13] = (- vX_[150]) * x_in[12];
    vX_[413] = vX_[154] * x_in[12];
    vX_[24] = vX_[117] * vX_[150] + vX_[435] * vX_[137];
    vX_[18] = vX_[124] * vX_[18] + vX_[193] * vX_[116];
    vX_[98] = vX_[124] * vX_[6] + vX_[193] * vX_[107];
    vX_[435] = vX_[124] * vX_[435] + vX_[193] * vX_[117];
    vX_[442] = vX_[128] * vX_[442] + vX_[258] * vX_[152] - (vX_[142] * vX_[439] + vX_[351] * vX_[138]);
    vX_[151] = 0.045305948634 * vX_[151] + -0.0003951087 * vX_[350] + -0.0016724827 * (vX_[432] - vX_[306]) + 0.0128378177682551 * vX_[465] + -0.000581908304553986 * vX_[132] + 0.000863976360112152 * vX_[166] + 0.0456552523787178 * vX_[341] + (-0.0005483591 * vX_[185]) / 0.0049096523 - 0.007735484874 * vX_[442] - -0.0104103567 * vX_[344] - -0.0005483591 * vX_[433];
    vX_[432] = -0.003127439544 * vX_[442] + 0.045305948634 * vX_[340] + -0.0079894117 * vX_[350] + -0.0016724827 * vX_[433] + -0.000581908304553986 * vX_[465] + 0.0147502744829958 * vX_[132] + -0.0426708405168984 * vX_[166] + 0.00106536842387716 * vX_[341] + (-0.0016724827 * vX_[185]) / 0.0049096523 - -0.0003951087 * vX_[344] - -0.0005483591 * (vX_[432] - vX_[134]);
    vX_[442] = 0.735522 * vX_[442] + 0.007735484874 * vX_[344] + -0.003127439544 * vX_[350] + -0.007735484874 * vX_[465] + -0.003127439544 * vX_[132] - 0.045305948634 * (vX_[134] + vX_[306]);
    vX_[306] = vX_[107] * vX_[6] + vX_[6] * vX_[107];
    vX_[134] = 0.100241616695 * (vX_[24] - vX_[18]) + 0.0080873057 * vX_[98] + 9.3569106e-05 * vX_[435] + vX_[50] * vX_[151] + vX_[53] * vX_[432] + -0.088 * vX_[442] - -0.023526756935 * vX_[467] - -0.000103758764 * vX_[360] - 0.0015241109 * (vX_[306] - vX_[174]);
    vX_[344] = 0 - vX_[134];
    vX_[150] = vX_[124] * vX_[154] + vX_[193] * vX_[120] - (vX_[107] * vX_[150] + vX_[6] * vX_[137]);
    vX_[189] = -0.017527158935 * vX_[467] + 0.0015241109 * vX_[360] + -0.000103758764 * (vX_[247] - vX_[174]) + vX_[127] * vX_[448] + vX_[54] * vX_[158] + -1 * (vX_[189] + (0.0049096523 * vX_[185]) / 0.0049096523) + vX_[58] * vX_[441] + vX_[77] * vX_[438] + vX_[165] * vX_[13] + vX_[173] * vX_[413] + (vX_[75] * vX_[344]) / vX_[68] - 0.100241616695 * vX_[150] - 0.0093141007 * vX_[435] - 9.3569106e-05 * vX_[98];
    vX_[18] = vX_[18] - vX_[24];
    vX_[432] = -0.023526756935 * vX_[150] + -0.017527158935 * vX_[18] + 0.001226795 * vX_[360] + -0.000103758764 * vX_[98] + vX_[66] * vX_[151] + vX_[50] * vX_[432] + vX_[77] * vX_[441] + vX_[65] * vX_[438] + vX_[168] * vX_[13] + vX_[118] * vX_[413] + (vX_[67] * vX_[344]) / vX_[68] - 0.0015241109 * vX_[435] - 9.3569106e-05 * (vX_[247] - vX_[306]);
    vX_[151] = vX_[103] * vX_[462] + vX_[144] * vX_[99] - (vX_[82] * vX_[454] + vX_[473] * vX_[115]);
    vX_[24] = vX_[103] * vX_[473] + vX_[144] * vX_[82];
    vX_[193] = vX_[103] * vX_[144] + vX_[144] * vX_[103];
    vX_[154] = vX_[96] * vX_[469] + vX_[469] * vX_[96];
    vX_[6] = -0.014653732538 * (vX_[457] - vX_[444]) + -0.0079672 * vX_[302] + 0.002164052 * vX_[461] + vX_[70] * vX_[189] + vX_[49] * vX_[432] - 0.05034347249 * vX_[151] - -0.0046002455 * vX_[24] - -0.0015152446 * (vX_[193] - vX_[154]);
    vX_[350] = 0 - vX_[6];
    vX_[444] = vX_[444] - vX_[457];
    vX_[457] = (- vX_[469]) * x_in[11];
    vX_[433] = vX_[144] * x_in[11];
    vX_[340] = (- vX_[470]) * x_in[11];
    vX_[351] = vX_[454] * x_in[11];
    vX_[439] = vX_[82] * vX_[473] + vX_[473] * vX_[82];
    vX_[150] = -1.225946 * vX_[444] + -0.014653732538 * vX_[302] + -0.047121686402 * vX_[24] + -1 * (1.666555 * vX_[150] + 0.100241616695 * vX_[435] + -0.023526756935 * vX_[360] + vX_[50] * vX_[448] + vX_[53] * vX_[158] + vX_[162] * vX_[441] + vX_[135] * vX_[438] + vX_[130] * vX_[13] + vX_[179] * vX_[413] + (vX_[94] * vX_[344]) / vX_[68] - -0.017527158935 * (vX_[306] + vX_[174])) + vX_[184] * vX_[457] + vX_[188] * vX_[433] + vX_[192] * vX_[340] + vX_[200] * vX_[351] + (vX_[182] * vX_[350]) / vX_[81] - 0.05034347249 * (vX_[439] + vX_[154]);
    vX_[18] = -1.666555 * vX_[18] + 0.100241616695 * vX_[98] + -0.017527158935 * vX_[360] + -1 * vX_[442] + vX_[165] * vX_[441] + vX_[168] * vX_[438] + vX_[203] * vX_[13] + vX_[204] * vX_[413] + (vX_[163] * vX_[344]) / vX_[68] - -0.023526756935 * (vX_[247] + vX_[174]);
    vX_[306] = 1.666555 * vX_[467] + -0.017527158935 * vX_[435] + -0.023526756935 * vX_[98] + vX_[148] * vX_[448] + vX_[50] * vX_[158] + vX_[173] * vX_[441] + vX_[118] * vX_[438] + vX_[204] * vX_[13] + vX_[190] * vX_[413] + (vX_[171] * vX_[344]) / vX_[68] - 0.100241616695 * (vX_[247] + vX_[306]);
    vX_[435] = 1.225946 * vX_[151] + -0.047121686402 * vX_[461] + 0.05034347249 * vX_[302] + vX_[106] * vX_[18] + vX_[70] * vX_[306] + vX_[186] * vX_[457] + vX_[121] * vX_[433] + vX_[200] * vX_[340] + vX_[207] * vX_[351] + (vX_[199] * vX_[350]) / vX_[81] - -0.014653732538 * (vX_[439] + vX_[193]);
    vX_[98] = (- vX_[458]) * x_in[10];
    vX_[158] = vX_[473] * x_in[10];
    vX_[448] = (- vX_[463]) * x_in[10];
    vX_[247] = vX_[462] * x_in[10];
    vX_[467] = vX_[37] * vX_[463];
    vX_[442] = vX_[458] * vX_[36];
    vX_[174] = vX_[46] * vX_[473] + vX_[458] * vX_[29];
    vX_[360] = vX_[458] * vX_[37];
    vX_[454] = vX_[96] * vX_[454] + vX_[469] * vX_[115] - (vX_[103] * vX_[470] + vX_[144] * vX_[93]);
    vX_[151] = -0.047121686402 * vX_[151] + -0.0015152446 * vX_[24] + -0.0046002455 * (vX_[439] - vX_[154]) + -1 * (vX_[134] + (vX_[68] * vX_[344]) / vX_[68]) + vX_[238] * vX_[457] + vX_[234] * vX_[433] + vX_[184] * vX_[340] + vX_[186] * vX_[351] + (0.002164052 * vX_[350]) / vX_[81] - -0.014653732538 * vX_[454] - -0.0285580595 * vX_[461] - 0.002164052 * vX_[302];
    vX_[439] = 0.05034347249 * vX_[454] + -0.047121686402 * vX_[444] + -0.0205908595 * vX_[24] + -0.0046002455 * vX_[302] + vX_[106] * vX_[189] + vX_[70] * vX_[432] + vX_[234] * vX_[457] + vX_[80] * vX_[433] + vX_[188] * vX_[340] + vX_[121] * vX_[351] + (vX_[187] * vX_[350]) / vX_[81] - -0.0015152446 * vX_[461] - 0.002164052 * (vX_[439] - vX_[193]);
    vX_[454] = 1.225946 * vX_[454] + -0.014653732538 * vX_[461] + 0.05034347249 * vX_[24] + vX_[70] * vX_[18] + vX_[49] * vX_[306] + vX_[181] * vX_[457] + vX_[230] * vX_[433] + vX_[220] * vX_[340] + vX_[217] * vX_[351] + (vX_[215] * vX_[350]) / vX_[81] - -0.047121686402 * (vX_[193] + vX_[154]);
    vX_[306] = vX_[29] * vX_[473] + vX_[473] * vX_[29];
    vX_[18] = -0.19076837715 * (vX_[467] - vX_[442]) + -0.035277844 * vX_[174] + -0.0016444875 * vX_[360] + vX_[101] * vX_[151] + vX_[95] * vX_[439] + -0.0825 * vX_[454] + vX_[108] * vX_[150] + vX_[84] * vX_[435] - 0.374644408005 * vX_[460] - 0.003905355 * vX_[459] - 0.027715843 * (vX_[306] - vX_[472]);
    vX_[154] = 0 - vX_[18];
    vX_[463] = vX_[46] * vX_[462] + vX_[458] * vX_[42] - (vX_[29] * vX_[463] + vX_[473] * vX_[92]);
    vX_[6] = 0.09850206933 * vX_[460] + 0.027715843 * vX_[459] + 0.003905355 * (0 - vX_[472]) + (vX_[81] * vX_[350]) / vX_[81] + vX_[6] + vX_[109] * vX_[150] + vX_[86] * vX_[435] + vX_[246] * vX_[98] + vX_[250] * vX_[158] + vX_[257] * vX_[448] + vX_[269] * vX_[247] + (vX_[227] * vX_[154]) / vX_[244] - -0.19076837715 * vX_[463] - 0.00990887600000001 * vX_[360] - -0.0016444875 * vX_[174];
    vX_[442] = vX_[442] - vX_[467];
    vX_[439] = 0.374644408005 * vX_[463] + 0.09850206933 * vX_[442] + 0.04518672 * vX_[459] + 0.003905355 * vX_[174] + vX_[95] * vX_[151] + vX_[83] * vX_[439] + vX_[110] * vX_[150] + vX_[87] * vX_[435] + vX_[250] * vX_[98] + vX_[243] * vX_[158] + vX_[260] * vX_[448] + vX_[40] * vX_[247] + (vX_[249] * vX_[154]) / vX_[244] - 0.027715843 * vX_[360] - -0.0016444875 * (0 - vX_[306]);
    vX_[463] = 3.587895 * vX_[463] + -0.19076837715 * vX_[360] + 0.374644408005 * vX_[459] + vX_[111] * vX_[150] + vX_[88] * vX_[435] + vX_[254] * vX_[98] + vX_[33] * vX_[158] + vX_[129] * vX_[448] + vX_[104] * vX_[247] + (vX_[224] * vX_[154]) / vX_[244] - 0.09850206933 * (vX_[306] + vX_[472]);
    vX_[151] = vX_[26] * vX_[6] + vX_[456] * vX_[363] + vX_[27] * vX_[439] + vX_[208] * vX_[410] + -0.0825 * vX_[463];
    vX_[467] = 0 - vX_[151];
    vX_[458] = -1 * vX_[466];
    vX_[462] = -0.0825 * vX_[456];
    vX_[473] = vX_[458] * vX_[276] - vX_[462] * vX_[280];
    vX_[193] = vX_[458] * vX_[280] - vX_[462] * vX_[282];
    vX_[283] = vX_[281] * vX_[458] + vX_[473] * vX_[274] - (vX_[283] * vX_[462] + vX_[193] * vX_[277]);
    vX_[281] = - vX_[458] * vX_[275];
    vX_[285] = 0 - vX_[285] * vX_[458] - (vX_[286] * vX_[458] + vX_[281] * vX_[274]) - vX_[283];
    vX_[286] = vX_[33] * vX_[462] + vX_[286] * vX_[462] + vX_[281] * vX_[277] - vX_[254] * vX_[458];
    vX_[287] = vX_[27] * vX_[285] + vX_[208] * vX_[287] + vX_[26] * vX_[286] + vX_[456] * vX_[288];
    vX_[275] = vX_[462] * vX_[275];
    vX_[291] = vX_[290] * vX_[462] + vX_[291] * vX_[462] + vX_[275] * vX_[277] - vX_[283];
    vX_[286] = vX_[27] * vX_[286] + vX_[208] * vX_[288] + vX_[26] * vX_[291] + vX_[456] * vX_[292];
    vX_[292] = vX_[289] * vX_[208] + vX_[287] * vX_[27] + vX_[293] * vX_[456] + vX_[286] * vX_[26];
    vX_[288] = vX_[283] + vX_[292];
    vX_[290] = - vX_[275];
    vX_[24] = vX_[27] * vX_[290] + vX_[208] * vX_[298] + vX_[26] * vX_[281] + vX_[456] * vX_[299];
    vX_[290] = vX_[26] * vX_[290] + vX_[456] * vX_[298] + vX_[28] * vX_[281] + vX_[471] * vX_[299];
    vX_[299] = (vX_[290] - vX_[304] * vX_[288]) / vX_[295];
    vX_[286] = vX_[293] * vX_[471] + vX_[286] * vX_[28] + vX_[289] * vX_[456] + vX_[287] * vX_[26];
    vX_[287] = 0 - vX_[24] - (vX_[301] * vX_[299] + vX_[286] * vX_[304]);
    vX_[292] = vX_[291] + vX_[285] + vX_[283] - vX_[292] - (vX_[301] * (vX_[286] - vX_[308] * vX_[288]) / vX_[295] + vX_[286] * vX_[308]);
    vX_[291] = 0 - (vX_[303] * vX_[299] + vX_[290] * vX_[304]);
    vX_[285] = vX_[307] * vX_[291];
    vX_[293] = 2. * vX_[287] * vX_[307] + vX_[292] + vX_[285] * vX_[307];
    vX_[289] = vX_[458] * vX_[104];
    vX_[298] = vX_[462] * vX_[129];
    vX_[461] = vX_[289] - vX_[298];
    vX_[289] = - vX_[289];
    vX_[444] = - vX_[458] * vX_[129];
    vX_[315] = vX_[40] * vX_[458] + vX_[312] * vX_[458] + vX_[289] * vX_[274] - vX_[260] * vX_[462] - (vX_[315] * vX_[462] + vX_[444] * vX_[277]);
    vX_[312] = vX_[462] * vX_[104];
    vX_[462] = vX_[269] * vX_[458] + vX_[317] * vX_[458] + vX_[312] * vX_[274] - vX_[257] * vX_[462] - (vX_[313] * vX_[462] + vX_[298] * vX_[277]);
    vX_[458] = - vX_[462];
    vX_[317] = vX_[28] * vX_[315] + vX_[471] * vX_[316] + vX_[26] * vX_[458] + vX_[456] * vX_[319];
    vX_[313] = vX_[461] - (vX_[320] * vX_[299] + vX_[317] * vX_[304]);
    vX_[432] = (vX_[317] - vX_[323] * vX_[288]) / vX_[295];
    vX_[458] = vX_[318] * vX_[471] + -1 * 2. * vX_[462] * vX_[28] + vX_[322] * vX_[456] + -1 * 2. * vX_[315] * vX_[26] + vX_[26] * vX_[315] + vX_[456] * vX_[316] + vX_[27] * vX_[458] + vX_[208] * vX_[319] - (vX_[301] * vX_[432] + vX_[286] * vX_[323]);
    vX_[298] = vX_[298] - vX_[461];
    vX_[462] = vX_[26] * vX_[444] + vX_[456] * vX_[325] + vX_[28] * vX_[298] + vX_[471] * vX_[326];
    vX_[289] = vX_[289] - vX_[461];
    vX_[315] = vX_[26] * vX_[289] + vX_[456] * vX_[328] + vX_[28] * vX_[312] + vX_[471] * vX_[329];
    vX_[298] = vX_[27] * vX_[444] + vX_[208] * vX_[325] + vX_[26] * vX_[298] + vX_[456] * vX_[326];
    vX_[289] = vX_[27] * vX_[289] + vX_[208] * vX_[328] + vX_[26] * vX_[312] + vX_[456] * vX_[329];
    vX_[312] = vX_[331] * vX_[471] + vX_[298] * vX_[28] + vX_[332] * vX_[456] + vX_[289] * vX_[26];
    vX_[329] = (vX_[312] - vX_[334] * vX_[288]) / vX_[295];
    vX_[328] = vX_[327] * vX_[471] + vX_[462] * vX_[28] + vX_[330] * vX_[456] + vX_[315] * vX_[26] + vX_[461] - (vX_[301] * vX_[329] + vX_[286] * vX_[334]);
    vX_[299] = vX_[336] * vX_[471] + vX_[337] * vX_[456] + vX_[456] * vX_[104] + vX_[208] * vX_[338] - (vX_[333] * vX_[299] + vX_[312] * vX_[304]);
    vX_[337] = vX_[307] * vX_[299];
    vX_[336] = vX_[313] * vX_[307] + vX_[458] - vX_[328] * vX_[307] - vX_[337] * vX_[307];
    vX_[444] = vX_[11] * vX_[293] + vX_[15] * vX_[336];
    vX_[432] = vX_[283] - (vX_[320] * vX_[432] + vX_[317] * vX_[323]);
    vX_[275] = -1 * (vX_[193] + vX_[275]);
    vX_[281] = -1 * (vX_[473] + vX_[281]);
    vX_[24] = vX_[297] * vX_[471] + vX_[275] * vX_[28] + vX_[343] * vX_[456] + vX_[281] * vX_[26] + vX_[24] - (vX_[320] * vX_[329] + vX_[317] * vX_[334]);
    vX_[345] = vX_[208] * vX_[280] + vX_[456] * vX_[345];
    vX_[346] = vX_[208] * vX_[346] + vX_[456] * vX_[280];
    vX_[329] = 0 - (vX_[347] * vX_[456] + vX_[345] * vX_[26]) - (vX_[348] * vX_[208] + vX_[346] * vX_[27]) - (vX_[333] * vX_[329] + vX_[312] * vX_[334]);
    vX_[473] = - vX_[307] * vX_[329];
    vX_[193] = vX_[432] - 2. * vX_[24] * vX_[307] - vX_[473] * vX_[307];
    vX_[336] = vX_[11] * vX_[336] + vX_[15] * vX_[193];
    vX_[283] = vX_[444] * vX_[11] + vX_[336] * vX_[15];
    vX_[326] = ((- vX_[355]) * vX_[283]) / vX_[354];
    vX_[325] = - 0.0007689361 * vX_[326];
    vX_[336] = vX_[336] * vX_[20] + vX_[444] * vX_[15];
    vX_[326] = -(vX_[358] * vX_[326] + vX_[336] * vX_[355]);
    vX_[442] = -3.587895 * vX_[442] + -0.19076837715 * vX_[174] + 0.09850206933 * vX_[459] + vX_[454] + vX_[257] * vX_[98] + vX_[260] * vX_[158] + vX_[282] * vX_[448] + vX_[280] * vX_[247] + (vX_[255] * vX_[154]) / vX_[244] - 0.374644408005 * vX_[472];
    vX_[306] = 3.587895 * vX_[460] + 0.09850206933 * vX_[360] + 0.374644408005 * vX_[174] + vX_[85] * vX_[150] + vX_[83] * vX_[435] + vX_[269] * vX_[98] + vX_[40] * vX_[158] + vX_[280] * vX_[448] + vX_[276] * vX_[247] + (vX_[267] * vX_[154]) / vX_[244] - -0.19076837715 * vX_[306];
    vX_[432] = vX_[38] * vX_[442] + vX_[468] * vX_[404] + vX_[89] * vX_[306] + vX_[466] * vX_[364] + -1 * (vX_[18] + (vX_[244] * vX_[154]) / vX_[244]) + vX_[432] * vX_[202] + vX_[458] * vX_[102] + vX_[313] * vX_[90] + vX_[24] * vX_[426] + (vX_[320] * vX_[467] + vX_[317] * vX_[417] - vX_[427] * vX_[288]) / vX_[295];
    vX_[458] = vX_[28] * vX_[6] + vX_[471] * vX_[363] + vX_[26] * vX_[439] + vX_[456] * vX_[410] + vX_[458] * vX_[202] + vX_[292] * vX_[102] + vX_[287] * vX_[90] + vX_[328] * vX_[426] + (vX_[301] * vX_[467] + vX_[286] * vX_[417] - vX_[429] * vX_[288]) / vX_[295];
    vX_[291] = -1 * vX_[463] + vX_[313] * vX_[202] + vX_[287] * vX_[102] + vX_[291] * vX_[90] + vX_[299] * vX_[426] + (vX_[303] * vX_[467] + vX_[290] * vX_[417] - vX_[430] * vX_[288]) / vX_[295];
    vX_[306] = vX_[39] * vX_[442] + vX_[361] * vX_[404] + vX_[26] * vX_[306] + vX_[456] * vX_[364] + vX_[24] * vX_[202] + vX_[328] * vX_[102] + vX_[299] * vX_[90] + vX_[329] * vX_[426] + (vX_[333] * vX_[467] + vX_[312] * vX_[417] - vX_[415] * vX_[288]) / vX_[295];
    vX_[442] = 0 - vX_[15] * vX_[432] - vX_[11] * vX_[458] - vX_[34] * vX_[291] - vX_[16] * vX_[306];
    vX_[193] = vX_[193] + vX_[293] - vX_[283] - (vX_[358] * (vX_[336] - vX_[153] * vX_[283]) / vX_[354] + vX_[336] * vX_[153]);
    vX_[285] = vX_[285] + vX_[287];
    vX_[313] = vX_[313] - vX_[337];
    vX_[337] = vX_[337] + vX_[328];
    vX_[473] = vX_[473] + vX_[24];
    vX_[24] = (vX_[11] * vX_[285] + vX_[15] * vX_[313]) * vX_[20] + (vX_[11] * vX_[337] + vX_[15] * vX_[473]) * vX_[15];
    vX_[328] = (vX_[24] - vX_[434] * vX_[283]) / vX_[354];
    vX_[289] = vX_[331] * vX_[456] + vX_[298] * vX_[26] + vX_[332] * vX_[208] + vX_[289] * vX_[27] + vX_[461];
    vX_[298] = (vX_[289] - vX_[436] * vX_[288]) / vX_[295];
    vX_[346] = vX_[297] * vX_[456] + vX_[275] * vX_[26] + vX_[343] * vX_[208] + vX_[281] * vX_[27] - vX_[307] * (vX_[347] * vX_[471] + vX_[345] * vX_[28] + vX_[348] * vX_[456] + vX_[346] * vX_[26] - (vX_[333] * vX_[298] + vX_[312] * vX_[436])) - vX_[290] - (vX_[320] * vX_[298] + vX_[317] * vX_[436]);
    vX_[298] = vX_[327] * vX_[456] + vX_[462] * vX_[26] + vX_[330] * vX_[208] + vX_[315] * vX_[27] + vX_[307] * (vX_[471] * vX_[104] + vX_[456] * vX_[338] - (vX_[303] * vX_[298] + vX_[290] * vX_[436])) - (vX_[301] * vX_[298] + vX_[286] * vX_[436]);
    vX_[315] = - vX_[346];
    vX_[462] = vX_[11] * vX_[315] + vX_[15] * vX_[298];
    vX_[315] = vX_[20] * vX_[298] + vX_[15] * vX_[315];
    vX_[338] = (vX_[315] - vX_[446] * vX_[283]) / vX_[354];
    jac[49] = (0 - vX_[0] * (-1 * (vX_[151] + (vX_[295] * vX_[467] + vX_[288] * vX_[417] - vX_[418] * vX_[288]) / vX_[295]) + vX_[325] * vX_[420] + vX_[326] * vX_[14] + (0.0007689361 * vX_[442] - vX_[412] * vX_[283]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[432] + vX_[15] * vX_[458] + vX_[30] * vX_[291] + vX_[12] * vX_[306] + vX_[326] * vX_[420] + vX_[193] * vX_[14] + (vX_[358] * vX_[442] + vX_[336] * vX_[414] - vX_[91] * vX_[283]) / vX_[354]) - 9.81 * ((vX_[4] * ((vX_[15] * vX_[285] + vX_[20] * vX_[313]) * vX_[20] + (vX_[15] * vX_[337] + vX_[20] * vX_[473]) * vX_[15] - (vX_[358] * vX_[328] + vX_[336] * vX_[434])) + vX_[0] * (-1 * vX_[346] * vX_[20] + -1 * vX_[298] * vX_[15] + vX_[462] - 0.0007689361 * vX_[328])) * vX_[4] + (vX_[4] * (0 - vX_[462] - (vX_[358] * vX_[338] + vX_[336] * vX_[446])) + vX_[0] * (- 0.0007689361 * vX_[338])) * vX_[0]) - vX_[452] * ((vX_[4] * vX_[326] + vX_[0] * vX_[325]) * vX_[0] + (vX_[4] * vX_[193] + vX_[0] * vX_[326]) * vX_[4])) / vX_[451];
    vX_[338] = vX_[0] * jac[49];
    vX_[462] = vX_[4] * jac[49];
    jac[50] = (vX_[442] - 0.0007689361 * vX_[338] - (vX_[358] * vX_[462] + vX_[336] * vX_[113]) - vX_[315] * vX_[437] - vX_[24] * vX_[431] - vX_[445] * vX_[283]) / vX_[354];
    vX_[338] = -1 * vX_[338];
    vX_[310] = -1 * vX_[310];
    vX_[315] = vX_[15] * jac[50] + vX_[20] * vX_[462];
    vX_[24] = vX_[15] * vX_[445] + vX_[20] * vX_[113] + vX_[202];
    vX_[442] = vX_[11] * jac[50] + vX_[15] * vX_[462];
    vX_[336] = vX_[11] * vX_[445] + vX_[15] * vX_[113] + vX_[102];
    vX_[283] = -1 * vX_[437];
    vX_[298] = vX_[34] * jac[50] + vX_[30] * vX_[462];
    vX_[32] = vX_[34] * vX_[445] + vX_[30] * vX_[113] + vX_[32] * vX_[431] + vX_[90];
    vX_[462] = vX_[16] * jac[50] + vX_[12] * vX_[462];
    vX_[346] = vX_[16] * vX_[445] + vX_[12] * vX_[113] + vX_[15] * vX_[431] + vX_[426];
    vX_[314] = (vX_[417] - vX_[295] * vX_[310] - vX_[320] * vX_[24] - vX_[301] * vX_[336] - vX_[314] * vX_[283] - vX_[303] * vX_[32] - vX_[333] * vX_[346]) / vX_[295];
    jac[51] = (vX_[467] - (vX_[295] * vX_[338] + vX_[288] * vX_[310]) - (vX_[320] * vX_[315] + vX_[317] * vX_[24]) - (vX_[301] * vX_[442] + vX_[286] * vX_[336]) - vX_[289] * vX_[283] - (vX_[303] * vX_[298] + vX_[290] * vX_[32]) - (vX_[333] * vX_[462] + vX_[312] * vX_[346]) - vX_[314] * vX_[288]) / vX_[295];
    vX_[289] = -1 * vX_[315];
    vX_[338] = vX_[338] + jac[51];
    vX_[312] = vX_[310] + vX_[314];
    vX_[98] = vX_[26] * vX_[338] + vX_[456] * vX_[312] + vX_[28] * vX_[442] + vX_[471] * vX_[336] + vX_[98];
    vX_[442] = vX_[27] * vX_[338] + vX_[208] * vX_[312] + vX_[26] * vX_[442] + vX_[456] * vX_[336] + vX_[158];
    vX_[338] = -0.0825 * vX_[338] + -1 * vX_[298];
    vX_[448] = vX_[456] * vX_[283] + vX_[39] * vX_[462] + vX_[361] * vX_[346] + vX_[38] * vX_[315] + vX_[468] * vX_[24] + vX_[448];
    vX_[462] = vX_[208] * vX_[283] + vX_[26] * vX_[462] + vX_[456] * vX_[346] + vX_[89] * vX_[315] + vX_[466] * vX_[24] + vX_[247];
    jac[52] = (vX_[154] - vX_[244] * vX_[289] - vX_[227] * vX_[98] - vX_[249] * vX_[442] - vX_[224] * vX_[338] - vX_[255] * vX_[448] - vX_[267] * vX_[462]) / vX_[244];
    vX_[289] = vX_[289] + jac[52];
    vX_[457] = vX_[101] * vX_[289] + vX_[95] * vX_[442] + vX_[457];
    vX_[433] = vX_[95] * vX_[289] + vX_[83] * vX_[442] + vX_[433];
    vX_[448] = -0.0825 * vX_[289] + vX_[448];
    vX_[340] = vX_[108] * vX_[289] + vX_[109] * vX_[98] + vX_[110] * vX_[442] + vX_[111] * vX_[338] + vX_[85] * vX_[462] + vX_[340];
    vX_[289] = vX_[84] * vX_[289] + vX_[86] * vX_[98] + vX_[87] * vX_[442] + vX_[88] * vX_[338] + vX_[83] * vX_[462] + vX_[351];
    jac[53] = (vX_[350] - vX_[81] * vX_[98] - 0.002164052 * vX_[457] - vX_[187] * vX_[433] - vX_[215] * vX_[448] - vX_[182] * vX_[340] - vX_[199] * vX_[289]) / vX_[81];
    vX_[457] = -1 * vX_[457];
    vX_[98] = vX_[98] + jac[53];
    vX_[441] = vX_[70] * vX_[98] + vX_[106] * vX_[433] + vX_[441];
    vX_[98] = vX_[49] * vX_[98] + vX_[70] * vX_[433] + vX_[438];
    vX_[340] = -1 * vX_[340];
    vX_[413] = vX_[49] * vX_[448] + vX_[70] * vX_[289] + vX_[413];
    jac[54] = (vX_[344] - vX_[68] * vX_[457] - vX_[75] * vX_[441] - vX_[67] * vX_[98] - vX_[94] * vX_[340] - vX_[163] * (vX_[70] * vX_[448] + vX_[106] * vX_[289] + vX_[13]) - vX_[171] * vX_[413]) / vX_[68];
    vX_[457] = vX_[457] + jac[54];
    jac[55] = (vX_[185] - 0.0049096523 * -1 * vX_[441] - -0.0005483591 * (vX_[50] * vX_[457] + vX_[66] * vX_[98] + vX_[465]) - -0.0016724827 * (vX_[53] * vX_[457] + vX_[50] * vX_[98] + vX_[132]) - 0.007735484874 * (vX_[50] * vX_[340] + vX_[148] * vX_[413] + vX_[127] * vX_[441] + vX_[166]) - 0.003127439544 * (vX_[53] * vX_[340] + vX_[50] * vX_[413] + vX_[54] * vX_[441] + vX_[341])) / 0.0049096523;
    vX_[457] = -1 * sin(x_in[4]);
    vX_[413] = -0.384 * vX_[457];
    vX_[340] = cos(x_in[4]);
    vX_[98] = -0.0825 * vX_[340];
    vX_[441] = -0.384 * vX_[340];
    vX_[185] = - vX_[340];
    vX_[341] = vX_[413] * vX_[37] + vX_[98] * vX_[29] + vX_[441] * vX_[46] + vX_[185] * vX_[36] + vX_[457] * vX_[92];
    vX_[166] = vX_[82] * vX_[341];
    vX_[132] = - vX_[340];
    vX_[465] = vX_[457] * vX_[46] + vX_[132] * vX_[37];
    vX_[289] = vX_[465] * vX_[99];
    vX_[448] = - vX_[457];
    vX_[344] = vX_[132] * vX_[46] + vX_[448] * vX_[37];
    vX_[13] = vX_[96] * vX_[344] + vX_[465] * vX_[103];
    vX_[433] = vX_[465] * vX_[82];
    vX_[438] = 0.384 * vX_[340];
    vX_[350] = -0.0825 * vX_[457];
    vX_[462] = -0.384 * vX_[457];
    vX_[338] = - vX_[457];
    vX_[340] = - vX_[340];
    vX_[442] = vX_[438] * vX_[37] + vX_[350] * vX_[29] + vX_[462] * vX_[46] + vX_[338] * vX_[36] + vX_[340] * vX_[92];
    vX_[351] = -1 * vX_[442];
    vX_[154] = vX_[106] * vX_[465];
    vX_[315] = vX_[106] * vX_[341];
    vX_[247] = -1 * vX_[344];
    vX_[466] = vX_[107] * vX_[351] + vX_[154] * vX_[116] - (vX_[117] * vX_[315] + vX_[247] * vX_[120]);
    vX_[456] = vX_[107] * vX_[247] + vX_[154] * vX_[117];
    vX_[208] = vX_[117] * vX_[247] + vX_[247] * vX_[117];
    vX_[361] = vX_[70] * vX_[465];
    vX_[468] = vX_[124] * vX_[361] + vX_[361] * vX_[124];
    vX_[298] = -0.088 * vX_[247] + -1 * vX_[315];
    vX_[158] = vX_[50] * vX_[361] + vX_[53] * vX_[247];
    vX_[471] = vX_[128] * vX_[298] + vX_[158] * vX_[131];
    vX_[317] = vX_[70] * vX_[341];
    vX_[286] = vX_[53] * vX_[351] + vX_[50] * vX_[317] + vX_[54] * vX_[154];
    vX_[290] = -1 * vX_[154];
    vX_[288] = vX_[133] * vX_[286] + vX_[290] * vX_[138];
    vX_[467] = vX_[471] - vX_[288];
    vX_[328] = vX_[66] * vX_[361] + vX_[50] * vX_[247];
    vX_[473] = vX_[128] * vX_[328] + vX_[158] * vX_[142];
    vX_[337] = vX_[142] * vX_[290] + vX_[328] * vX_[133];
    vX_[313] = (- vX_[158]) * x_in[13];
    vX_[285] = vX_[328] * x_in[13];
    vX_[193] = (- vX_[286]) * x_in[13];
    vX_[306] = vX_[50] * vX_[351] + vX_[148] * vX_[317] + vX_[127] * vX_[154];
    vX_[291] = vX_[306] * x_in[13];
    vX_[458] = vX_[128] * vX_[290] + vX_[158] * vX_[133];
    vX_[298] = vX_[142] * vX_[298] + vX_[328] * vX_[131] - (vX_[133] * vX_[306] + vX_[290] * vX_[152]);
    vX_[432] = vX_[142] * vX_[328] + vX_[328] * vX_[142];
    vX_[326] = vX_[128] * vX_[158] + vX_[158] * vX_[128];
    vX_[288] = 0.007735484874 * (vX_[288] - vX_[471]) + -0.002420945 * vX_[473] + -0.0005483591 * vX_[458] - -0.003127439544 * vX_[298] - -0.0016724827 * vX_[337] - -0.0003951087 * (vX_[432] - vX_[326]);
    vX_[471] = 0 - vX_[288];
    vX_[290] = vX_[133] * vX_[290] + vX_[290] * vX_[133];
    vX_[325] = -0.735522 * vX_[467] + 0.007735484874 * vX_[473] + 0.045305948634 * vX_[337] + 0.000863976360112152 * vX_[313] + -0.0426708405168984 * vX_[285] + 0.72333422730663 * vX_[193] + -0.00492748973017121 * vX_[291] + (0.007735484874 * vX_[471]) / 0.0049096523 - -0.003127439544 * (vX_[290] + vX_[326]);
    vX_[151] = 0.735522 * vX_[298] + 0.045305948634 * vX_[458] + -0.003127439544 * vX_[473] + 0.0456552523787178 * vX_[313] + 0.00106536842387716 * vX_[285] + -0.00492748973017121 * vX_[193] + 0.733529826725046 * vX_[291] + (0.003127439544 * vX_[471]) / 0.0049096523 - 0.007735484874 * (vX_[290] + vX_[432]);
    vX_[330] = (- vX_[361]) * x_in[12];
    vX_[327] = vX_[154] * x_in[12];
    vX_[345] = (- vX_[317]) * x_in[12];
    vX_[281] = vX_[315] * x_in[12];
    vX_[275] = vX_[117] * vX_[317] + vX_[247] * vX_[137];
    vX_[351] = vX_[124] * vX_[351] + vX_[361] * vX_[116];
    vX_[348] = vX_[124] * vX_[154] + vX_[361] * vX_[107];
    vX_[247] = vX_[124] * vX_[247] + vX_[361] * vX_[117];
    vX_[306] = vX_[128] * vX_[306] + vX_[158] * vX_[152] - (vX_[142] * vX_[286] + vX_[328] * vX_[138]);
    vX_[298] = 0.045305948634 * vX_[298] + -0.0003951087 * vX_[337] + -0.0016724827 * (vX_[290] - vX_[326]) + 0.0128378177682551 * vX_[313] + -0.000581908304553986 * vX_[285] + 0.000863976360112152 * vX_[193] + 0.0456552523787178 * vX_[291] + (-0.0005483591 * vX_[471]) / 0.0049096523 - 0.007735484874 * vX_[306] - -0.0104103567 * vX_[458] - -0.0005483591 * vX_[473];
    vX_[290] = -0.003127439544 * vX_[306] + 0.045305948634 * vX_[467] + -0.0079894117 * vX_[337] + -0.0016724827 * vX_[473] + -0.000581908304553986 * vX_[313] + 0.0147502744829958 * vX_[285] + -0.0426708405168984 * vX_[193] + 0.00106536842387716 * vX_[291] + (-0.0016724827 * vX_[471]) / 0.0049096523 - -0.0003951087 * vX_[458] - -0.0005483591 * (vX_[290] - vX_[432]);
    vX_[306] = 0.735522 * vX_[306] + 0.007735484874 * vX_[458] + -0.003127439544 * vX_[337] + -0.007735484874 * vX_[313] + -0.003127439544 * vX_[285] - 0.045305948634 * (vX_[432] + vX_[326]);
    vX_[326] = vX_[107] * vX_[154] + vX_[154] * vX_[107];
    vX_[432] = 0.100241616695 * (vX_[275] - vX_[351]) + 0.0080873057 * vX_[348] + 9.3569106e-05 * vX_[247] + vX_[50] * vX_[298] + vX_[53] * vX_[290] + -0.088 * vX_[306] - -0.023526756935 * vX_[466] - -0.000103758764 * vX_[456] - 0.0015241109 * (vX_[326] - vX_[468]);
    vX_[458] = 0 - vX_[432];
    vX_[317] = vX_[124] * vX_[315] + vX_[361] * vX_[120] - (vX_[107] * vX_[317] + vX_[154] * vX_[137]);
    vX_[288] = -0.017527158935 * vX_[466] + 0.0015241109 * vX_[456] + -0.000103758764 * (vX_[208] - vX_[468]) + vX_[127] * vX_[325] + vX_[54] * vX_[151] + -1 * (vX_[288] + (0.0049096523 * vX_[471]) / 0.0049096523) + vX_[58] * vX_[330] + vX_[77] * vX_[327] + vX_[165] * vX_[345] + vX_[173] * vX_[281] + (vX_[75] * vX_[458]) / vX_[68] - 0.100241616695 * vX_[317] - 0.0093141007 * vX_[247] - 9.3569106e-05 * vX_[348];
    vX_[351] = vX_[351] - vX_[275];
    vX_[290] = -0.023526756935 * vX_[317] + -0.017527158935 * vX_[351] + 0.001226795 * vX_[456] + -0.000103758764 * vX_[348] + vX_[66] * vX_[298] + vX_[50] * vX_[290] + vX_[77] * vX_[330] + vX_[65] * vX_[327] + vX_[168] * vX_[345] + vX_[118] * vX_[281] + (vX_[67] * vX_[458]) / vX_[68] - 0.0015241109 * vX_[247] - 9.3569106e-05 * (vX_[208] - vX_[326]);
    vX_[298] = vX_[344] * vX_[99] - vX_[82] * vX_[442];
    vX_[275] = vX_[344] * vX_[82];
    vX_[361] = vX_[103] * vX_[344] + vX_[344] * vX_[103];
    vX_[315] = vX_[96] * vX_[465] + vX_[465] * vX_[96];
    vX_[154] = -0.014653732538 * (vX_[166] - vX_[289]) + -0.0079672 * vX_[13] + 0.002164052 * vX_[433] + vX_[70] * vX_[288] + vX_[49] * vX_[290] - 0.05034347249 * vX_[298] - -0.0046002455 * vX_[275] - -0.0015152446 * (vX_[361] - vX_[315]);
    vX_[337] = 0 - vX_[154];
    vX_[289] = vX_[289] - vX_[166];
    vX_[166] = (- vX_[465]) * x_in[11];
    vX_[473] = vX_[344] * x_in[11];
    vX_[467] = (- vX_[341]) * x_in[11];
    vX_[328] = vX_[442] * x_in[11];
    vX_[317] = -1.225946 * vX_[289] + -0.014653732538 * vX_[13] + -0.047121686402 * vX_[275] + -1 * (1.666555 * vX_[317] + 0.100241616695 * vX_[247] + -0.023526756935 * vX_[456] + vX_[50] * vX_[325] + vX_[53] * vX_[151] + vX_[162] * vX_[330] + vX_[135] * vX_[327] + vX_[130] * vX_[345] + vX_[179] * vX_[281] + (vX_[94] * vX_[458]) / vX_[68] - -0.017527158935 * (vX_[326] + vX_[468])) + vX_[184] * vX_[166] + vX_[188] * vX_[473] + vX_[192] * vX_[467] + vX_[200] * vX_[328] + (vX_[182] * vX_[337]) / vX_[81] - 0.05034347249 * vX_[315];
    vX_[351] = -1.666555 * vX_[351] + 0.100241616695 * vX_[348] + -0.017527158935 * vX_[456] + -1 * vX_[306] + vX_[165] * vX_[330] + vX_[168] * vX_[327] + vX_[203] * vX_[345] + vX_[204] * vX_[281] + (vX_[163] * vX_[458]) / vX_[68] - -0.023526756935 * (vX_[208] + vX_[468]);
    vX_[326] = 1.666555 * vX_[466] + -0.017527158935 * vX_[247] + -0.023526756935 * vX_[348] + vX_[148] * vX_[325] + vX_[50] * vX_[151] + vX_[173] * vX_[330] + vX_[118] * vX_[327] + vX_[204] * vX_[345] + vX_[190] * vX_[281] + (vX_[171] * vX_[458]) / vX_[68] - 0.100241616695 * (vX_[208] + vX_[326]);
    vX_[247] = 1.225946 * vX_[298] + -0.047121686402 * vX_[433] + 0.05034347249 * vX_[13] + vX_[106] * vX_[351] + vX_[70] * vX_[326] + vX_[186] * vX_[166] + vX_[121] * vX_[473] + vX_[200] * vX_[467] + vX_[207] * vX_[328] + (vX_[199] * vX_[337]) / vX_[81] - -0.014653732538 * vX_[361];
    vX_[348] = -0.0825 * vX_[448];
    vX_[151] = vX_[98] * vX_[207] - vX_[348] * vX_[200];
    vX_[325] = vX_[98] * vX_[200] - vX_[348] * vX_[192];
    vX_[211] = vX_[210] * vX_[98] + vX_[151] * vX_[86] - (vX_[211] * vX_[348] + vX_[325] * vX_[209]);
    vX_[210] = vX_[83] * vX_[462] + vX_[457] * vX_[110] + vX_[95] * vX_[438] + vX_[132] * vX_[108];
    vX_[208] = vX_[210] * vX_[200];
    vX_[466] = vX_[98] * vX_[217];
    vX_[306] = vX_[208] - vX_[466];
    vX_[468] = vX_[210] * vX_[192] - vX_[98] * vX_[220];
    vX_[456] = vX_[121] * vX_[98] + vX_[219] * vX_[98] + vX_[306] * vX_[86] - vX_[188] * vX_[348] - (vX_[221] * vX_[348] + vX_[468] * vX_[209]);
    vX_[286] = vX_[348] * vX_[217] - vX_[210] * vX_[207];
    vX_[158] = vX_[348] * vX_[220];
    vX_[208] = vX_[158] - vX_[208];
    vX_[214] = vX_[186] * vX_[98] + vX_[223] * vX_[98] + vX_[286] * vX_[86] - vX_[184] * vX_[348] - (vX_[214] * vX_[348] + vX_[208] * vX_[209]);
    vX_[347] = - vX_[214];
    vX_[343] = vX_[95] * vX_[456] + vX_[132] * vX_[222] + vX_[83] * vX_[347] + vX_[457] * vX_[226];
    vX_[297] = vX_[210] * vX_[220] - vX_[98] * vX_[206];
    vX_[231] = vX_[228] * vX_[210] + vX_[221] * vX_[210] + vX_[468] * vX_[213] - vX_[231] * vX_[98] - (vX_[191] * vX_[98] + vX_[297] * vX_[86]) - vX_[211];
    vX_[191] = vX_[184] * vX_[210] + vX_[230] * vX_[348] + vX_[191] * vX_[348] + vX_[297] * vX_[209] - vX_[121] * vX_[210] - vX_[181] * vX_[98] - (vX_[219] * vX_[210] + vX_[306] * vX_[213]);
    vX_[232] = vX_[95] * vX_[231] + vX_[132] * vX_[232] + vX_[101] * vX_[191] + vX_[448] * vX_[235];
    vX_[206] = vX_[348] * vX_[206] - vX_[210] * vX_[217];
    vX_[210] = vX_[237] * vX_[348] + vX_[239] * vX_[348] + vX_[206] * vX_[209] - vX_[240] * vX_[210] - (vX_[223] * vX_[210] + vX_[286] * vX_[213]) - vX_[211];
    vX_[191] = vX_[95] * vX_[191] + vX_[132] * vX_[235] + vX_[101] * vX_[210] + vX_[448] * vX_[241];
    vX_[241] = vX_[236] * vX_[132] + vX_[232] * vX_[95] + vX_[242] * vX_[448] + vX_[191] * vX_[101];
    vX_[235] = vX_[211] + vX_[241];
    vX_[348] = (vX_[343] - vX_[245] * vX_[235]) / vX_[244];
    vX_[240] = vX_[211] - (vX_[227] * vX_[348] + vX_[343] * vX_[245]);
    vX_[191] = vX_[242] * vX_[132] + vX_[191] * vX_[95] + vX_[236] * vX_[457] + vX_[232] * vX_[83];
    vX_[348] = vX_[225] * vX_[132] + 2. * vX_[214] * vX_[95] + vX_[248] * vX_[457] + 2. * vX_[456] * vX_[83] + vX_[101] * vX_[456] + vX_[448] * vX_[222] + vX_[95] * vX_[347] + vX_[132] * vX_[226] - (vX_[249] * vX_[348] + vX_[191] * vX_[245]);
    vX_[158] = vX_[466] - vX_[158];
    vX_[466] = - vX_[206];
    vX_[347] = vX_[83] * vX_[466] + vX_[457] * vX_[252] + vX_[95] * vX_[297] + vX_[132] * vX_[253];
    vX_[214] = (vX_[347] - vX_[256] * vX_[235]) / vX_[244];
    vX_[456] = vX_[158] - (vX_[227] * vX_[214] + vX_[343] * vX_[256]);
    vX_[206] = vX_[325] + vX_[206];
    vX_[151] = vX_[151] + vX_[297];
    vX_[466] = vX_[95] * vX_[466] + vX_[132] * vX_[252] + vX_[101] * vX_[297] + vX_[448] * vX_[253];
    vX_[208] = vX_[208] - vX_[158];
    vX_[297] = vX_[95] * vX_[468] + vX_[132] * vX_[261] + vX_[101] * vX_[208] + vX_[448] * vX_[262];
    vX_[306] = vX_[306] - vX_[158];
    vX_[253] = vX_[95] * vX_[306] + vX_[132] * vX_[264] + vX_[101] * vX_[286] + vX_[448] * vX_[265];
    vX_[252] = vX_[263] * vX_[132] + vX_[297] * vX_[95] + vX_[266] * vX_[457] + vX_[253] * vX_[83];
    vX_[325] = (vX_[252] - vX_[268] * vX_[235]) / vX_[244];
    vX_[248] = vX_[218] * vX_[132] + vX_[206] * vX_[95] + vX_[259] * vX_[457] + vX_[151] * vX_[83] + vX_[466] - (vX_[227] * vX_[325] + vX_[343] * vX_[268]);
    vX_[442] = vX_[96] * vX_[442] + vX_[465] * vX_[115] - (vX_[103] * vX_[341] + vX_[344] * vX_[93]);
    vX_[298] = -0.047121686402 * vX_[298] + -0.0015152446 * vX_[275] + -0.0046002455 * (0 - vX_[315]) + -1 * (vX_[432] + (vX_[68] * vX_[458]) / vX_[68]) + vX_[238] * vX_[166] + vX_[234] * vX_[473] + vX_[184] * vX_[467] + vX_[186] * vX_[328] + (0.002164052 * vX_[337]) / vX_[81] - -0.014653732538 * vX_[442] - -0.0285580595 * vX_[433] - 0.002164052 * vX_[13];
    vX_[289] = 0.05034347249 * vX_[442] + -0.047121686402 * vX_[289] + -0.0205908595 * vX_[275] + -0.0046002455 * vX_[13] + vX_[106] * vX_[288] + vX_[70] * vX_[290] + vX_[234] * vX_[166] + vX_[80] * vX_[473] + vX_[188] * vX_[467] + vX_[121] * vX_[328] + (vX_[187] * vX_[337]) / vX_[81] - -0.0015152446 * vX_[433] - 0.002164052 * (0 - vX_[361]);
    vX_[442] = 1.225946 * vX_[442] + -0.014653732538 * vX_[433] + 0.05034347249 * vX_[275] + vX_[70] * vX_[351] + vX_[49] * vX_[326] + vX_[181] * vX_[166] + vX_[230] * vX_[473] + vX_[220] * vX_[467] + vX_[217] * vX_[328] + (vX_[215] * vX_[337]) / vX_[81] - -0.047121686402 * (vX_[361] + vX_[315]);
    vX_[326] = vX_[101] * vX_[298] + vX_[448] * vX_[365] + vX_[95] * vX_[289] + vX_[132] * vX_[399] + -0.0825 * vX_[442] + vX_[108] * vX_[317] + vX_[438] * vX_[367] + vX_[84] * vX_[247] + vX_[413] * vX_[387];
    vX_[351] = 0 - vX_[326];
    vX_[154] = (vX_[81] * vX_[337]) / vX_[81] + vX_[154] + vX_[109] * vX_[317] + vX_[350] * vX_[367] + vX_[86] * vX_[247] + vX_[98] * vX_[387] + vX_[240] * vX_[43] + vX_[348] * vX_[44] + vX_[456] * vX_[401] + vX_[248] * vX_[402] + (vX_[227] * vX_[351] + vX_[343] * vX_[371] - vX_[45] * vX_[235]) / vX_[244];
    vX_[241] = vX_[210] + vX_[231] + vX_[211] - vX_[241] - (vX_[249] * (vX_[191] - vX_[271] * vX_[235]) / vX_[244] + vX_[191] * vX_[271]);
    vX_[466] = 0 - vX_[466] - (vX_[249] * vX_[214] + vX_[191] * vX_[256]);
    vX_[208] = vX_[83] * vX_[468] + vX_[457] * vX_[261] + vX_[95] * vX_[208] + vX_[132] * vX_[262];
    vX_[306] = vX_[83] * vX_[306] + vX_[457] * vX_[264] + vX_[95] * vX_[286] + vX_[132] * vX_[265];
    vX_[286] = vX_[212] * vX_[132] + vX_[208] * vX_[95] + vX_[47] * vX_[457] + vX_[306] * vX_[83] + vX_[158] - (vX_[249] * vX_[325] + vX_[191] * vX_[268]);
    vX_[289] = vX_[95] * vX_[298] + vX_[132] * vX_[365] + vX_[83] * vX_[289] + vX_[457] * vX_[399] + vX_[110] * vX_[317] + vX_[462] * vX_[367] + vX_[87] * vX_[247] + vX_[441] * vX_[387] + vX_[348] * vX_[43] + vX_[241] * vX_[44] + vX_[466] * vX_[401] + vX_[286] * vX_[402] + (vX_[249] * vX_[351] + vX_[191] * vX_[371] - vX_[403] * vX_[235]) / vX_[244];
    vX_[253] = vX_[263] * vX_[448] + vX_[297] * vX_[101] + vX_[266] * vX_[132] + vX_[253] * vX_[95] + vX_[158];
    vX_[297] = (vX_[253] - vX_[97] * vX_[235]) / vX_[244];
    vX_[151] = vX_[218] * vX_[448] + vX_[206] * vX_[101] + vX_[259] * vX_[132] + vX_[151] * vX_[95] - vX_[347] - (vX_[227] * vX_[297] + vX_[343] * vX_[97]);
    vX_[306] = vX_[212] * vX_[448] + vX_[208] * vX_[101] + vX_[47] * vX_[132] + vX_[306] * vX_[95] - (vX_[249] * vX_[297] + vX_[191] * vX_[97]);
    vX_[208] = vX_[132] * vX_[217] + vX_[457] * vX_[114] - (vX_[255] * vX_[297] + vX_[347] * vX_[97]);
    vX_[105] = vX_[132] * vX_[200] + vX_[448] * vX_[105];
    vX_[136] = vX_[132] * vX_[136] + vX_[448] * vX_[200];
    vX_[47] = vX_[100] * vX_[132] + vX_[105] * vX_[95] + vX_[139] * vX_[457] + vX_[136] * vX_[83] - (vX_[267] * vX_[297] + vX_[252] * vX_[97]);
    vX_[212] = vX_[111] * vX_[317] + vX_[338] * vX_[367] + vX_[88] * vX_[247] + vX_[185] * vX_[387] + vX_[151] * vX_[43] + vX_[306] * vX_[44] + vX_[208] * vX_[401] + vX_[47] * vX_[402] + (vX_[224] * vX_[351] + vX_[253] * vX_[371] - vX_[411] * vX_[235]) / vX_[244];
    vX_[206] = vX_[26] * vX_[154] + vX_[27] * vX_[289] + -0.0825 * vX_[212];
    vX_[259] = 0 - vX_[206];
    vX_[136] = vX_[139] * vX_[132] + vX_[136] * vX_[95] + vX_[100] * vX_[448] + vX_[105] * vX_[101];
    vX_[325] = 0 - vX_[136] - (vX_[267] * vX_[325] + vX_[252] * vX_[268]);
    vX_[279] = vX_[278] * vX_[132] + vX_[279] * vX_[457] + vX_[448] * vX_[217] + vX_[132] * vX_[114] - (vX_[267] * vX_[214] + vX_[252] * vX_[256]);
    vX_[278] = vX_[274] * vX_[325] - vX_[277] * vX_[279];
    vX_[214] = 0 - (vX_[255] * vX_[214] + vX_[347] * vX_[256]);
    vX_[114] = vX_[274] * vX_[279] - vX_[277] * vX_[214];
    vX_[105] = vX_[278] * vX_[274] - vX_[114] * vX_[277];
    vX_[136] = vX_[136] - (vX_[224] * vX_[297] + vX_[253] * vX_[97]);
    vX_[297] = - vX_[274] * vX_[136];
    vX_[241] = vX_[241] - 2. * vX_[306] * vX_[274] - vX_[297] * vX_[274] - vX_[105];
    vX_[348] = vX_[348] + vX_[306] * vX_[277] + vX_[297] * vX_[277] - vX_[151] * vX_[274];
    vX_[139] = vX_[27] * vX_[241] + vX_[26] * vX_[348];
    vX_[100] = vX_[277] * vX_[136];
    vX_[240] = 2. * vX_[151] * vX_[277] + vX_[240] + vX_[100] * vX_[277] - vX_[105];
    vX_[348] = vX_[27] * vX_[348] + vX_[26] * vX_[240];
    vX_[218] = vX_[139] * vX_[27] + vX_[348] * vX_[26];
    vX_[158] = vX_[105] + vX_[218];
    vX_[100] = vX_[100] + vX_[151];
    vX_[151] = - vX_[100];
    vX_[297] = vX_[297] + vX_[306];
    vX_[306] = vX_[27] * vX_[151] + vX_[26] * vX_[297];
    vX_[151] = vX_[26] * vX_[151] + vX_[28] * vX_[297];
    vX_[266] = (vX_[151] - vX_[304] * vX_[158]) / vX_[295];
    vX_[348] = vX_[348] * vX_[28] + vX_[139] * vX_[26];
    vX_[139] = 0 - vX_[306] - (vX_[301] * vX_[266] + vX_[348] * vX_[304]);
    vX_[218] = vX_[240] + vX_[241] + vX_[105] - vX_[218] - (vX_[301] * (vX_[348] - vX_[308] * vX_[158]) / vX_[295] + vX_[348] * vX_[308]);
    vX_[240] = vX_[136] - (vX_[303] * vX_[266] + vX_[151] * vX_[304]);
    vX_[241] = vX_[307] * vX_[240];
    vX_[263] = 2. * vX_[139] * vX_[307] + vX_[218] + vX_[241] * vX_[307];
    vX_[298] = vX_[274] * vX_[47];
    vX_[399] = vX_[277] * vX_[208];
    vX_[365] = vX_[298] - vX_[399];
    vX_[298] = - vX_[298];
    vX_[265] = - vX_[274] * vX_[208];
    vX_[264] = vX_[286] * vX_[274] + vX_[298] * vX_[274] - vX_[466] * vX_[277] - vX_[265] * vX_[277];
    vX_[468] = vX_[277] * vX_[47];
    vX_[262] = vX_[248] * vX_[274] + vX_[468] * vX_[274] - vX_[456] * vX_[277] - vX_[399] * vX_[277];
    vX_[261] = - vX_[262];
    vX_[210] = vX_[28] * vX_[264] + vX_[26] * vX_[261];
    vX_[231] = vX_[365] - (vX_[320] * vX_[266] + vX_[210] * vX_[304]);
    vX_[211] = (vX_[210] - vX_[323] * vX_[158]) / vX_[295];
    vX_[261] = -1 * 2. * vX_[262] * vX_[28] + -1 * 2. * vX_[264] * vX_[26] + vX_[26] * vX_[264] + vX_[27] * vX_[261] - (vX_[301] * vX_[211] + vX_[348] * vX_[323]);
    vX_[265] = vX_[265] + vX_[466];
    vX_[399] = vX_[456] + vX_[399] - vX_[365];
    vX_[262] = vX_[26] * vX_[265] + vX_[28] * vX_[399];
    vX_[298] = vX_[286] + vX_[298] - vX_[365];
    vX_[468] = vX_[468] + vX_[248];
    vX_[264] = vX_[26] * vX_[298] + vX_[28] * vX_[468];
    vX_[399] = vX_[27] * vX_[265] + vX_[26] * vX_[399];
    vX_[468] = vX_[27] * vX_[298] + vX_[26] * vX_[468];
    vX_[298] = vX_[399] * vX_[28] + vX_[468] * vX_[26];
    vX_[265] = (vX_[298] - vX_[334] * vX_[158]) / vX_[295];
    vX_[315] = vX_[262] * vX_[28] + vX_[264] * vX_[26] + vX_[365] - (vX_[301] * vX_[265] + vX_[348] * vX_[334]);
    vX_[361] = - vX_[208];
    vX_[266] = -1 * 2. * vX_[208] * vX_[28] + -1 * 2. * vX_[47] * vX_[26] + vX_[26] * vX_[47] + vX_[27] * vX_[361] - (vX_[333] * vX_[266] + vX_[298] * vX_[304]);
    vX_[208] = vX_[307] * vX_[266];
    vX_[275] = vX_[231] * vX_[307] + vX_[261] - vX_[315] * vX_[307] - vX_[208] * vX_[307];
    vX_[433] = vX_[11] * vX_[263] + vX_[15] * vX_[275];
    vX_[211] = vX_[105] - (vX_[320] * vX_[211] + vX_[210] * vX_[323]);
    vX_[100] = -1 * (vX_[114] + vX_[100]);
    vX_[297] = -1 * (vX_[278] + vX_[297]);
    vX_[306] = vX_[100] * vX_[28] + vX_[297] * vX_[26] + vX_[306] - (vX_[320] * vX_[265] + vX_[210] * vX_[334]);
    vX_[278] = vX_[214] - vX_[136];
    vX_[114] = vX_[325] - vX_[136];
    vX_[105] = vX_[27] * vX_[279] + vX_[26] * vX_[278];
    vX_[290] = vX_[27] * vX_[114] + vX_[26] * vX_[279];
    vX_[114] = vX_[278] + vX_[114] + vX_[136] - vX_[105] * vX_[26] - vX_[290] * vX_[27] - (vX_[333] * vX_[265] + vX_[298] * vX_[334]);
    vX_[278] = - vX_[307] * vX_[114];
    vX_[265] = vX_[211] - 2. * vX_[306] * vX_[307] - vX_[278] * vX_[307];
    vX_[275] = vX_[11] * vX_[275] + vX_[15] * vX_[265];
    vX_[136] = vX_[433] * vX_[11] + vX_[275] * vX_[15];
    vX_[288] = ((- vX_[355]) * vX_[136]) / vX_[354];
    vX_[13] = - 0.0007689361 * vX_[288];
    vX_[275] = vX_[275] * vX_[20] + vX_[433] * vX_[15];
    vX_[288] = -(vX_[358] * vX_[288] + vX_[275] * vX_[355]);
    vX_[214] = vX_[442] + vX_[456] * vX_[43] + vX_[466] * vX_[44] + vX_[214] * vX_[401] + vX_[279] * vX_[402] + (vX_[255] * vX_[351] + vX_[347] * vX_[371] - vX_[425] * vX_[235]) / vX_[244];
    vX_[279] = vX_[85] * vX_[317] + vX_[340] * vX_[367] + vX_[83] * vX_[247] + vX_[457] * vX_[387] + vX_[248] * vX_[43] + vX_[286] * vX_[44] + vX_[279] * vX_[401] + vX_[325] * vX_[402] + (vX_[267] * vX_[351] + vX_[252] * vX_[371] - vX_[409] * vX_[235]) / vX_[244];
    vX_[211] = vX_[38] * vX_[214] + vX_[89] * vX_[279] + -1 * (vX_[326] + (vX_[244] * vX_[351] + vX_[235] * vX_[371] - vX_[406] * vX_[235]) / vX_[244]) + vX_[211] * vX_[202] + vX_[261] * vX_[102] + vX_[231] * vX_[90] + vX_[306] * vX_[426] + (vX_[320] * vX_[259] + vX_[210] * vX_[417] - vX_[427] * vX_[158]) / vX_[295];
    vX_[261] = vX_[28] * vX_[154] + vX_[26] * vX_[289] + vX_[261] * vX_[202] + vX_[218] * vX_[102] + vX_[139] * vX_[90] + vX_[315] * vX_[426] + (vX_[301] * vX_[259] + vX_[348] * vX_[417] - vX_[429] * vX_[158]) / vX_[295];
    vX_[240] = -1 * vX_[212] + vX_[231] * vX_[202] + vX_[139] * vX_[102] + vX_[240] * vX_[90] + vX_[266] * vX_[426] + (vX_[303] * vX_[259] + vX_[151] * vX_[417] - vX_[430] * vX_[158]) / vX_[295];
    vX_[279] = vX_[39] * vX_[214] + vX_[26] * vX_[279] + vX_[306] * vX_[202] + vX_[315] * vX_[102] + vX_[266] * vX_[90] + vX_[114] * vX_[426] + (vX_[333] * vX_[259] + vX_[298] * vX_[417] - vX_[415] * vX_[158]) / vX_[295];
    vX_[214] = 0 - vX_[15] * vX_[211] - vX_[11] * vX_[261] - vX_[34] * vX_[240] - vX_[16] * vX_[279];
    vX_[265] = vX_[265] + vX_[263] - vX_[136] - (vX_[358] * (vX_[275] - vX_[153] * vX_[136]) / vX_[354] + vX_[275] * vX_[153]);
    vX_[241] = vX_[241] + vX_[139];
    vX_[231] = vX_[231] - vX_[208];
    vX_[208] = vX_[208] + vX_[315];
    vX_[278] = vX_[278] + vX_[306];
    vX_[306] = (vX_[11] * vX_[241] + vX_[15] * vX_[231]) * vX_[20] + (vX_[11] * vX_[208] + vX_[15] * vX_[278]) * vX_[15];
    vX_[315] = (vX_[306] - vX_[434] * vX_[136]) / vX_[354];
    vX_[468] = vX_[399] * vX_[26] + vX_[468] * vX_[27] + vX_[365];
    vX_[399] = (vX_[468] - vX_[436] * vX_[158]) / vX_[295];
    vX_[290] = vX_[100] * vX_[26] + vX_[297] * vX_[27] - vX_[307] * (vX_[105] * vX_[28] + vX_[290] * vX_[26] - (vX_[333] * vX_[399] + vX_[298] * vX_[436])) - vX_[151] - (vX_[320] * vX_[399] + vX_[210] * vX_[436]);
    vX_[399] = vX_[262] * vX_[26] + vX_[264] * vX_[27] + vX_[307] * (vX_[28] * vX_[47] + vX_[26] * vX_[361] - (vX_[303] * vX_[399] + vX_[151] * vX_[436])) - (vX_[301] * vX_[399] + vX_[348] * vX_[436]);
    vX_[361] = - vX_[290];
    vX_[264] = vX_[11] * vX_[361] + vX_[15] * vX_[399];
    vX_[361] = vX_[20] * vX_[399] + vX_[15] * vX_[361];
    vX_[262] = (vX_[361] - vX_[446] * vX_[136]) / vX_[354];
    jac[63] = (0 - vX_[0] * (-1 * (vX_[206] + (vX_[295] * vX_[259] + vX_[158] * vX_[417] - vX_[418] * vX_[158]) / vX_[295]) + vX_[13] * vX_[420] + vX_[288] * vX_[14] + (0.0007689361 * vX_[214] - vX_[412] * vX_[136]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[211] + vX_[15] * vX_[261] + vX_[30] * vX_[240] + vX_[12] * vX_[279] + vX_[288] * vX_[420] + vX_[265] * vX_[14] + (vX_[358] * vX_[214] + vX_[275] * vX_[414] - vX_[91] * vX_[136]) / vX_[354]) - 9.81 * ((vX_[4] * ((vX_[15] * vX_[241] + vX_[20] * vX_[231]) * vX_[20] + (vX_[15] * vX_[208] + vX_[20] * vX_[278]) * vX_[15] - (vX_[358] * vX_[315] + vX_[275] * vX_[434])) + vX_[0] * (-1 * vX_[290] * vX_[20] + -1 * vX_[399] * vX_[15] + vX_[264] - 0.0007689361 * vX_[315])) * vX_[4] + (vX_[4] * (0 - vX_[264] - (vX_[358] * vX_[262] + vX_[275] * vX_[446])) + vX_[0] * (- 0.0007689361 * vX_[262])) * vX_[0]) - vX_[452] * ((vX_[4] * vX_[288] + vX_[0] * vX_[13]) * vX_[0] + (vX_[4] * vX_[265] + vX_[0] * vX_[288]) * vX_[4])) / vX_[451];
    vX_[262] = vX_[0] * jac[63];
    vX_[264] = vX_[4] * jac[63];
    jac[64] = (vX_[214] - 0.0007689361 * vX_[262] - (vX_[358] * vX_[264] + vX_[275] * vX_[113]) - vX_[361] * vX_[437] - vX_[306] * vX_[431] - vX_[445] * vX_[136]) / vX_[354];
    vX_[262] = -1 * vX_[262];
    vX_[361] = vX_[15] * jac[64] + vX_[20] * vX_[264];
    vX_[306] = vX_[11] * jac[64] + vX_[15] * vX_[264];
    vX_[214] = vX_[34] * jac[64] + vX_[30] * vX_[264];
    vX_[264] = vX_[16] * jac[64] + vX_[12] * vX_[264];
    jac[65] = (vX_[259] - (vX_[295] * vX_[262] + vX_[158] * vX_[310]) - (vX_[320] * vX_[361] + vX_[210] * vX_[24]) - (vX_[301] * vX_[306] + vX_[348] * vX_[336]) - vX_[468] * vX_[283] - (vX_[303] * vX_[214] + vX_[151] * vX_[32]) - (vX_[333] * vX_[264] + vX_[298] * vX_[346]) - vX_[314] * vX_[158]) / vX_[295];
    vX_[468] = -1 * vX_[361];
    vX_[298] = -1 * vX_[24];
    vX_[262] = vX_[262] + jac[65];
    vX_[210] = vX_[26] * vX_[262] + vX_[28] * vX_[306];
    vX_[348] = vX_[26] * vX_[312] + vX_[28] * vX_[336] + vX_[43];
    vX_[306] = vX_[27] * vX_[262] + vX_[26] * vX_[306];
    vX_[151] = vX_[27] * vX_[312] + vX_[26] * vX_[336] + vX_[44];
    vX_[262] = -0.0825 * vX_[262] + -1 * vX_[214];
    vX_[312] = -0.0825 * vX_[312] + -1 * vX_[32];
    vX_[214] = vX_[39] * vX_[264] + vX_[38] * vX_[361];
    vX_[158] = vX_[26] * vX_[283] + vX_[39] * vX_[346] + vX_[38] * vX_[24] + vX_[401];
    vX_[264] = vX_[26] * vX_[264] + vX_[89] * vX_[361];
    vX_[361] = vX_[27] * vX_[283] + vX_[26] * vX_[346] + vX_[89] * vX_[24] + vX_[402];
    vX_[259] = (vX_[371] - vX_[244] * vX_[298] - vX_[227] * vX_[348] - vX_[249] * vX_[151] - vX_[224] * vX_[312] - vX_[255] * vX_[158] - vX_[267] * vX_[361]) / vX_[244];
    jac[66] = (vX_[351] - (vX_[244] * vX_[468] + vX_[235] * vX_[298]) - (vX_[227] * vX_[210] + vX_[343] * vX_[348]) - (vX_[249] * vX_[306] + vX_[191] * vX_[151]) - (vX_[224] * vX_[262] + vX_[253] * vX_[312]) - (vX_[255] * vX_[214] + vX_[347] * vX_[158]) - (vX_[267] * vX_[264] + vX_[252] * vX_[361]) - vX_[259] * vX_[235]) / vX_[244];
    vX_[468] = vX_[468] + jac[66];
    vX_[253] = vX_[298] + vX_[259];
    vX_[166] = vX_[101] * vX_[468] + vX_[448] * vX_[253] + vX_[95] * vX_[306] + vX_[132] * vX_[151] + vX_[166];
    vX_[473] = vX_[95] * vX_[468] + vX_[132] * vX_[253] + vX_[83] * vX_[306] + vX_[457] * vX_[151] + vX_[473];
    vX_[214] = -0.0825 * vX_[468] + vX_[214];
    vX_[467] = vX_[108] * vX_[468] + vX_[438] * vX_[253] + vX_[109] * vX_[210] + vX_[350] * vX_[348] + vX_[110] * vX_[306] + vX_[462] * vX_[151] + vX_[111] * vX_[262] + vX_[338] * vX_[312] + vX_[85] * vX_[264] + vX_[340] * vX_[361] + vX_[467];
    vX_[468] = vX_[84] * vX_[468] + vX_[413] * vX_[253] + vX_[86] * vX_[210] + vX_[98] * vX_[348] + vX_[87] * vX_[306] + vX_[441] * vX_[151] + vX_[88] * vX_[262] + vX_[185] * vX_[312] + vX_[83] * vX_[264] + vX_[457] * vX_[361] + vX_[328];
    jac[67] = (vX_[337] - vX_[81] * vX_[210] - 0.002164052 * vX_[166] - vX_[187] * vX_[473] - vX_[215] * vX_[214] - vX_[182] * vX_[467] - vX_[199] * vX_[468]) / vX_[81];
    vX_[166] = -1 * vX_[166];
    vX_[210] = vX_[210] + jac[67];
    vX_[330] = vX_[70] * vX_[210] + vX_[106] * vX_[473] + vX_[330];
    vX_[210] = vX_[49] * vX_[210] + vX_[70] * vX_[473] + vX_[327];
    vX_[467] = -1 * vX_[467];
    vX_[281] = vX_[49] * vX_[214] + vX_[70] * vX_[468] + vX_[281];
    jac[68] = (vX_[458] - vX_[68] * vX_[166] - vX_[75] * vX_[330] - vX_[67] * vX_[210] - vX_[94] * vX_[467] - vX_[163] * (vX_[70] * vX_[214] + vX_[106] * vX_[468] + vX_[345]) - vX_[171] * vX_[281]) / vX_[68];
    vX_[166] = vX_[166] + jac[68];
    jac[69] = (vX_[471] - 0.0049096523 * -1 * vX_[330] - -0.0005483591 * (vX_[50] * vX_[166] + vX_[66] * vX_[210] + vX_[313]) - -0.0016724827 * (vX_[53] * vX_[166] + vX_[50] * vX_[210] + vX_[285]) - 0.007735484874 * (vX_[50] * vX_[467] + vX_[148] * vX_[281] + vX_[127] * vX_[330] + vX_[193]) - 0.003127439544 * (vX_[53] * vX_[467] + vX_[50] * vX_[281] + vX_[54] * vX_[330] + vX_[291])) / 0.0049096523;
    vX_[166] = cos(x_in[5]);
    vX_[281] = - vX_[166];
    vX_[467] = -1 * sin(x_in[5]);
    vX_[210] = vX_[281] * vX_[96] + vX_[467] * vX_[82];
    vX_[330] = vX_[281] * vX_[93] + vX_[467] * vX_[99];
    vX_[471] = vX_[210] * vX_[116] - vX_[117] * vX_[330];
    vX_[291] = vX_[210] * vX_[117];
    vX_[193] = vX_[467] * vX_[96] + vX_[166] * vX_[82];
    vX_[285] = vX_[124] * vX_[193] + vX_[193] * vX_[124];
    vX_[313] = -1 * vX_[330];
    vX_[468] = vX_[50] * vX_[193];
    vX_[214] = vX_[128] * vX_[313] + vX_[468] * vX_[131];
    vX_[458] = vX_[467] * vX_[93] + vX_[166] * vX_[99];
    vX_[345] = vX_[50] * vX_[458] + vX_[54] * vX_[210];
    vX_[473] = -1 * vX_[210];
    vX_[327] = vX_[133] * vX_[345] + vX_[473] * vX_[138];
    vX_[337] = vX_[214] - vX_[327];
    vX_[264] = vX_[66] * vX_[193];
    vX_[262] = vX_[128] * vX_[264] + vX_[468] * vX_[142];
    vX_[306] = vX_[142] * vX_[473] + vX_[264] * vX_[133];
    vX_[328] = (- vX_[468]) * x_in[13];
    vX_[185] = vX_[264] * x_in[13];
    vX_[441] = (- vX_[345]) * x_in[13];
    vX_[98] = vX_[148] * vX_[458] + vX_[127] * vX_[210];
    vX_[413] = vX_[98] * x_in[13];
    vX_[457] = vX_[128] * vX_[473] + vX_[468] * vX_[133];
    vX_[313] = vX_[142] * vX_[313] + vX_[264] * vX_[131] - (vX_[133] * vX_[98] + vX_[473] * vX_[152]);
    vX_[340] = vX_[142] * vX_[264] + vX_[264] * vX_[142];
    vX_[338] = vX_[128] * vX_[468] + vX_[468] * vX_[128];
    vX_[327] = 0.007735484874 * (vX_[327] - vX_[214]) + -0.002420945 * vX_[262] + -0.0005483591 * vX_[457] - -0.003127439544 * vX_[313] - -0.0016724827 * vX_[306] - -0.0003951087 * (vX_[340] - vX_[338]);
    vX_[214] = 0 - vX_[327];
    vX_[473] = vX_[133] * vX_[473] + vX_[473] * vX_[133];
    vX_[462] = -0.735522 * vX_[337] + 0.007735484874 * vX_[262] + 0.045305948634 * vX_[306] + 0.000863976360112152 * vX_[328] + -0.0426708405168984 * vX_[185] + 0.72333422730663 * vX_[441] + -0.00492748973017121 * vX_[413] + (0.007735484874 * vX_[214]) / 0.0049096523 - -0.003127439544 * (vX_[473] + vX_[338]);
    vX_[350] = 0.735522 * vX_[313] + 0.045305948634 * vX_[457] + -0.003127439544 * vX_[262] + 0.0456552523787178 * vX_[328] + 0.00106536842387716 * vX_[185] + -0.00492748973017121 * vX_[441] + 0.733529826725046 * vX_[413] + (0.003127439544 * vX_[214]) / 0.0049096523 - 0.007735484874 * (vX_[473] + vX_[340]);
    vX_[438] = (- vX_[193]) * x_in[12];
    vX_[132] = vX_[210] * x_in[12];
    vX_[448] = (- vX_[458]) * x_in[12];
    vX_[351] = vX_[330] * x_in[12];
    vX_[252] = vX_[117] * vX_[458];
    vX_[347] = vX_[193] * vX_[116];
    vX_[191] = vX_[124] * vX_[210] + vX_[193] * vX_[107];
    vX_[235] = vX_[193] * vX_[117];
    vX_[98] = vX_[128] * vX_[98] + vX_[468] * vX_[152] - (vX_[142] * vX_[345] + vX_[264] * vX_[138]);
    vX_[313] = 0.045305948634 * vX_[313] + -0.0003951087 * vX_[306] + -0.0016724827 * (vX_[473] - vX_[338]) + 0.0128378177682551 * vX_[328] + -0.000581908304553986 * vX_[185] + 0.000863976360112152 * vX_[441] + 0.0456552523787178 * vX_[413] + (-0.0005483591 * vX_[214]) / 0.0049096523 - 0.007735484874 * vX_[98] - -0.0104103567 * vX_[457] - -0.0005483591 * vX_[262];
    vX_[473] = -0.003127439544 * vX_[98] + 0.045305948634 * vX_[337] + -0.0079894117 * vX_[306] + -0.0016724827 * vX_[262] + -0.000581908304553986 * vX_[328] + 0.0147502744829958 * vX_[185] + -0.0426708405168984 * vX_[441] + 0.00106536842387716 * vX_[413] + (-0.0016724827 * vX_[214]) / 0.0049096523 - -0.0003951087 * vX_[457] - -0.0005483591 * (vX_[473] - vX_[340]);
    vX_[98] = 0.735522 * vX_[98] + 0.007735484874 * vX_[457] + -0.003127439544 * vX_[306] + -0.007735484874 * vX_[328] + -0.003127439544 * vX_[185] - 0.045305948634 * (vX_[340] + vX_[338]);
    vX_[338] = vX_[107] * vX_[210] + vX_[210] * vX_[107];
    vX_[340] = 0.100241616695 * (vX_[252] - vX_[347]) + 0.0080873057 * vX_[191] + 9.3569106e-05 * vX_[235] + vX_[50] * vX_[313] + vX_[53] * vX_[473] + -0.088 * vX_[98] - -0.023526756935 * vX_[471] - -0.000103758764 * vX_[291] - 0.0015241109 * (vX_[338] - vX_[285]);
    vX_[457] = 0 - vX_[340];
    vX_[458] = vX_[124] * vX_[330] + vX_[193] * vX_[120] - (vX_[107] * vX_[458] + vX_[210] * vX_[137]);
    vX_[327] = -0.017527158935 * vX_[471] + 0.0015241109 * vX_[291] + -0.000103758764 * (0 - vX_[285]) + vX_[127] * vX_[462] + vX_[54] * vX_[350] + -1 * (vX_[327] + (0.0049096523 * vX_[214]) / 0.0049096523) + vX_[58] * vX_[438] + vX_[77] * vX_[132] + vX_[165] * vX_[448] + vX_[173] * vX_[351] + (vX_[75] * vX_[457]) / vX_[68] - 0.100241616695 * vX_[458] - 0.0093141007 * vX_[235] - 9.3569106e-05 * vX_[191];
    vX_[347] = vX_[347] - vX_[252];
    vX_[473] = -0.023526756935 * vX_[458] + -0.017527158935 * vX_[347] + 0.001226795 * vX_[291] + -0.000103758764 * vX_[191] + vX_[66] * vX_[313] + vX_[50] * vX_[473] + vX_[77] * vX_[438] + vX_[65] * vX_[132] + vX_[168] * vX_[448] + vX_[118] * vX_[351] + (vX_[67] * vX_[457]) / vX_[68] - 0.0015241109 * vX_[235] - 9.3569106e-05 * (0 - vX_[338]);
    vX_[313] = vX_[70] * vX_[327] + vX_[467] * vX_[2] + vX_[49] * vX_[473] + vX_[166] * vX_[362];
    vX_[252] = 0 - vX_[313];
    vX_[193] = vX_[166] * vX_[65] + vX_[467] * vX_[77];
    vX_[330] = vX_[166] * vX_[77] + vX_[467] * vX_[58];
    vX_[210] = vX_[78] * vX_[166] + vX_[193] * vX_[49] + vX_[79] * vX_[467] + vX_[330] * vX_[70];
    vX_[306] = vX_[467] * vX_[180] + vX_[281] * vX_[135];
    vX_[262] = (vX_[306] - vX_[183] * vX_[210]) / vX_[81];
    vX_[337] = - 0.002164052 * vX_[262];
    vX_[180] = vX_[166] * vX_[180] + vX_[467] * vX_[135];
    vX_[330] = vX_[79] * vX_[281] + vX_[330] * vX_[106] + vX_[78] * vX_[467] + vX_[193] * vX_[70];
    vX_[193] = 0 - vX_[180] - (vX_[187] * vX_[262] + vX_[330] * vX_[183]);
    vX_[79] = 0 - (vX_[182] * vX_[262] + vX_[306] * vX_[183]);
    vX_[78] = vX_[166] * vX_[168] + vX_[467] * vX_[165];
    vX_[264] = vX_[166] * vX_[118] + vX_[467] * vX_[173];
    vX_[345] = vX_[197] * vX_[281] + vX_[78] * vX_[106] + vX_[198] * vX_[467] + vX_[264] * vX_[70];
    vX_[262] = vX_[194] * vX_[281] + vX_[195] * vX_[467] + vX_[467] * vX_[179] + vX_[166] * vX_[196] - (vX_[199] * vX_[262] + vX_[345] * vX_[183]);
    vX_[458] = -1 * (1.666555 * vX_[458] + 0.100241616695 * vX_[235] + -0.023526756935 * vX_[291] + vX_[50] * vX_[462] + vX_[53] * vX_[350] + vX_[162] * vX_[438] + vX_[135] * vX_[132] + vX_[130] * vX_[448] + vX_[179] * vX_[351] + (vX_[94] * vX_[457]) / vX_[68] - -0.017527158935 * (vX_[338] + vX_[285])) + vX_[337] * vX_[393] + vX_[193] * vX_[394] + vX_[79] * vX_[396] + vX_[262] * vX_[397] + (vX_[182] * vX_[252] + vX_[306] * vX_[390] - vX_[398] * vX_[210]) / vX_[81];
    vX_[347] = -1.666555 * vX_[347] + 0.100241616695 * vX_[191] + -0.017527158935 * vX_[291] + -1 * vX_[98] + vX_[165] * vX_[438] + vX_[168] * vX_[132] + vX_[203] * vX_[448] + vX_[204] * vX_[351] + (vX_[163] * vX_[457]) / vX_[68] - -0.023526756935 * vX_[285];
    vX_[338] = 1.666555 * vX_[471] + -0.017527158935 * vX_[235] + -0.023526756935 * vX_[191] + vX_[148] * vX_[462] + vX_[50] * vX_[350] + vX_[173] * vX_[438] + vX_[118] * vX_[132] + vX_[204] * vX_[448] + vX_[190] * vX_[351] + (vX_[171] * vX_[457]) / vX_[68] - 0.100241616695 * vX_[338];
    vX_[235] = (vX_[345] - vX_[156] * vX_[210]) / vX_[81];
    vX_[180] = vX_[119] * vX_[281] + vX_[176] * vX_[467] + vX_[180] - 0.002164052 * vX_[235];
    vX_[191] = vX_[467] * vX_[168] + vX_[281] * vX_[165];
    vX_[350] = vX_[467] * vX_[118] + vX_[281] * vX_[173];
    vX_[462] = vX_[155] * vX_[281] + vX_[191] * vX_[106] + vX_[123] * vX_[467] + vX_[350] * vX_[70] - (vX_[187] * vX_[235] + vX_[330] * vX_[156]);
    vX_[126] = vX_[166] * vX_[126] + vX_[467] * vX_[204];
    vX_[149] = vX_[166] * vX_[204] + vX_[467] * vX_[149];
    vX_[471] = vX_[122] * vX_[166] + vX_[126] * vX_[49] + vX_[205] * vX_[467] + vX_[149] * vX_[70];
    vX_[235] = 0 - vX_[471] - (vX_[199] * vX_[235] + vX_[345] * vX_[156]);
    vX_[98] = vX_[106] * vX_[347] + vX_[281] * vX_[386] + vX_[70] * vX_[338] + vX_[467] * vX_[375] + vX_[180] * vX_[393] + vX_[462] * vX_[394] + vX_[262] * vX_[396] + vX_[235] * vX_[397] + (vX_[199] * vX_[252] + vX_[345] * vX_[390] - vX_[388] * vX_[210]) / vX_[81];
    vX_[285] = vX_[86] * vX_[235] - vX_[209] * vX_[262];
    vX_[291] = vX_[86] * vX_[262] - vX_[209] * vX_[79];
    vX_[195] = vX_[285] * vX_[86] - vX_[291] * vX_[209];
    vX_[194] = vX_[213] * vX_[262];
    vX_[264] = vX_[198] * vX_[166] + vX_[264] * vX_[49] + vX_[197] * vX_[467] + vX_[78] * vX_[70];
    vX_[78] = (vX_[264] - vX_[216] * vX_[210]) / vX_[81];
    vX_[149] = vX_[205] * vX_[281] + vX_[149] * vX_[106] + vX_[122] * vX_[467] + vX_[126] * vX_[70] - (vX_[199] * vX_[78] + vX_[345] * vX_[216]);
    vX_[126] = vX_[86] * vX_[149];
    vX_[205] = vX_[194] - vX_[126];
    vX_[196] = vX_[281] * vX_[179] + vX_[467] * vX_[196] - (vX_[182] * vX_[78] + vX_[306] * vX_[216]);
    vX_[122] = vX_[213] * vX_[79] - vX_[86] * vX_[196];
    vX_[198] = vX_[462] * vX_[86] + vX_[205] * vX_[86] - vX_[193] * vX_[209] - vX_[122] * vX_[209];
    vX_[197] = vX_[209] * vX_[149] - vX_[213] * vX_[235];
    vX_[468] = vX_[209] * vX_[196];
    vX_[194] = vX_[468] - vX_[194];
    vX_[343] = vX_[180] * vX_[86] + vX_[197] * vX_[86] - vX_[337] * vX_[209] - vX_[194] * vX_[209];
    vX_[275] = - vX_[343];
    vX_[136] = vX_[95] * vX_[198] + vX_[83] * vX_[275];
    vX_[399] = 0 - vX_[210] - (vX_[187] * (vX_[330] - vX_[229] * vX_[210]) / vX_[81] + vX_[330] * vX_[229]);
    vX_[350] = vX_[155] * vX_[467] + vX_[191] * vX_[70] + vX_[123] * vX_[166] + vX_[350] * vX_[49] - (vX_[187] * vX_[78] + vX_[330] * vX_[216]);
    vX_[471] = vX_[471] - (vX_[215] * vX_[78] + vX_[264] * vX_[216]);
    vX_[191] = vX_[213] * vX_[196] - vX_[86] * vX_[471];
    vX_[123] = 2. * vX_[193] * vX_[213] + vX_[399] + vX_[122] * vX_[213] - 2. * vX_[350] * vX_[86] - vX_[191] * vX_[86] - vX_[195];
    vX_[155] = ((- vX_[233]) * vX_[210]) / vX_[81];
    vX_[290] = -(vX_[187] * vX_[155] + vX_[330] * vX_[233]);
    vX_[78] = vX_[119] * vX_[467] + vX_[176] * vX_[166] - vX_[306] - 0.002164052 * vX_[78];
    vX_[176] = vX_[337] * vX_[213] + vX_[290] + vX_[350] * vX_[209] + vX_[191] * vX_[209] - vX_[462] * vX_[213] - vX_[78] * vX_[86] - vX_[205] * vX_[213];
    vX_[119] = vX_[95] * vX_[123] + vX_[101] * vX_[176];
    vX_[155] = - 0.002164052 * vX_[155];
    vX_[315] = vX_[209] * vX_[471] - vX_[213] * vX_[149];
    vX_[278] = 2. * vX_[78] * vX_[209] + vX_[155] + vX_[315] * vX_[209] - 2. * vX_[180] * vX_[213] - vX_[197] * vX_[213] - vX_[195];
    vX_[176] = vX_[95] * vX_[176] + vX_[101] * vX_[278];
    vX_[208] = vX_[119] * vX_[95] + vX_[176] * vX_[101];
    vX_[231] = vX_[195] + vX_[208];
    vX_[241] = (vX_[136] - vX_[245] * vX_[231]) / vX_[244];
    vX_[265] = vX_[195] - (vX_[227] * vX_[241] + vX_[136] * vX_[245]);
    vX_[176] = vX_[176] * vX_[95] + vX_[119] * vX_[83];
    vX_[241] = 2. * vX_[343] * vX_[95] + 2. * vX_[198] * vX_[83] + vX_[101] * vX_[198] + vX_[95] * vX_[275] - (vX_[249] * vX_[241] + vX_[176] * vX_[245]);
    vX_[468] = vX_[126] - vX_[468];
    vX_[315] = vX_[315] + vX_[78];
    vX_[126] = - vX_[315];
    vX_[191] = vX_[191] + vX_[350];
    vX_[275] = vX_[83] * vX_[126] + vX_[95] * vX_[191];
    vX_[343] = (vX_[275] - vX_[256] * vX_[231]) / vX_[244];
    vX_[198] = vX_[468] - (vX_[227] * vX_[343] + vX_[136] * vX_[256]);
    vX_[315] = vX_[291] + vX_[315];
    vX_[285] = vX_[285] + vX_[191];
    vX_[191] = vX_[95] * vX_[126] + vX_[101] * vX_[191];
    vX_[122] = vX_[122] + vX_[193];
    vX_[194] = vX_[337] + vX_[194] - vX_[468];
    vX_[126] = vX_[95] * vX_[122] + vX_[101] * vX_[194];
    vX_[205] = vX_[462] + vX_[205] - vX_[468];
    vX_[197] = vX_[197] + vX_[180];
    vX_[291] = vX_[95] * vX_[205] + vX_[101] * vX_[197];
    vX_[119] = vX_[126] * vX_[95] + vX_[291] * vX_[83];
    vX_[279] = (vX_[119] - vX_[268] * vX_[231]) / vX_[244];
    vX_[240] = vX_[315] * vX_[95] + vX_[285] * vX_[83] + vX_[191] - (vX_[227] * vX_[279] + vX_[136] * vX_[268]);
    vX_[155] = -1 * (vX_[340] + (vX_[68] * vX_[457]) / vX_[68]) + vX_[155] * vX_[393] + vX_[290] * vX_[394] + vX_[337] * vX_[396] + vX_[180] * vX_[397] + (0.002164052 * vX_[252] - vX_[408] * vX_[210]) / vX_[81];
    vX_[290] = vX_[106] * vX_[327] + vX_[281] * vX_[2] + vX_[70] * vX_[473] + vX_[467] * vX_[362] + vX_[290] * vX_[393] + vX_[399] * vX_[394] + vX_[193] * vX_[396] + vX_[462] * vX_[397] + (vX_[187] * vX_[252] + vX_[330] * vX_[390] - vX_[374] * vX_[210]) / vX_[81];
    vX_[78] = vX_[70] * vX_[347] + vX_[467] * vX_[386] + vX_[49] * vX_[338] + vX_[166] * vX_[375] + vX_[78] * vX_[393] + vX_[350] * vX_[394] + vX_[196] * vX_[396] + vX_[149] * vX_[397] + (vX_[215] * vX_[252] + vX_[264] * vX_[390] - vX_[21] * vX_[210]) / vX_[81];
    vX_[350] = vX_[101] * vX_[155] + vX_[95] * vX_[290] + -0.0825 * vX_[78] + vX_[108] * vX_[458] + vX_[84] * vX_[98];
    vX_[338] = 0 - vX_[350];
    vX_[313] = (vX_[81] * vX_[252] + vX_[210] * vX_[390] - vX_[391] * vX_[210]) / vX_[81] + vX_[313] + vX_[109] * vX_[458] + vX_[86] * vX_[98] + vX_[265] * vX_[43] + vX_[241] * vX_[44] + vX_[198] * vX_[401] + vX_[240] * vX_[402] + (vX_[227] * vX_[338] + vX_[136] * vX_[371] - vX_[45] * vX_[231]) / vX_[244];
    vX_[208] = vX_[278] + vX_[123] + vX_[195] - vX_[208] - (vX_[249] * (vX_[176] - vX_[271] * vX_[231]) / vX_[244] + vX_[176] * vX_[271]);
    vX_[191] = 0 - vX_[191] - (vX_[249] * vX_[343] + vX_[176] * vX_[256]);
    vX_[194] = vX_[83] * vX_[122] + vX_[95] * vX_[194];
    vX_[197] = vX_[83] * vX_[205] + vX_[95] * vX_[197];
    vX_[205] = vX_[194] * vX_[95] + vX_[197] * vX_[83] + vX_[468] - (vX_[249] * vX_[279] + vX_[176] * vX_[268]);
    vX_[290] = vX_[95] * vX_[155] + vX_[83] * vX_[290] + vX_[110] * vX_[458] + vX_[87] * vX_[98] + vX_[241] * vX_[43] + vX_[208] * vX_[44] + vX_[191] * vX_[401] + vX_[205] * vX_[402] + (vX_[249] * vX_[338] + vX_[176] * vX_[371] - vX_[403] * vX_[231]) / vX_[244];
    vX_[291] = vX_[126] * vX_[101] + vX_[291] * vX_[95] + vX_[468];
    vX_[126] = (vX_[291] - vX_[97] * vX_[231]) / vX_[244];
    vX_[285] = vX_[315] * vX_[101] + vX_[285] * vX_[95] - vX_[275] - (vX_[227] * vX_[126] + vX_[136] * vX_[97]);
    vX_[197] = vX_[194] * vX_[101] + vX_[197] * vX_[95] - (vX_[249] * vX_[126] + vX_[176] * vX_[97]);
    vX_[194] = - vX_[196];
    vX_[315] = vX_[95] * vX_[149] + vX_[83] * vX_[194] - (vX_[255] * vX_[126] + vX_[275] * vX_[97]);
    vX_[79] = vX_[79] - vX_[471];
    vX_[468] = vX_[95] * vX_[262] + vX_[101] * vX_[79];
    vX_[235] = vX_[235] - vX_[471];
    vX_[262] = vX_[95] * vX_[235] + vX_[101] * vX_[262];
    vX_[155] = vX_[468] * vX_[95] + vX_[262] * vX_[83] - (vX_[267] * vX_[126] + vX_[119] * vX_[97]);
    vX_[122] = vX_[111] * vX_[458] + vX_[88] * vX_[98] + vX_[285] * vX_[43] + vX_[197] * vX_[44] + vX_[315] * vX_[401] + vX_[155] * vX_[402] + (vX_[224] * vX_[338] + vX_[291] * vX_[371] - vX_[411] * vX_[231]) / vX_[244];
    vX_[278] = vX_[26] * vX_[313] + vX_[27] * vX_[290] + -0.0825 * vX_[122];
    vX_[123] = 0 - vX_[278];
    vX_[262] = vX_[262] * vX_[95] + vX_[468] * vX_[101];
    vX_[235] = vX_[79] + vX_[235] + vX_[471] - vX_[262] - (vX_[267] * vX_[279] + vX_[119] * vX_[268]);
    vX_[194] = 2. * vX_[196] * vX_[95] + 2. * vX_[149] * vX_[83] + vX_[101] * vX_[149] + vX_[95] * vX_[194] - (vX_[267] * vX_[343] + vX_[119] * vX_[256]);
    vX_[196] = vX_[274] * vX_[235] - vX_[277] * vX_[194];
    vX_[343] = vX_[471] - (vX_[255] * vX_[343] + vX_[275] * vX_[256]);
    vX_[149] = vX_[274] * vX_[194] - vX_[277] * vX_[343];
    vX_[79] = vX_[196] * vX_[274] - vX_[149] * vX_[277];
    vX_[262] = vX_[471] + vX_[262] - (vX_[224] * vX_[126] + vX_[291] * vX_[97]);
    vX_[126] = - vX_[274] * vX_[262];
    vX_[208] = vX_[208] - 2. * vX_[197] * vX_[274] - vX_[126] * vX_[274] - vX_[79];
    vX_[241] = vX_[241] + vX_[197] * vX_[277] + vX_[126] * vX_[277] - vX_[285] * vX_[274];
    vX_[471] = vX_[27] * vX_[208] + vX_[26] * vX_[241];
    vX_[279] = vX_[277] * vX_[262];
    vX_[265] = 2. * vX_[285] * vX_[277] + vX_[265] + vX_[279] * vX_[277] - vX_[79];
    vX_[241] = vX_[27] * vX_[241] + vX_[26] * vX_[265];
    vX_[468] = vX_[471] * vX_[27] + vX_[241] * vX_[26];
    vX_[195] = vX_[79] + vX_[468];
    vX_[279] = vX_[279] + vX_[285];
    vX_[285] = - vX_[279];
    vX_[126] = vX_[126] + vX_[197];
    vX_[197] = vX_[27] * vX_[285] + vX_[26] * vX_[126];
    vX_[285] = vX_[26] * vX_[285] + vX_[28] * vX_[126];
    vX_[347] = (vX_[285] - vX_[304] * vX_[195]) / vX_[295];
    vX_[241] = vX_[241] * vX_[28] + vX_[471] * vX_[26];
    vX_[471] = 0 - vX_[197] - (vX_[301] * vX_[347] + vX_[241] * vX_[304]);
    vX_[468] = vX_[265] + vX_[208] + vX_[79] - vX_[468] - (vX_[301] * (vX_[241] - vX_[308] * vX_[195]) / vX_[295] + vX_[241] * vX_[308]);
    vX_[265] = vX_[262] - (vX_[303] * vX_[347] + vX_[285] * vX_[304]);
    vX_[208] = vX_[307] * vX_[265];
    vX_[375] = 2. * vX_[471] * vX_[307] + vX_[468] + vX_[208] * vX_[307];
    vX_[386] = vX_[274] * vX_[155];
    vX_[399] = vX_[277] * vX_[315];
    vX_[462] = vX_[386] - vX_[399];
    vX_[386] = - vX_[386];
    vX_[193] = - vX_[274] * vX_[315];
    vX_[473] = vX_[205] * vX_[274] + vX_[386] * vX_[274] - vX_[191] * vX_[277] - vX_[193] * vX_[277];
    vX_[327] = vX_[277] * vX_[155];
    vX_[362] = vX_[240] * vX_[274] + vX_[327] * vX_[274] - vX_[198] * vX_[277] - vX_[399] * vX_[277];
    vX_[2] = - vX_[362];
    vX_[180] = vX_[28] * vX_[473] + vX_[26] * vX_[2];
    vX_[337] = vX_[462] - (vX_[320] * vX_[347] + vX_[180] * vX_[304]);
    vX_[340] = (vX_[180] - vX_[323] * vX_[195]) / vX_[295];
    vX_[2] = -1 * 2. * vX_[362] * vX_[28] + -1 * 2. * vX_[473] * vX_[26] + vX_[26] * vX_[473] + vX_[27] * vX_[2] - (vX_[301] * vX_[340] + vX_[241] * vX_[323]);
    vX_[193] = vX_[193] + vX_[191];
    vX_[399] = vX_[198] + vX_[399] - vX_[462];
    vX_[362] = vX_[26] * vX_[193] + vX_[28] * vX_[399];
    vX_[386] = vX_[205] + vX_[386] - vX_[462];
    vX_[327] = vX_[327] + vX_[240];
    vX_[473] = vX_[26] * vX_[386] + vX_[28] * vX_[327];
    vX_[399] = vX_[27] * vX_[193] + vX_[26] * vX_[399];
    vX_[327] = vX_[27] * vX_[386] + vX_[26] * vX_[327];
    vX_[386] = vX_[399] * vX_[28] + vX_[327] * vX_[26];
    vX_[193] = (vX_[386] - vX_[334] * vX_[195]) / vX_[295];
    vX_[261] = vX_[362] * vX_[28] + vX_[473] * vX_[26] + vX_[462] - (vX_[301] * vX_[193] + vX_[241] * vX_[334]);
    vX_[211] = - vX_[315];
    vX_[347] = -1 * 2. * vX_[315] * vX_[28] + -1 * 2. * vX_[155] * vX_[26] + vX_[26] * vX_[155] + vX_[27] * vX_[211] - (vX_[333] * vX_[347] + vX_[386] * vX_[304]);
    vX_[315] = vX_[307] * vX_[347];
    vX_[288] = vX_[337] * vX_[307] + vX_[2] - vX_[261] * vX_[307] - vX_[315] * vX_[307];
    vX_[13] = vX_[11] * vX_[375] + vX_[15] * vX_[288];
    vX_[340] = vX_[79] - (vX_[320] * vX_[340] + vX_[180] * vX_[323]);
    vX_[279] = -1 * (vX_[149] + vX_[279]);
    vX_[126] = -1 * (vX_[196] + vX_[126]);
    vX_[197] = vX_[279] * vX_[28] + vX_[126] * vX_[26] + vX_[197] - (vX_[320] * vX_[193] + vX_[180] * vX_[334]);
    vX_[196] = vX_[343] - vX_[262];
    vX_[149] = vX_[235] - vX_[262];
    vX_[79] = vX_[27] * vX_[194] + vX_[26] * vX_[196];
    vX_[206] = vX_[27] * vX_[149] + vX_[26] * vX_[194];
    vX_[149] = vX_[196] + vX_[149] + vX_[262] - vX_[79] * vX_[26] - vX_[206] * vX_[27] - (vX_[333] * vX_[193] + vX_[386] * vX_[334]);
    vX_[196] = - vX_[307] * vX_[149];
    vX_[193] = vX_[340] - 2. * vX_[197] * vX_[307] - vX_[196] * vX_[307];
    vX_[288] = vX_[11] * vX_[288] + vX_[15] * vX_[193];
    vX_[262] = vX_[13] * vX_[11] + vX_[288] * vX_[15];
    vX_[47] = ((- vX_[355]) * vX_[262]) / vX_[354];
    vX_[105] = - 0.0007689361 * vX_[47];
    vX_[288] = vX_[288] * vX_[20] + vX_[13] * vX_[15];
    vX_[47] = -(vX_[358] * vX_[47] + vX_[288] * vX_[355]);
    vX_[343] = vX_[78] + vX_[198] * vX_[43] + vX_[191] * vX_[44] + vX_[343] * vX_[401] + vX_[194] * vX_[402] + (vX_[255] * vX_[338] + vX_[275] * vX_[371] - vX_[425] * vX_[231]) / vX_[244];
    vX_[194] = vX_[85] * vX_[458] + vX_[83] * vX_[98] + vX_[240] * vX_[43] + vX_[205] * vX_[44] + vX_[194] * vX_[401] + vX_[235] * vX_[402] + (vX_[267] * vX_[338] + vX_[119] * vX_[371] - vX_[409] * vX_[231]) / vX_[244];
    vX_[340] = vX_[38] * vX_[343] + vX_[89] * vX_[194] + -1 * (vX_[350] + (vX_[244] * vX_[338] + vX_[231] * vX_[371] - vX_[406] * vX_[231]) / vX_[244]) + vX_[340] * vX_[202] + vX_[2] * vX_[102] + vX_[337] * vX_[90] + vX_[197] * vX_[426] + (vX_[320] * vX_[123] + vX_[180] * vX_[417] - vX_[427] * vX_[195]) / vX_[295];
    vX_[2] = vX_[28] * vX_[313] + vX_[26] * vX_[290] + vX_[2] * vX_[202] + vX_[468] * vX_[102] + vX_[471] * vX_[90] + vX_[261] * vX_[426] + (vX_[301] * vX_[123] + vX_[241] * vX_[417] - vX_[429] * vX_[195]) / vX_[295];
    vX_[265] = -1 * vX_[122] + vX_[337] * vX_[202] + vX_[471] * vX_[102] + vX_[265] * vX_[90] + vX_[347] * vX_[426] + (vX_[303] * vX_[123] + vX_[285] * vX_[417] - vX_[430] * vX_[195]) / vX_[295];
    vX_[194] = vX_[39] * vX_[343] + vX_[26] * vX_[194] + vX_[197] * vX_[202] + vX_[261] * vX_[102] + vX_[347] * vX_[90] + vX_[149] * vX_[426] + (vX_[333] * vX_[123] + vX_[386] * vX_[417] - vX_[415] * vX_[195]) / vX_[295];
    vX_[343] = 0 - vX_[15] * vX_[340] - vX_[11] * vX_[2] - vX_[34] * vX_[265] - vX_[16] * vX_[194];
    vX_[193] = vX_[193] + vX_[375] - vX_[262] - (vX_[358] * (vX_[288] - vX_[153] * vX_[262]) / vX_[354] + vX_[288] * vX_[153]);
    vX_[208] = vX_[208] + vX_[471];
    vX_[337] = vX_[337] - vX_[315];
    vX_[315] = vX_[315] + vX_[261];
    vX_[196] = vX_[196] + vX_[197];
    vX_[197] = (vX_[11] * vX_[208] + vX_[15] * vX_[337]) * vX_[20] + (vX_[11] * vX_[315] + vX_[15] * vX_[196]) * vX_[15];
    vX_[261] = (vX_[197] - vX_[434] * vX_[262]) / vX_[354];
    vX_[327] = vX_[399] * vX_[26] + vX_[327] * vX_[27] + vX_[462];
    vX_[399] = (vX_[327] - vX_[436] * vX_[195]) / vX_[295];
    vX_[206] = vX_[279] * vX_[26] + vX_[126] * vX_[27] - vX_[307] * (vX_[79] * vX_[28] + vX_[206] * vX_[26] - (vX_[333] * vX_[399] + vX_[386] * vX_[436])) - vX_[285] - (vX_[320] * vX_[399] + vX_[180] * vX_[436]);
    vX_[399] = vX_[362] * vX_[26] + vX_[473] * vX_[27] + vX_[307] * (vX_[28] * vX_[155] + vX_[26] * vX_[211] - (vX_[303] * vX_[399] + vX_[285] * vX_[436])) - (vX_[301] * vX_[399] + vX_[241] * vX_[436]);
    vX_[211] = - vX_[206];
    vX_[473] = vX_[11] * vX_[211] + vX_[15] * vX_[399];
    vX_[211] = vX_[20] * vX_[399] + vX_[15] * vX_[211];
    vX_[362] = (vX_[211] - vX_[446] * vX_[262]) / vX_[354];
    jac[77] = (0 - vX_[0] * (-1 * (vX_[278] + (vX_[295] * vX_[123] + vX_[195] * vX_[417] - vX_[418] * vX_[195]) / vX_[295]) + vX_[105] * vX_[420] + vX_[47] * vX_[14] + (0.0007689361 * vX_[343] - vX_[412] * vX_[262]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[340] + vX_[15] * vX_[2] + vX_[30] * vX_[265] + vX_[12] * vX_[194] + vX_[47] * vX_[420] + vX_[193] * vX_[14] + (vX_[358] * vX_[343] + vX_[288] * vX_[414] - vX_[91] * vX_[262]) / vX_[354]) - 9.81 * ((vX_[4] * ((vX_[15] * vX_[208] + vX_[20] * vX_[337]) * vX_[20] + (vX_[15] * vX_[315] + vX_[20] * vX_[196]) * vX_[15] - (vX_[358] * vX_[261] + vX_[288] * vX_[434])) + vX_[0] * (-1 * vX_[206] * vX_[20] + -1 * vX_[399] * vX_[15] + vX_[473] - 0.0007689361 * vX_[261])) * vX_[4] + (vX_[4] * (0 - vX_[473] - (vX_[358] * vX_[362] + vX_[288] * vX_[446])) + vX_[0] * (- 0.0007689361 * vX_[362])) * vX_[0]) - vX_[452] * ((vX_[4] * vX_[47] + vX_[0] * vX_[105]) * vX_[0] + (vX_[4] * vX_[193] + vX_[0] * vX_[47]) * vX_[4])) / vX_[451];
    vX_[362] = vX_[0] * jac[77];
    vX_[473] = vX_[4] * jac[77];
    jac[78] = (vX_[343] - 0.0007689361 * vX_[362] - (vX_[358] * vX_[473] + vX_[288] * vX_[113]) - vX_[211] * vX_[437] - vX_[197] * vX_[431] - vX_[445] * vX_[262]) / vX_[354];
    vX_[362] = -1 * vX_[362];
    vX_[211] = vX_[15] * jac[78] + vX_[20] * vX_[473];
    vX_[197] = vX_[11] * jac[78] + vX_[15] * vX_[473];
    vX_[343] = vX_[34] * jac[78] + vX_[30] * vX_[473];
    vX_[473] = vX_[16] * jac[78] + vX_[12] * vX_[473];
    jac[79] = (vX_[123] - (vX_[295] * vX_[362] + vX_[195] * vX_[310]) - (vX_[320] * vX_[211] + vX_[180] * vX_[24]) - (vX_[301] * vX_[197] + vX_[241] * vX_[336]) - vX_[327] * vX_[283] - (vX_[303] * vX_[343] + vX_[285] * vX_[32]) - (vX_[333] * vX_[473] + vX_[386] * vX_[346]) - vX_[314] * vX_[195]) / vX_[295];
    vX_[327] = -1 * vX_[211];
    vX_[362] = vX_[362] + jac[79];
    vX_[386] = vX_[26] * vX_[362] + vX_[28] * vX_[197];
    vX_[197] = vX_[27] * vX_[362] + vX_[26] * vX_[197];
    vX_[362] = -0.0825 * vX_[362] + -1 * vX_[343];
    vX_[343] = vX_[39] * vX_[473] + vX_[38] * vX_[211];
    vX_[473] = vX_[26] * vX_[473] + vX_[89] * vX_[211];
    jac[80] = (vX_[338] - (vX_[244] * vX_[327] + vX_[231] * vX_[298]) - (vX_[227] * vX_[386] + vX_[136] * vX_[348]) - (vX_[249] * vX_[197] + vX_[176] * vX_[151]) - (vX_[224] * vX_[362] + vX_[291] * vX_[312]) - (vX_[255] * vX_[343] + vX_[275] * vX_[158]) - (vX_[267] * vX_[473] + vX_[119] * vX_[361]) - vX_[259] * vX_[231]) / vX_[244];
    vX_[327] = vX_[327] + jac[80];
    vX_[291] = vX_[101] * vX_[327] + vX_[95] * vX_[197];
    vX_[338] = vX_[95] * vX_[327] + vX_[83] * vX_[197];
    vX_[119] = vX_[95] * vX_[253] + vX_[83] * vX_[151] + vX_[394];
    vX_[343] = -0.0825 * vX_[327] + vX_[343];
    vX_[275] = -0.0825 * vX_[253] + vX_[158];
    vX_[176] = vX_[108] * vX_[327] + vX_[109] * vX_[386] + vX_[110] * vX_[197] + vX_[111] * vX_[362] + vX_[85] * vX_[473];
    vX_[231] = vX_[108] * vX_[253] + vX_[109] * vX_[348] + vX_[110] * vX_[151] + vX_[111] * vX_[312] + vX_[85] * vX_[361] + vX_[396];
    vX_[327] = vX_[84] * vX_[327] + vX_[86] * vX_[386] + vX_[87] * vX_[197] + vX_[88] * vX_[362] + vX_[83] * vX_[473];
    vX_[473] = vX_[84] * vX_[253] + vX_[86] * vX_[348] + vX_[87] * vX_[151] + vX_[88] * vX_[312] + vX_[83] * vX_[361] + vX_[397];
    vX_[253] = vX_[101] * vX_[253] + vX_[95] * vX_[151] + vX_[393];
    vX_[362] = (vX_[390] - vX_[81] * vX_[348] - 0.002164052 * vX_[253] - vX_[187] * vX_[119] - vX_[215] * vX_[275] - vX_[182] * vX_[231] - vX_[199] * vX_[473]) / vX_[81];
    jac[81] = (vX_[252] - (vX_[81] * vX_[386] + vX_[210] * vX_[348]) - 0.002164052 * vX_[291] - (vX_[187] * vX_[338] + vX_[330] * vX_[119]) - (vX_[215] * vX_[343] + vX_[264] * vX_[275]) - (vX_[182] * vX_[176] + vX_[306] * vX_[231]) - (vX_[199] * vX_[327] + vX_[345] * vX_[473]) - vX_[362] * vX_[210]) / vX_[81];
    vX_[291] = -1 * vX_[291];
    vX_[386] = vX_[386] + jac[81];
    vX_[264] = vX_[348] + vX_[362];
    vX_[438] = vX_[70] * vX_[386] + vX_[467] * vX_[264] + vX_[106] * vX_[338] + vX_[281] * vX_[119] + vX_[438];
    vX_[386] = vX_[49] * vX_[386] + vX_[166] * vX_[264] + vX_[70] * vX_[338] + vX_[467] * vX_[119] + vX_[132];
    vX_[176] = -1 * vX_[176];
    vX_[351] = vX_[49] * vX_[343] + vX_[166] * vX_[275] + vX_[70] * vX_[327] + vX_[467] * vX_[473] + vX_[351];
    jac[82] = (vX_[457] - vX_[68] * vX_[291] - vX_[75] * vX_[438] - vX_[67] * vX_[386] - vX_[94] * vX_[176] - vX_[163] * (vX_[70] * vX_[343] + vX_[467] * vX_[275] + vX_[106] * vX_[327] + vX_[281] * vX_[473] + vX_[448]) - vX_[171] * vX_[351]) / vX_[68];
    vX_[291] = vX_[291] + jac[82];
    jac[83] = (vX_[214] - 0.0049096523 * -1 * vX_[438] - -0.0005483591 * (vX_[50] * vX_[291] + vX_[66] * vX_[386] + vX_[328]) - -0.0016724827 * (vX_[53] * vX_[291] + vX_[50] * vX_[386] + vX_[185]) - 0.007735484874 * (vX_[50] * vX_[176] + vX_[148] * vX_[351] + vX_[127] * vX_[438] + vX_[441]) - 0.003127439544 * (vX_[53] * vX_[176] + vX_[50] * vX_[351] + vX_[54] * vX_[438] + vX_[413])) / 0.0049096523;
    vX_[291] = -1 * sin(x_in[6]);
    vX_[351] = cos(x_in[6]);
    vX_[176] = vX_[291] * vX_[124] + vX_[351] * vX_[117];
    vX_[386] = vX_[176] * vX_[131];
    vX_[438] = -0.088 * vX_[351];
    vX_[214] = vX_[351] * vX_[116] + vX_[291] * vX_[137] + vX_[438] * vX_[107];
    vX_[413] = vX_[133] * vX_[214];
    vX_[441] = vX_[386] - vX_[413];
    vX_[185] = - vX_[351];
    vX_[328] = vX_[185] * vX_[124] + vX_[291] * vX_[117];
    vX_[327] = vX_[128] * vX_[328] + vX_[176] * vX_[142];
    vX_[343] = vX_[328] * vX_[133];
    vX_[457] = (- vX_[176]) * x_in[13];
    vX_[448] = vX_[328] * x_in[13];
    vX_[467] = (- vX_[214]) * x_in[13];
    vX_[281] = - vX_[351];
    vX_[166] = -0.088 * vX_[291];
    vX_[338] = vX_[291] * vX_[116] + vX_[281] * vX_[137] + vX_[166] * vX_[107];
    vX_[132] = vX_[338] * x_in[13];
    vX_[345] = vX_[176] * vX_[133];
    vX_[330] = vX_[328] * vX_[131] - vX_[133] * vX_[338];
    vX_[306] = vX_[142] * vX_[328] + vX_[328] * vX_[142];
    vX_[210] = vX_[128] * vX_[176] + vX_[176] * vX_[128];
    vX_[413] = 0.007735484874 * (vX_[413] - vX_[386]) + -0.002420945 * vX_[327] + -0.0005483591 * vX_[345] - -0.003127439544 * vX_[330] - -0.0016724827 * vX_[343] - -0.0003951087 * (vX_[306] - vX_[210]);
    vX_[386] = 0 - vX_[413];
    vX_[252] = -0.735522 * vX_[441] + 0.007735484874 * vX_[327] + 0.045305948634 * vX_[343] + 0.000863976360112152 * vX_[457] + -0.0426708405168984 * vX_[448] + 0.72333422730663 * vX_[467] + -0.00492748973017121 * vX_[132] + (0.007735484874 * vX_[386]) / 0.0049096523 - -0.003127439544 * vX_[210];
    vX_[197] = 0.735522 * vX_[330] + 0.045305948634 * vX_[345] + -0.003127439544 * vX_[327] + 0.0456552523787178 * vX_[457] + 0.00106536842387716 * vX_[448] + -0.00492748973017121 * vX_[467] + 0.733529826725046 * vX_[132] + (0.003127439544 * vX_[386]) / 0.0049096523 - 0.007735484874 * vX_[306];
    vX_[136] = -1 * vX_[438];
    vX_[211] = -0.088 * vX_[291];
    vX_[180] = 0.733529826725046 * vX_[136] - -0.00492748973017121 * vX_[211];
    vX_[241] = -0.00492748973017121 * vX_[136] - 0.72333422730663 * vX_[211];
    vX_[57] = vX_[56] * vX_[136] + vX_[180] * vX_[55] - (vX_[57] * vX_[211] + vX_[241] * vX_[51]);
    vX_[56] = 0.00106536842387716 * vX_[136] - -0.0426708405168984 * vX_[211];
    vX_[285] = 0.0456552523787178 * vX_[136] - 0.000863976360112152 * vX_[211];
    vX_[195] = - vX_[285];
    vX_[123] = vX_[66] * vX_[56] + vX_[185] * vX_[73] + vX_[50] * vX_[195] + vX_[291] * vX_[71];
    vX_[288] = - 0.735522 * vX_[136];
    vX_[55] = 0 - -0.006254879088 * vX_[136] - (vX_[60] * vX_[136] + vX_[288] * vX_[55]) - vX_[57];
    vX_[136] = -0.003127439544 * vX_[211] + vX_[60] * vX_[211] + vX_[288] * vX_[51] - -0.007735484874 * vX_[136];
    vX_[61] = vX_[53] * vX_[55] + vX_[351] * vX_[61] + vX_[50] * vX_[136] + vX_[291] * vX_[62];
    vX_[60] = 0.735522 * vX_[211];
    vX_[211] = -0.015470969748 * vX_[211] + vX_[52] * vX_[211] + vX_[60] * vX_[51] - vX_[57];
    vX_[136] = vX_[53] * vX_[136] + vX_[351] * vX_[62] + vX_[50] * vX_[211] + vX_[291] * vX_[59];
    vX_[62] = vX_[63] * vX_[351] + vX_[61] * vX_[53] + vX_[64] * vX_[291] + vX_[136] * vX_[50];
    vX_[59] = vX_[57] + vX_[62];
    vX_[52] = (vX_[123] - vX_[76] * vX_[59]) / vX_[68];
    vX_[51] = vX_[57] - (vX_[75] * vX_[52] + vX_[123] * vX_[76]);
    vX_[136] = vX_[64] * vX_[185] + vX_[136] * vX_[66] + vX_[63] * vX_[291] + vX_[61] * vX_[50];
    vX_[52] = vX_[72] * vX_[185] + -1 * 2. * vX_[285] * vX_[66] + vX_[74] * vX_[291] + -1 * 2. * vX_[56] * vX_[50] + vX_[50] * vX_[56] + vX_[291] * vX_[73] + vX_[53] * vX_[195] + vX_[351] * vX_[71] - (vX_[67] * vX_[52] + vX_[136] * vX_[76]);
    vX_[195] = - vX_[60];
    vX_[285] = vX_[50] * vX_[195] + vX_[291] * vX_[160] + vX_[66] * vX_[288] + vX_[185] * vX_[161];
    vX_[56] = (vX_[285] - vX_[164] * vX_[59]) / vX_[68];
    vX_[76] = -(vX_[75] * vX_[56] + vX_[123] * vX_[164]);
    vX_[60] = -1 * (vX_[241] + vX_[60]);
    vX_[180] = -1 * (vX_[180] + vX_[288]);
    vX_[195] = vX_[53] * vX_[195] + vX_[351] * vX_[160] + vX_[50] * vX_[288] + vX_[291] * vX_[161];
    vX_[288] = -0.0426708405168984 * vX_[351] + 0.000863976360112152 * vX_[291];
    vX_[161] = 0.00106536842387716 * vX_[351] + 0.0456552523787178 * vX_[291];
    vX_[160] = vX_[169] * vX_[185] + vX_[288] * vX_[66] + vX_[170] * vX_[291] + vX_[161] * vX_[50];
    vX_[241] = (vX_[160] - vX_[172] * vX_[59]) / vX_[68];
    vX_[71] = vX_[159] * vX_[185] + vX_[60] * vX_[66] + vX_[167] * vX_[291] + vX_[180] * vX_[50] + vX_[195] - (vX_[75] * vX_[241] + vX_[123] * vX_[172]);
    vX_[338] = vX_[128] * vX_[338] + vX_[176] * vX_[152] - (vX_[142] * vX_[214] + vX_[328] * vX_[138]);
    vX_[330] = 0.045305948634 * vX_[330] + -0.0003951087 * vX_[343] + -0.0016724827 * (0 - vX_[210]) + 0.0128378177682551 * vX_[457] + -0.000581908304553986 * vX_[448] + 0.000863976360112152 * vX_[467] + 0.0456552523787178 * vX_[132] + (-0.0005483591 * vX_[386]) / 0.0049096523 - 0.007735484874 * vX_[338] - -0.0104103567 * vX_[345] - -0.0005483591 * vX_[327];
    vX_[327] = -0.003127439544 * vX_[338] + 0.045305948634 * vX_[441] + -0.0079894117 * vX_[343] + -0.0016724827 * vX_[327] + -0.000581908304553986 * vX_[457] + 0.0147502744829958 * vX_[448] + -0.0426708405168984 * vX_[467] + 0.00106536842387716 * vX_[132] + (-0.0016724827 * vX_[386]) / 0.0049096523 - -0.0003951087 * vX_[345] - -0.0005483591 * (0 - vX_[306]);
    vX_[338] = 0.735522 * vX_[338] + 0.007735484874 * vX_[345] + -0.003127439544 * vX_[343] + -0.007735484874 * vX_[457] + -0.003127439544 * vX_[448] - 0.045305948634 * (vX_[306] + vX_[210]);
    vX_[210] = vX_[50] * vX_[330] + vX_[291] * vX_[373] + vX_[53] * vX_[327] + vX_[351] * vX_[376] + -0.088 * vX_[338];
    vX_[306] = 0 - vX_[210];
    vX_[413] = vX_[127] * vX_[252] + vX_[166] * vX_[377] + vX_[54] * vX_[197] + vX_[438] * vX_[378] + -1 * (vX_[413] + (0.0049096523 * vX_[386]) / 0.0049096523) + vX_[51] * vX_[380] + vX_[52] * vX_[381] + vX_[76] * vX_[383] + vX_[71] * vX_[384] + (vX_[75] * vX_[306] + vX_[123] * vX_[372] - vX_[368] * vX_[59]) / vX_[68];
    vX_[62] = vX_[211] + vX_[55] + vX_[57] - vX_[62] - (vX_[67] * (vX_[136] - vX_[69] * vX_[59]) / vX_[68] + vX_[136] * vX_[69]);
    vX_[195] = 0 - vX_[195] - (vX_[67] * vX_[56] + vX_[136] * vX_[164]);
    vX_[211] = -0.0426708405168984 * vX_[291] + 0.000863976360112152 * vX_[185];
    vX_[55] = 0.00106536842387716 * vX_[291] + 0.0456552523787178 * vX_[185];
    vX_[57] = vX_[175] * vX_[185] + vX_[211] * vX_[66] + vX_[125] * vX_[291] + vX_[55] * vX_[50] - (vX_[67] * vX_[241] + vX_[136] * vX_[172]);
    vX_[327] = vX_[66] * vX_[330] + vX_[185] * vX_[373] + vX_[50] * vX_[327] + vX_[291] * vX_[376] + vX_[52] * vX_[380] + vX_[62] * vX_[381] + vX_[195] * vX_[383] + vX_[57] * vX_[384] + (vX_[67] * vX_[306] + vX_[136] * vX_[372] - vX_[385] * vX_[59]) / vX_[68];
    vX_[330] = vX_[70] * vX_[413] + vX_[49] * vX_[327];
    vX_[385] = 0 - vX_[330];
    vX_[376] = vX_[49] * vX_[62] + vX_[70] * vX_[52];
    vX_[52] = vX_[49] * vX_[52] + vX_[70] * vX_[51];
    vX_[373] = vX_[376] * vX_[49] + vX_[52] * vX_[70];
    vX_[161] = vX_[170] * vX_[351] + vX_[161] * vX_[53] + vX_[169] * vX_[291] + vX_[288] * vX_[50];
    vX_[288] = (vX_[161] - vX_[141] * vX_[59]) / vX_[68];
    vX_[180] = vX_[159] * vX_[291] + vX_[60] * vX_[50] + vX_[167] * vX_[351] + vX_[180] * vX_[53] - vX_[285] - (vX_[75] * vX_[288] + vX_[123] * vX_[141]);
    vX_[55] = vX_[175] * vX_[291] + vX_[211] * vX_[50] + vX_[125] * vX_[351] + vX_[55] * vX_[53] - (vX_[67] * vX_[288] + vX_[136] * vX_[141]);
    vX_[211] = -(vX_[163] * vX_[288] + vX_[285] * vX_[141]);
    vX_[125] = -0.00492748973017121 * vX_[351] + -0.0121877726933703 * vX_[291];
    vX_[175] = -0.00199217327495371 * vX_[351] + -0.00492748973017121 * vX_[291];
    vX_[60] = vX_[177] * vX_[185] + vX_[125] * vX_[66] + vX_[178] * vX_[291] + vX_[175] * vX_[50] - (vX_[171] * vX_[288] + vX_[160] * vX_[141]);
    vX_[167] = - vX_[180];
    vX_[159] = vX_[70] * vX_[167] + vX_[106] * vX_[55];
    vX_[170] = (vX_[159] - vX_[183] * vX_[373]) / vX_[81];
    vX_[169] = - 0.002164052 * vX_[170];
    vX_[167] = vX_[49] * vX_[167] + vX_[70] * vX_[55];
    vX_[52] = vX_[52] * vX_[106] + vX_[376] * vX_[70];
    vX_[376] = 0 - vX_[167] - (vX_[187] * vX_[170] + vX_[52] * vX_[183]);
    vX_[175] = vX_[178] * vX_[351] + vX_[175] * vX_[53] + vX_[177] * vX_[291] + vX_[125] * vX_[50];
    vX_[288] = vX_[175] - (vX_[94] * vX_[288] + vX_[161] * vX_[141]);
    vX_[141] = vX_[288] - (vX_[182] * vX_[170] + vX_[159] * vX_[183]);
    vX_[125] = - vX_[211];
    vX_[178] = vX_[49] * vX_[195] + vX_[70] * vX_[76];
    vX_[177] = vX_[49] * vX_[57] + vX_[70] * vX_[71];
    vX_[69] = vX_[178] * vX_[106] + vX_[177] * vX_[70];
    vX_[170] = -1 * 2. * vX_[211] * vX_[106] + -1 * 2. * vX_[60] * vX_[70] + vX_[70] * vX_[60] + vX_[49] * vX_[125] - (vX_[199] * vX_[170] + vX_[69] * vX_[183]);
    vX_[211] = -1 * (vX_[50] * vX_[252] + vX_[291] * vX_[377] + vX_[53] * vX_[197] + vX_[351] * vX_[378] + vX_[180] * vX_[380] + vX_[55] * vX_[381] + vX_[211] * vX_[383] + vX_[60] * vX_[384] + (vX_[94] * vX_[306] + vX_[161] * vX_[372] - vX_[22] * vX_[59]) / vX_[68]) + vX_[169] * vX_[393] + vX_[376] * vX_[394] + vX_[141] * vX_[396] + vX_[170] * vX_[397] + (vX_[182] * vX_[385] + vX_[159] * vX_[390] - vX_[398] * vX_[373]) / vX_[81];
    vX_[398] = -(vX_[163] * vX_[56] + vX_[285] * vX_[164]);
    vX_[56] = -(vX_[171] * vX_[56] + vX_[160] * vX_[164]);
    vX_[338] = -1 * vX_[338] + vX_[76] * vX_[380] + vX_[195] * vX_[381] + vX_[398] * vX_[383] + vX_[56] * vX_[384] + (vX_[163] * vX_[306] + vX_[285] * vX_[372] - vX_[400] * vX_[59]) / vX_[68];
    vX_[175] = 0 - vX_[175] - (vX_[171] * vX_[241] + vX_[160] * vX_[172]);
    vX_[197] = vX_[148] * vX_[252] + vX_[281] * vX_[377] + vX_[50] * vX_[197] + vX_[291] * vX_[378] + vX_[71] * vX_[380] + vX_[57] * vX_[381] + vX_[56] * vX_[383] + vX_[175] * vX_[384] + (vX_[171] * vX_[306] + vX_[160] * vX_[372] - vX_[389] * vX_[59]) / vX_[68];
    vX_[180] = -1 * vX_[180];
    vX_[55] = -1 * vX_[55];
    vX_[252] = (vX_[69] - vX_[156] * vX_[373]) / vX_[81];
    vX_[167] = vX_[180] * vX_[106] + vX_[55] * vX_[70] + vX_[167] - 0.002164052 * vX_[252];
    vX_[195] = vX_[70] * vX_[195] + vX_[106] * vX_[76];
    vX_[57] = vX_[70] * vX_[57] + vX_[106] * vX_[71];
    vX_[71] = vX_[195] * vX_[106] + vX_[57] * vX_[70] - (vX_[187] * vX_[252] + vX_[52] * vX_[156]);
    vX_[398] = vX_[398] - vX_[288];
    vX_[175] = vX_[175] - vX_[288];
    vX_[76] = vX_[49] * vX_[175] + vX_[70] * vX_[56];
    vX_[56] = vX_[49] * vX_[56] + vX_[70] * vX_[398];
    vX_[389] = vX_[76] * vX_[49] + vX_[56] * vX_[70];
    vX_[175] = vX_[398] + vX_[175] + vX_[288] - vX_[389] - (vX_[199] * vX_[252] + vX_[69] * vX_[156]);
    vX_[388] = vX_[106] * vX_[338] + vX_[70] * vX_[197] + vX_[167] * vX_[393] + vX_[71] * vX_[394] + vX_[170] * vX_[396] + vX_[175] * vX_[397] + (vX_[199] * vX_[385] + vX_[69] * vX_[390] - vX_[388] * vX_[373]) / vX_[81];
    vX_[398] = vX_[86] * vX_[175] - vX_[209] * vX_[170];
    vX_[252] = vX_[86] * vX_[170] - vX_[209] * vX_[141];
    vX_[156] = vX_[398] * vX_[86] - vX_[252] * vX_[209];
    vX_[378] = vX_[213] * vX_[170];
    vX_[177] = vX_[177] * vX_[49] + vX_[178] * vX_[70];
    vX_[178] = (vX_[177] - vX_[216] * vX_[373]) / vX_[81];
    vX_[56] = vX_[56] * vX_[106] + vX_[76] * vX_[70] - (vX_[199] * vX_[178] + vX_[69] * vX_[216]);
    vX_[76] = vX_[86] * vX_[56];
    vX_[377] = vX_[378] - vX_[76];
    vX_[125] = vX_[106] * vX_[60] + vX_[70] * vX_[125] - (vX_[182] * vX_[178] + vX_[159] * vX_[216]);
    vX_[60] = vX_[213] * vX_[141] - vX_[86] * vX_[125];
    vX_[241] = vX_[71] * vX_[86] + vX_[377] * vX_[86] - vX_[376] * vX_[209] - vX_[60] * vX_[209];
    vX_[172] = vX_[209] * vX_[56] - vX_[213] * vX_[175];
    vX_[400] = vX_[209] * vX_[125];
    vX_[378] = vX_[400] - vX_[378];
    vX_[164] = vX_[167] * vX_[86] + vX_[172] * vX_[86] - vX_[169] * vX_[209] - vX_[378] * vX_[209];
    vX_[22] = - vX_[164];
    vX_[183] = vX_[95] * vX_[241] + vX_[83] * vX_[22];
    vX_[62] = vX_[51] + vX_[62] - vX_[373] - (vX_[187] * (vX_[52] - vX_[229] * vX_[373]) / vX_[81] + vX_[52] * vX_[229]);
    vX_[57] = vX_[195] * vX_[70] + vX_[57] * vX_[49] - (vX_[187] * vX_[178] + vX_[52] * vX_[216]);
    vX_[389] = vX_[288] + vX_[389] - (vX_[215] * vX_[178] + vX_[177] * vX_[216]);
    vX_[288] = vX_[213] * vX_[125] - vX_[86] * vX_[389];
    vX_[216] = 2. * vX_[376] * vX_[213] + vX_[62] + vX_[60] * vX_[213] - 2. * vX_[57] * vX_[86] - vX_[288] * vX_[86] - vX_[156];
    vX_[195] = ((- vX_[233]) * vX_[373]) / vX_[81];
    vX_[233] = -(vX_[187] * vX_[195] + vX_[52] * vX_[233]);
    vX_[178] = vX_[180] * vX_[70] + vX_[55] * vX_[49] - vX_[159] - 0.002164052 * vX_[178];
    vX_[55] = vX_[169] * vX_[213] + vX_[233] + vX_[57] * vX_[209] + vX_[288] * vX_[209] - vX_[71] * vX_[213] - vX_[178] * vX_[86] - vX_[377] * vX_[213];
    vX_[180] = vX_[95] * vX_[216] + vX_[101] * vX_[55];
    vX_[195] = - 0.002164052 * vX_[195];
    vX_[51] = vX_[209] * vX_[389] - vX_[213] * vX_[56];
    vX_[213] = 2. * vX_[178] * vX_[209] + vX_[195] + vX_[51] * vX_[209] - 2. * vX_[167] * vX_[213] - vX_[172] * vX_[213] - vX_[156];
    vX_[55] = vX_[95] * vX_[55] + vX_[101] * vX_[213];
    vX_[209] = vX_[180] * vX_[95] + vX_[55] * vX_[101];
    vX_[229] = vX_[156] + vX_[209];
    vX_[368] = (vX_[183] - vX_[245] * vX_[229]) / vX_[244];
    vX_[345] = vX_[156] - (vX_[227] * vX_[368] + vX_[183] * vX_[245]);
    vX_[55] = vX_[55] * vX_[95] + vX_[180] * vX_[83];
    vX_[368] = 2. * vX_[164] * vX_[95] + 2. * vX_[241] * vX_[83] + vX_[101] * vX_[241] + vX_[95] * vX_[22] - (vX_[249] * vX_[368] + vX_[55] * vX_[245]);
    vX_[400] = vX_[76] - vX_[400];
    vX_[51] = vX_[51] + vX_[178];
    vX_[76] = - vX_[51];
    vX_[288] = vX_[288] + vX_[57];
    vX_[22] = vX_[83] * vX_[76] + vX_[95] * vX_[288];
    vX_[164] = (vX_[22] - vX_[256] * vX_[229]) / vX_[244];
    vX_[241] = vX_[400] - (vX_[227] * vX_[164] + vX_[183] * vX_[256]);
    vX_[51] = vX_[252] + vX_[51];
    vX_[398] = vX_[398] + vX_[288];
    vX_[288] = vX_[95] * vX_[76] + vX_[101] * vX_[288];
    vX_[60] = vX_[60] + vX_[376];
    vX_[378] = vX_[169] + vX_[378] - vX_[400];
    vX_[76] = vX_[95] * vX_[60] + vX_[101] * vX_[378];
    vX_[377] = vX_[71] + vX_[377] - vX_[400];
    vX_[172] = vX_[172] + vX_[167];
    vX_[252] = vX_[95] * vX_[377] + vX_[101] * vX_[172];
    vX_[245] = vX_[76] * vX_[95] + vX_[252] * vX_[83];
    vX_[180] = (vX_[245] - vX_[268] * vX_[229]) / vX_[244];
    vX_[343] = vX_[51] * vX_[95] + vX_[398] * vX_[83] + vX_[288] - (vX_[227] * vX_[180] + vX_[183] * vX_[268]);
    vX_[195] = -1 * (vX_[210] + (vX_[68] * vX_[306] + vX_[59] * vX_[372] - vX_[407] * vX_[59]) / vX_[68]) + vX_[195] * vX_[393] + vX_[233] * vX_[394] + vX_[169] * vX_[396] + vX_[167] * vX_[397] + (0.002164052 * vX_[385] - vX_[408] * vX_[373]) / vX_[81];
    vX_[233] = vX_[106] * vX_[413] + vX_[70] * vX_[327] + vX_[233] * vX_[393] + vX_[62] * vX_[394] + vX_[376] * vX_[396] + vX_[71] * vX_[397] + (vX_[187] * vX_[385] + vX_[52] * vX_[390] - vX_[374] * vX_[373]) / vX_[81];
    vX_[178] = vX_[70] * vX_[338] + vX_[49] * vX_[197] + vX_[178] * vX_[393] + vX_[57] * vX_[394] + vX_[125] * vX_[396] + vX_[56] * vX_[397] + (vX_[215] * vX_[385] + vX_[177] * vX_[390] - vX_[21] * vX_[373]) / vX_[81];
    vX_[57] = vX_[101] * vX_[195] + vX_[95] * vX_[233] + -0.0825 * vX_[178] + vX_[108] * vX_[211] + vX_[84] * vX_[388];
    vX_[197] = 0 - vX_[57];
    vX_[330] = (vX_[81] * vX_[385] + vX_[373] * vX_[390] - vX_[391] * vX_[373]) / vX_[81] + vX_[330] + vX_[109] * vX_[211] + vX_[86] * vX_[388] + vX_[345] * vX_[43] + vX_[368] * vX_[44] + vX_[241] * vX_[401] + vX_[343] * vX_[402] + (vX_[227] * vX_[197] + vX_[183] * vX_[371] - vX_[45] * vX_[229]) / vX_[244];
    vX_[209] = vX_[213] + vX_[216] + vX_[156] - vX_[209] - (vX_[249] * (vX_[55] - vX_[271] * vX_[229]) / vX_[244] + vX_[55] * vX_[271]);
    vX_[288] = 0 - vX_[288] - (vX_[249] * vX_[164] + vX_[55] * vX_[256]);
    vX_[378] = vX_[83] * vX_[60] + vX_[95] * vX_[378];
    vX_[172] = vX_[83] * vX_[377] + vX_[95] * vX_[172];
    vX_[377] = vX_[378] * vX_[95] + vX_[172] * vX_[83] + vX_[400] - (vX_[249] * vX_[180] + vX_[55] * vX_[268]);
    vX_[233] = vX_[95] * vX_[195] + vX_[83] * vX_[233] + vX_[110] * vX_[211] + vX_[87] * vX_[388] + vX_[368] * vX_[43] + vX_[209] * vX_[44] + vX_[288] * vX_[401] + vX_[377] * vX_[402] + (vX_[249] * vX_[197] + vX_[55] * vX_[371] - vX_[403] * vX_[229]) / vX_[244];
    vX_[252] = vX_[76] * vX_[101] + vX_[252] * vX_[95] + vX_[400];
    vX_[76] = (vX_[252] - vX_[97] * vX_[229]) / vX_[244];
    vX_[398] = vX_[51] * vX_[101] + vX_[398] * vX_[95] - vX_[22] - (vX_[227] * vX_[76] + vX_[183] * vX_[97]);
    vX_[172] = vX_[378] * vX_[101] + vX_[172] * vX_[95] - (vX_[249] * vX_[76] + vX_[55] * vX_[97]);
    vX_[378] = - vX_[125];
    vX_[51] = vX_[95] * vX_[56] + vX_[83] * vX_[378] - (vX_[255] * vX_[76] + vX_[22] * vX_[97]);
    vX_[141] = vX_[141] - vX_[389];
    vX_[400] = vX_[95] * vX_[170] + vX_[101] * vX_[141];
    vX_[175] = vX_[175] - vX_[389];
    vX_[170] = vX_[95] * vX_[175] + vX_[101] * vX_[170];
    vX_[195] = vX_[400] * vX_[95] + vX_[170] * vX_[83] - (vX_[267] * vX_[76] + vX_[245] * vX_[97]);
    vX_[411] = vX_[111] * vX_[211] + vX_[88] * vX_[388] + vX_[398] * vX_[43] + vX_[172] * vX_[44] + vX_[51] * vX_[401] + vX_[195] * vX_[402] + (vX_[224] * vX_[197] + vX_[252] * vX_[371] - vX_[411] * vX_[229]) / vX_[244];
    vX_[403] = vX_[26] * vX_[330] + vX_[27] * vX_[233] + -0.0825 * vX_[411];
    vX_[60] = 0 - vX_[403];
    vX_[170] = vX_[170] * vX_[95] + vX_[400] * vX_[101];
    vX_[175] = vX_[141] + vX_[175] + vX_[389] - vX_[170] - (vX_[267] * vX_[180] + vX_[245] * vX_[268]);
    vX_[378] = 2. * vX_[125] * vX_[95] + 2. * vX_[56] * vX_[83] + vX_[101] * vX_[56] + vX_[95] * vX_[378] - (vX_[267] * vX_[164] + vX_[245] * vX_[256]);
    vX_[125] = vX_[274] * vX_[175] - vX_[277] * vX_[378];
    vX_[164] = vX_[389] - (vX_[255] * vX_[164] + vX_[22] * vX_[256]);
    vX_[256] = vX_[274] * vX_[378] - vX_[277] * vX_[164];
    vX_[56] = vX_[125] * vX_[274] - vX_[256] * vX_[277];
    vX_[170] = vX_[389] + vX_[170] - (vX_[224] * vX_[76] + vX_[252] * vX_[97]);
    vX_[76] = - vX_[274] * vX_[170];
    vX_[209] = vX_[209] - 2. * vX_[172] * vX_[274] - vX_[76] * vX_[274] - vX_[56];
    vX_[368] = vX_[368] + vX_[172] * vX_[277] + vX_[76] * vX_[277] - vX_[398] * vX_[274];
    vX_[389] = vX_[27] * vX_[209] + vX_[26] * vX_[368];
    vX_[97] = vX_[277] * vX_[170];
    vX_[345] = 2. * vX_[398] * vX_[277] + vX_[345] + vX_[97] * vX_[277] - vX_[56];
    vX_[368] = vX_[27] * vX_[368] + vX_[26] * vX_[345];
    vX_[141] = vX_[389] * vX_[27] + vX_[368] * vX_[26];
    vX_[180] = vX_[56] + vX_[141];
    vX_[97] = vX_[97] + vX_[398];
    vX_[398] = - vX_[97];
    vX_[76] = vX_[76] + vX_[172];
    vX_[172] = vX_[27] * vX_[398] + vX_[26] * vX_[76];
    vX_[398] = vX_[26] * vX_[398] + vX_[28] * vX_[76];
    vX_[268] = (vX_[398] - vX_[304] * vX_[180]) / vX_[295];
    vX_[368] = vX_[368] * vX_[28] + vX_[389] * vX_[26];
    vX_[389] = 0 - vX_[172] - (vX_[301] * vX_[268] + vX_[368] * vX_[304]);
    vX_[141] = vX_[345] + vX_[209] + vX_[56] - vX_[141] - (vX_[301] * (vX_[368] - vX_[308] * vX_[180]) / vX_[295] + vX_[368] * vX_[308]);
    vX_[345] = vX_[170] - (vX_[303] * vX_[268] + vX_[398] * vX_[304]);
    vX_[209] = vX_[307] * vX_[345];
    vX_[308] = 2. * vX_[389] * vX_[307] + vX_[141] + vX_[209] * vX_[307];
    vX_[400] = vX_[274] * vX_[195];
    vX_[213] = vX_[277] * vX_[51];
    vX_[216] = vX_[400] - vX_[213];
    vX_[400] = - vX_[400];
    vX_[156] = - vX_[274] * vX_[51];
    vX_[271] = vX_[377] * vX_[274] + vX_[400] * vX_[274] - vX_[288] * vX_[277] - vX_[156] * vX_[277];
    vX_[45] = vX_[277] * vX_[195];
    vX_[277] = vX_[343] * vX_[274] + vX_[45] * vX_[274] - vX_[241] * vX_[277] - vX_[213] * vX_[277];
    vX_[274] = - vX_[277];
    vX_[391] = vX_[28] * vX_[271] + vX_[26] * vX_[274];
    vX_[390] = vX_[216] - (vX_[320] * vX_[268] + vX_[391] * vX_[304]);
    vX_[338] = (vX_[391] - vX_[323] * vX_[180]) / vX_[295];
    vX_[274] = -1 * 2. * vX_[277] * vX_[28] + -1 * 2. * vX_[271] * vX_[26] + vX_[26] * vX_[271] + vX_[27] * vX_[274] - (vX_[301] * vX_[338] + vX_[368] * vX_[323]);
    vX_[156] = vX_[156] + vX_[288];
    vX_[213] = vX_[241] + vX_[213] - vX_[216];
    vX_[277] = vX_[26] * vX_[156] + vX_[28] * vX_[213];
    vX_[400] = vX_[377] + vX_[400] - vX_[216];
    vX_[45] = vX_[45] + vX_[343];
    vX_[271] = vX_[26] * vX_[400] + vX_[28] * vX_[45];
    vX_[213] = vX_[27] * vX_[156] + vX_[26] * vX_[213];
    vX_[45] = vX_[27] * vX_[400] + vX_[26] * vX_[45];
    vX_[400] = vX_[213] * vX_[28] + vX_[45] * vX_[26];
    vX_[156] = (vX_[400] - vX_[334] * vX_[180]) / vX_[295];
    vX_[21] = vX_[277] * vX_[28] + vX_[271] * vX_[26] + vX_[216] - (vX_[301] * vX_[156] + vX_[368] * vX_[334]);
    vX_[397] = - vX_[51];
    vX_[268] = -1 * 2. * vX_[51] * vX_[28] + -1 * 2. * vX_[195] * vX_[26] + vX_[26] * vX_[195] + vX_[27] * vX_[397] - (vX_[333] * vX_[268] + vX_[400] * vX_[304]);
    vX_[51] = vX_[307] * vX_[268];
    vX_[304] = vX_[390] * vX_[307] + vX_[274] - vX_[21] * vX_[307] - vX_[51] * vX_[307];
    vX_[396] = vX_[11] * vX_[308] + vX_[15] * vX_[304];
    vX_[338] = vX_[56] - (vX_[320] * vX_[338] + vX_[391] * vX_[323]);
    vX_[97] = -1 * (vX_[256] + vX_[97]);
    vX_[76] = -1 * (vX_[125] + vX_[76]);
    vX_[172] = vX_[97] * vX_[28] + vX_[76] * vX_[26] + vX_[172] - (vX_[320] * vX_[156] + vX_[391] * vX_[334]);
    vX_[125] = vX_[164] - vX_[170];
    vX_[256] = vX_[175] - vX_[170];
    vX_[56] = vX_[27] * vX_[378] + vX_[26] * vX_[125];
    vX_[323] = vX_[27] * vX_[256] + vX_[26] * vX_[378];
    vX_[256] = vX_[125] + vX_[256] + vX_[170] - vX_[56] * vX_[26] - vX_[323] * vX_[27] - (vX_[333] * vX_[156] + vX_[400] * vX_[334]);
    vX_[125] = - vX_[307] * vX_[256];
    vX_[156] = vX_[338] - 2. * vX_[172] * vX_[307] - vX_[125] * vX_[307];
    vX_[304] = vX_[11] * vX_[304] + vX_[15] * vX_[156];
    vX_[170] = vX_[396] * vX_[11] + vX_[304] * vX_[15];
    vX_[334] = ((- vX_[355]) * vX_[170]) / vX_[354];
    vX_[394] = - 0.0007689361 * vX_[334];
    vX_[304] = vX_[304] * vX_[20] + vX_[396] * vX_[15];
    vX_[334] = -(vX_[358] * vX_[334] + vX_[304] * vX_[355]);
    vX_[164] = vX_[178] + vX_[241] * vX_[43] + vX_[288] * vX_[44] + vX_[164] * vX_[401] + vX_[378] * vX_[402] + (vX_[255] * vX_[197] + vX_[22] * vX_[371] - vX_[425] * vX_[229]) / vX_[244];
    vX_[378] = vX_[85] * vX_[211] + vX_[83] * vX_[388] + vX_[343] * vX_[43] + vX_[377] * vX_[44] + vX_[378] * vX_[401] + vX_[175] * vX_[402] + (vX_[267] * vX_[197] + vX_[245] * vX_[371] - vX_[409] * vX_[229]) / vX_[244];
    vX_[338] = vX_[38] * vX_[164] + vX_[89] * vX_[378] + -1 * (vX_[57] + (vX_[244] * vX_[197] + vX_[229] * vX_[371] - vX_[406] * vX_[229]) / vX_[244]) + vX_[338] * vX_[202] + vX_[274] * vX_[102] + vX_[390] * vX_[90] + vX_[172] * vX_[426] + (vX_[320] * vX_[60] + vX_[391] * vX_[417] - vX_[427] * vX_[180]) / vX_[295];
    vX_[274] = vX_[28] * vX_[330] + vX_[26] * vX_[233] + vX_[274] * vX_[202] + vX_[141] * vX_[102] + vX_[389] * vX_[90] + vX_[21] * vX_[426] + (vX_[301] * vX_[60] + vX_[368] * vX_[417] - vX_[429] * vX_[180]) / vX_[295];
    vX_[345] = -1 * vX_[411] + vX_[390] * vX_[202] + vX_[389] * vX_[102] + vX_[345] * vX_[90] + vX_[268] * vX_[426] + (vX_[303] * vX_[60] + vX_[398] * vX_[417] - vX_[430] * vX_[180]) / vX_[295];
    vX_[378] = vX_[39] * vX_[164] + vX_[26] * vX_[378] + vX_[172] * vX_[202] + vX_[21] * vX_[102] + vX_[268] * vX_[90] + vX_[256] * vX_[426] + (vX_[333] * vX_[60] + vX_[400] * vX_[417] - vX_[415] * vX_[180]) / vX_[295];
    vX_[164] = 0 - vX_[15] * vX_[338] - vX_[11] * vX_[274] - vX_[34] * vX_[345] - vX_[16] * vX_[378];
    vX_[156] = vX_[156] + vX_[308] - vX_[170] - (vX_[358] * (vX_[304] - vX_[153] * vX_[170]) / vX_[354] + vX_[304] * vX_[153]);
    vX_[209] = vX_[209] + vX_[389];
    vX_[390] = vX_[390] - vX_[51];
    vX_[51] = vX_[51] + vX_[21];
    vX_[125] = vX_[125] + vX_[172];
    vX_[172] = (vX_[11] * vX_[209] + vX_[15] * vX_[390]) * vX_[20] + (vX_[11] * vX_[51] + vX_[15] * vX_[125]) * vX_[15];
    vX_[21] = (vX_[172] - vX_[434] * vX_[170]) / vX_[354];
    vX_[45] = vX_[213] * vX_[26] + vX_[45] * vX_[27] + vX_[216];
    vX_[213] = (vX_[45] - vX_[436] * vX_[180]) / vX_[295];
    vX_[323] = vX_[97] * vX_[26] + vX_[76] * vX_[27] - vX_[307] * (vX_[56] * vX_[28] + vX_[323] * vX_[26] - (vX_[333] * vX_[213] + vX_[400] * vX_[436])) - vX_[398] - (vX_[320] * vX_[213] + vX_[391] * vX_[436]);
    vX_[213] = vX_[277] * vX_[26] + vX_[271] * vX_[27] + vX_[307] * (vX_[28] * vX_[195] + vX_[26] * vX_[397] - (vX_[303] * vX_[213] + vX_[398] * vX_[436])) - (vX_[301] * vX_[213] + vX_[368] * vX_[436]);
    vX_[397] = - vX_[323];
    vX_[271] = vX_[11] * vX_[397] + vX_[15] * vX_[213];
    vX_[397] = vX_[20] * vX_[213] + vX_[15] * vX_[397];
    vX_[277] = (vX_[397] - vX_[446] * vX_[170]) / vX_[354];
    jac[91] = (0 - vX_[0] * (-1 * (vX_[403] + (vX_[295] * vX_[60] + vX_[180] * vX_[417] - vX_[418] * vX_[180]) / vX_[295]) + vX_[394] * vX_[420] + vX_[334] * vX_[14] + (0.0007689361 * vX_[164] - vX_[412] * vX_[170]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[338] + vX_[15] * vX_[274] + vX_[30] * vX_[345] + vX_[12] * vX_[378] + vX_[334] * vX_[420] + vX_[156] * vX_[14] + (vX_[358] * vX_[164] + vX_[304] * vX_[414] - vX_[91] * vX_[170]) / vX_[354]) - 9.81 * ((vX_[4] * ((vX_[15] * vX_[209] + vX_[20] * vX_[390]) * vX_[20] + (vX_[15] * vX_[51] + vX_[20] * vX_[125]) * vX_[15] - (vX_[358] * vX_[21] + vX_[304] * vX_[434])) + vX_[0] * (-1 * vX_[323] * vX_[20] + -1 * vX_[213] * vX_[15] + vX_[271] - 0.0007689361 * vX_[21])) * vX_[4] + (vX_[4] * (0 - vX_[271] - (vX_[358] * vX_[277] + vX_[304] * vX_[446])) + vX_[0] * (- 0.0007689361 * vX_[277])) * vX_[0]) - vX_[452] * ((vX_[4] * vX_[334] + vX_[0] * vX_[394]) * vX_[0] + (vX_[4] * vX_[156] + vX_[0] * vX_[334]) * vX_[4])) / vX_[451];
    vX_[277] = vX_[0] * jac[91];
    vX_[271] = vX_[4] * jac[91];
    jac[92] = (vX_[164] - 0.0007689361 * vX_[277] - (vX_[358] * vX_[271] + vX_[304] * vX_[113]) - vX_[397] * vX_[437] - vX_[172] * vX_[431] - vX_[445] * vX_[170]) / vX_[354];
    vX_[277] = -1 * vX_[277];
    vX_[397] = vX_[15] * jac[92] + vX_[20] * vX_[271];
    vX_[172] = vX_[11] * jac[92] + vX_[15] * vX_[271];
    vX_[164] = vX_[34] * jac[92] + vX_[30] * vX_[271];
    vX_[271] = vX_[16] * jac[92] + vX_[12] * vX_[271];
    jac[93] = (vX_[60] - (vX_[295] * vX_[277] + vX_[180] * vX_[310]) - (vX_[320] * vX_[397] + vX_[391] * vX_[24]) - (vX_[301] * vX_[172] + vX_[368] * vX_[336]) - vX_[45] * vX_[283] - (vX_[303] * vX_[164] + vX_[398] * vX_[32]) - (vX_[333] * vX_[271] + vX_[400] * vX_[346]) - vX_[314] * vX_[180]) / vX_[295];
    vX_[45] = -1 * vX_[397];
    vX_[277] = vX_[277] + jac[93];
    vX_[400] = vX_[26] * vX_[277] + vX_[28] * vX_[172];
    vX_[172] = vX_[27] * vX_[277] + vX_[26] * vX_[172];
    vX_[277] = -0.0825 * vX_[277] + -1 * vX_[164];
    vX_[164] = vX_[39] * vX_[271] + vX_[38] * vX_[397];
    vX_[271] = vX_[26] * vX_[271] + vX_[89] * vX_[397];
    jac[94] = (vX_[197] - (vX_[244] * vX_[45] + vX_[229] * vX_[298]) - (vX_[227] * vX_[400] + vX_[183] * vX_[348]) - (vX_[249] * vX_[172] + vX_[55] * vX_[151]) - (vX_[224] * vX_[277] + vX_[252] * vX_[312]) - (vX_[255] * vX_[164] + vX_[22] * vX_[158]) - (vX_[267] * vX_[271] + vX_[245] * vX_[361]) - vX_[259] * vX_[229]) / vX_[244];
    vX_[45] = vX_[45] + jac[94];
    vX_[252] = vX_[101] * vX_[45] + vX_[95] * vX_[172];
    vX_[197] = vX_[95] * vX_[45] + vX_[83] * vX_[172];
    vX_[164] = -0.0825 * vX_[45] + vX_[164];
    vX_[245] = vX_[108] * vX_[45] + vX_[109] * vX_[400] + vX_[110] * vX_[172] + vX_[111] * vX_[277] + vX_[85] * vX_[271];
    vX_[45] = vX_[84] * vX_[45] + vX_[86] * vX_[400] + vX_[87] * vX_[172] + vX_[88] * vX_[277] + vX_[83] * vX_[271];
    jac[95] = (vX_[385] - (vX_[81] * vX_[400] + vX_[373] * vX_[348]) - 0.002164052 * vX_[252] - (vX_[187] * vX_[197] + vX_[52] * vX_[119]) - (vX_[215] * vX_[164] + vX_[177] * vX_[275]) - (vX_[182] * vX_[245] + vX_[159] * vX_[231]) - (vX_[199] * vX_[45] + vX_[69] * vX_[473]) - vX_[362] * vX_[373]) / vX_[81];
    vX_[252] = -1 * vX_[252];
    vX_[253] = -1 * vX_[253];
    vX_[400] = vX_[400] + jac[95];
    vX_[177] = vX_[70] * vX_[400] + vX_[106] * vX_[197];
    vX_[380] = vX_[70] * vX_[264] + vX_[106] * vX_[119] + vX_[380];
    vX_[400] = vX_[49] * vX_[400] + vX_[70] * vX_[197];
    vX_[264] = vX_[49] * vX_[264] + vX_[70] * vX_[119] + vX_[381];
    vX_[245] = -1 * vX_[245];
    vX_[231] = -1 * vX_[231];
    vX_[383] = vX_[70] * vX_[275] + vX_[106] * vX_[473] + vX_[383];
    vX_[119] = vX_[49] * vX_[164] + vX_[70] * vX_[45];
    vX_[473] = vX_[49] * vX_[275] + vX_[70] * vX_[473] + vX_[384];
    vX_[372] = (vX_[372] - vX_[68] * vX_[253] - vX_[75] * vX_[380] - vX_[67] * vX_[264] - vX_[94] * vX_[231] - vX_[163] * vX_[383] - vX_[171] * vX_[473]) / vX_[68];
    jac[96] = (vX_[306] - (vX_[68] * vX_[252] + vX_[59] * vX_[253]) - (vX_[75] * vX_[177] + vX_[123] * vX_[380]) - (vX_[67] * vX_[400] + vX_[136] * vX_[264]) - (vX_[94] * vX_[245] + vX_[161] * vX_[231]) - (vX_[163] * (vX_[70] * vX_[164] + vX_[106] * vX_[45]) + vX_[285] * vX_[383]) - (vX_[171] * vX_[119] + vX_[160] * vX_[473]) - vX_[372] * vX_[59]) / vX_[68];
    vX_[252] = vX_[252] + jac[96];
    vX_[372] = vX_[253] + vX_[372];
    jac[97] = (vX_[386] - 0.0049096523 * -1 * vX_[177] - -0.0005483591 * (vX_[50] * vX_[252] + vX_[291] * vX_[372] + vX_[66] * vX_[400] + vX_[185] * vX_[264] + vX_[457]) - -0.0016724827 * (vX_[53] * vX_[252] + vX_[351] * vX_[372] + vX_[50] * vX_[400] + vX_[291] * vX_[264] + vX_[448]) - 0.007735484874 * (vX_[50] * vX_[245] + vX_[291] * vX_[231] + vX_[148] * vX_[119] + vX_[281] * vX_[473] + vX_[127] * vX_[177] + vX_[166] * vX_[380] + vX_[467]) - 0.003127439544 * (vX_[53] * vX_[245] + vX_[351] * vX_[231] + vX_[50] * vX_[119] + vX_[291] * vX_[473] + vX_[54] * vX_[177] + vX_[438] * vX_[380] + vX_[132])) / 0.0049096523;
    vX_[372] = vX_[0] * x_in[8];
    vX_[252] = vX_[5] * vX_[4] + vX_[4] * vX_[5];
    vX_[473] = vX_[12] * vX_[4];
    vX_[119] = -1 * vX_[0];
    vX_[231] = vX_[10] * vX_[473] + vX_[119] * vX_[17];
    vX_[245] = vX_[20] * vX_[4];
    vX_[264] = vX_[15] * vX_[4];
    vX_[400] = vX_[19] * vX_[245] + vX_[264] * vX_[23];
    vX_[380] = vX_[19] * vX_[119] + vX_[264] * vX_[10];
    vX_[177] = vX_[30] * vX_[4];
    vX_[386] = -0.0825 * vX_[119] + -1 * vX_[177];
    vX_[132] = vX_[28] * vX_[264] + vX_[26] * vX_[119];
    vX_[166] = vX_[38] * vX_[245] + vX_[39] * vX_[473];
    vX_[281] = -1 * vX_[245];
    vX_[467] = vX_[29] * vX_[386] + vX_[132] * vX_[36] - (vX_[37] * vX_[166] + vX_[281] * vX_[42]);
    vX_[448] = vX_[29] * vX_[281] + vX_[132] * vX_[37];
    vX_[457] = vX_[37] * vX_[281] + vX_[281] * vX_[37];
    vX_[185] = vX_[26] * vX_[264] + vX_[27] * vX_[119];
    vX_[438] = vX_[46] * vX_[185] + vX_[185] * vX_[46];
    vX_[351] = vX_[89] * vX_[245] + vX_[26] * vX_[473];
    vX_[291] = vX_[84] * vX_[281] + vX_[86] * vX_[132] + vX_[87] * vX_[185] + vX_[88] * vX_[386] + vX_[83] * vX_[351];
    vX_[253] = vX_[82] * vX_[291] + vX_[132] * vX_[93];
    vX_[383] = -0.0825 * vX_[281] + vX_[166];
    vX_[45] = vX_[83] * vX_[185] + vX_[95] * vX_[281];
    vX_[164] = vX_[96] * vX_[383] + vX_[45] * vX_[99];
    vX_[161] = vX_[95] * vX_[185] + vX_[101] * vX_[281];
    vX_[306] = vX_[96] * vX_[161] + vX_[45] * vX_[103];
    vX_[160] = vX_[96] * vX_[132] + vX_[45] * vX_[82];
    vX_[285] = vX_[108] * vX_[281] + vX_[109] * vX_[132] + vX_[110] * vX_[185] + vX_[111] * vX_[386] + vX_[85] * vX_[351];
    vX_[136] = -1 * vX_[285];
    vX_[59] = vX_[106] * vX_[45] + vX_[70] * vX_[132];
    vX_[123] = vX_[106] * vX_[291] + vX_[70] * vX_[383];
    vX_[275] = -1 * vX_[161];
    vX_[384] = vX_[107] * vX_[136] + vX_[59] * vX_[116] - (vX_[117] * vX_[123] + vX_[275] * vX_[120]);
    vX_[381] = vX_[107] * vX_[275] + vX_[59] * vX_[117];
    vX_[197] = vX_[117] * vX_[275] + vX_[275] * vX_[117];
    vX_[69] = vX_[70] * vX_[45] + vX_[49] * vX_[132];
    vX_[52] = vX_[124] * vX_[69] + vX_[69] * vX_[124];
    vX_[159] = -0.088 * vX_[275] + -1 * vX_[123];
    vX_[373] = vX_[50] * vX_[69] + vX_[53] * vX_[275];
    vX_[385] = vX_[128] * vX_[159] + vX_[373] * vX_[131];
    vX_[362] = vX_[70] * vX_[291] + vX_[49] * vX_[383];
    vX_[348] = vX_[53] * vX_[136] + vX_[50] * vX_[362] + vX_[54] * vX_[59];
    vX_[271] = -1 * vX_[59];
    vX_[277] = vX_[133] * vX_[348] + vX_[271] * vX_[138];
    vX_[172] = vX_[385] - vX_[277];
    vX_[22] = vX_[66] * vX_[69] + vX_[50] * vX_[275];
    vX_[55] = vX_[128] * vX_[22] + vX_[373] * vX_[142];
    vX_[229] = vX_[142] * vX_[271] + vX_[22] * vX_[133];
    vX_[183] = (- vX_[373]) * x_in[13];
    vX_[259] = vX_[22] * x_in[13];
    vX_[361] = (- vX_[348]) * x_in[13];
    vX_[158] = vX_[50] * vX_[136] + vX_[148] * vX_[362] + vX_[127] * vX_[59];
    vX_[312] = vX_[158] * x_in[13];
    vX_[151] = vX_[128] * vX_[271] + vX_[373] * vX_[133];
    vX_[159] = vX_[142] * vX_[159] + vX_[22] * vX_[131] - (vX_[133] * vX_[158] + vX_[271] * vX_[152]);
    vX_[298] = vX_[142] * vX_[22] + vX_[22] * vX_[142];
    vX_[397] = vX_[128] * vX_[373] + vX_[373] * vX_[128];
    vX_[277] = 0.007735484874 * (vX_[277] - vX_[385]) + -0.002420945 * vX_[55] + -0.0005483591 * vX_[151] - -0.003127439544 * vX_[159] - -0.0016724827 * vX_[229] - -0.0003951087 * (vX_[298] - vX_[397]);
    vX_[385] = 0 - vX_[277];
    vX_[271] = vX_[133] * vX_[271] + vX_[271] * vX_[133];
    vX_[391] = -0.735522 * vX_[172] + 0.007735484874 * vX_[55] + 0.045305948634 * vX_[229] + 0.000863976360112152 * vX_[183] + -0.0426708405168984 * vX_[259] + 0.72333422730663 * vX_[361] + -0.00492748973017121 * vX_[312] + (0.007735484874 * vX_[385]) / 0.0049096523 - -0.003127439544 * (vX_[271] + vX_[397]);
    vX_[368] = 0.735522 * vX_[159] + 0.045305948634 * vX_[151] + -0.003127439544 * vX_[55] + 0.0456552523787178 * vX_[183] + 0.00106536842387716 * vX_[259] + -0.00492748973017121 * vX_[361] + 0.733529826725046 * vX_[312] + (0.003127439544 * vX_[385]) / 0.0049096523 - 0.007735484874 * (vX_[271] + vX_[298]);
    vX_[398] = (- vX_[69]) * x_in[12];
    vX_[180] = vX_[59] * x_in[12];
    vX_[60] = (- vX_[362]) * x_in[12];
    vX_[314] = vX_[123] * x_in[12];
    vX_[346] = vX_[117] * vX_[362] + vX_[275] * vX_[137];
    vX_[136] = vX_[124] * vX_[136] + vX_[69] * vX_[116];
    vX_[32] = vX_[124] * vX_[59] + vX_[69] * vX_[107];
    vX_[275] = vX_[124] * vX_[275] + vX_[69] * vX_[117];
    vX_[158] = vX_[128] * vX_[158] + vX_[373] * vX_[152] - (vX_[142] * vX_[348] + vX_[22] * vX_[138]);
    vX_[159] = 0.045305948634 * vX_[159] + -0.0003951087 * vX_[229] + -0.0016724827 * (vX_[271] - vX_[397]) + 0.0128378177682551 * vX_[183] + -0.000581908304553986 * vX_[259] + 0.000863976360112152 * vX_[361] + 0.0456552523787178 * vX_[312] + (-0.0005483591 * vX_[385]) / 0.0049096523 - 0.007735484874 * vX_[158] - -0.0104103567 * vX_[151] - -0.0005483591 * vX_[55];
    vX_[271] = -0.003127439544 * vX_[158] + 0.045305948634 * vX_[172] + -0.0079894117 * vX_[229] + -0.0016724827 * vX_[55] + -0.000581908304553986 * vX_[183] + 0.0147502744829958 * vX_[259] + -0.0426708405168984 * vX_[361] + 0.00106536842387716 * vX_[312] + (-0.0016724827 * vX_[385]) / 0.0049096523 - -0.0003951087 * vX_[151] - -0.0005483591 * (vX_[271] - vX_[298]);
    vX_[158] = 0.735522 * vX_[158] + 0.007735484874 * vX_[151] + -0.003127439544 * vX_[229] + -0.007735484874 * vX_[183] + -0.003127439544 * vX_[259] - 0.045305948634 * (vX_[298] + vX_[397]);
    vX_[397] = vX_[107] * vX_[59] + vX_[59] * vX_[107];
    vX_[298] = 0.100241616695 * (vX_[346] - vX_[136]) + 0.0080873057 * vX_[32] + 9.3569106e-05 * vX_[275] + vX_[50] * vX_[159] + vX_[53] * vX_[271] + -0.088 * vX_[158] - -0.023526756935 * vX_[384] - -0.000103758764 * vX_[381] - 0.0015241109 * (vX_[397] - vX_[52]);
    vX_[151] = 0 - vX_[298];
    vX_[362] = vX_[124] * vX_[123] + vX_[69] * vX_[120] - (vX_[107] * vX_[362] + vX_[59] * vX_[137]);
    vX_[277] = -0.017527158935 * vX_[384] + 0.0015241109 * vX_[381] + -0.000103758764 * (vX_[197] - vX_[52]) + vX_[127] * vX_[391] + vX_[54] * vX_[368] + -1 * (vX_[277] + (0.0049096523 * vX_[385]) / 0.0049096523) + vX_[58] * vX_[398] + vX_[77] * vX_[180] + vX_[165] * vX_[60] + vX_[173] * vX_[314] + (vX_[75] * vX_[151]) / vX_[68] - 0.100241616695 * vX_[362] - 0.0093141007 * vX_[275] - 9.3569106e-05 * vX_[32];
    vX_[136] = vX_[136] - vX_[346];
    vX_[271] = -0.023526756935 * vX_[362] + -0.017527158935 * vX_[136] + 0.001226795 * vX_[381] + -0.000103758764 * vX_[32] + vX_[66] * vX_[159] + vX_[50] * vX_[271] + vX_[77] * vX_[398] + vX_[65] * vX_[180] + vX_[168] * vX_[60] + vX_[118] * vX_[314] + (vX_[67] * vX_[151]) / vX_[68] - 0.0015241109 * vX_[275] - 9.3569106e-05 * (vX_[197] - vX_[397]);
    vX_[383] = vX_[103] * vX_[383] + vX_[161] * vX_[99] - (vX_[82] * vX_[285] + vX_[132] * vX_[115]);
    vX_[159] = vX_[103] * vX_[132] + vX_[161] * vX_[82];
    vX_[346] = vX_[103] * vX_[161] + vX_[161] * vX_[103];
    vX_[69] = vX_[96] * vX_[45] + vX_[45] * vX_[96];
    vX_[123] = -0.014653732538 * (vX_[253] - vX_[164]) + -0.0079672 * vX_[306] + 0.002164052 * vX_[160] + vX_[70] * vX_[277] + vX_[49] * vX_[271] - 0.05034347249 * vX_[383] - -0.0046002455 * vX_[159] - -0.0015152446 * (vX_[346] - vX_[69]);
    vX_[59] = 0 - vX_[123];
    vX_[164] = vX_[164] - vX_[253];
    vX_[253] = (- vX_[45]) * x_in[11];
    vX_[229] = vX_[161] * x_in[11];
    vX_[55] = (- vX_[291]) * x_in[11];
    vX_[172] = vX_[285] * x_in[11];
    vX_[22] = vX_[82] * vX_[132] + vX_[132] * vX_[82];
    vX_[362] = -1.225946 * vX_[164] + -0.014653732538 * vX_[306] + -0.047121686402 * vX_[159] + -1 * (1.666555 * vX_[362] + 0.100241616695 * vX_[275] + -0.023526756935 * vX_[381] + vX_[50] * vX_[391] + vX_[53] * vX_[368] + vX_[162] * vX_[398] + vX_[135] * vX_[180] + vX_[130] * vX_[60] + vX_[179] * vX_[314] + (vX_[94] * vX_[151]) / vX_[68] - -0.017527158935 * (vX_[397] + vX_[52])) + vX_[184] * vX_[253] + vX_[188] * vX_[229] + vX_[192] * vX_[55] + vX_[200] * vX_[172] + (vX_[182] * vX_[59]) / vX_[81] - 0.05034347249 * (vX_[22] + vX_[69]);
    vX_[136] = -1.666555 * vX_[136] + 0.100241616695 * vX_[32] + -0.017527158935 * vX_[381] + -1 * vX_[158] + vX_[165] * vX_[398] + vX_[168] * vX_[180] + vX_[203] * vX_[60] + vX_[204] * vX_[314] + (vX_[163] * vX_[151]) / vX_[68] - -0.023526756935 * (vX_[197] + vX_[52]);
    vX_[397] = 1.666555 * vX_[384] + -0.017527158935 * vX_[275] + -0.023526756935 * vX_[32] + vX_[148] * vX_[391] + vX_[50] * vX_[368] + vX_[173] * vX_[398] + vX_[118] * vX_[180] + vX_[204] * vX_[60] + vX_[190] * vX_[314] + (vX_[171] * vX_[151]) / vX_[68] - 0.100241616695 * (vX_[197] + vX_[397]);
    vX_[275] = 1.225946 * vX_[383] + -0.047121686402 * vX_[160] + 0.05034347249 * vX_[306] + vX_[106] * vX_[136] + vX_[70] * vX_[397] + vX_[186] * vX_[253] + vX_[121] * vX_[229] + vX_[200] * vX_[55] + vX_[207] * vX_[172] + (vX_[199] * vX_[59]) / vX_[81] - -0.014653732538 * (vX_[22] + vX_[346]);
    vX_[32] = (- vX_[185]) * x_in[10];
    vX_[368] = vX_[132] * x_in[10];
    vX_[391] = (- vX_[351]) * x_in[10];
    vX_[197] = vX_[166] * x_in[10];
    vX_[384] = vX_[37] * vX_[351] + vX_[281] * vX_[92];
    vX_[386] = vX_[46] * vX_[386] + vX_[185] * vX_[36];
    vX_[158] = vX_[46] * vX_[132] + vX_[185] * vX_[29];
    vX_[281] = vX_[46] * vX_[281] + vX_[185] * vX_[37];
    vX_[285] = vX_[96] * vX_[285] + vX_[45] * vX_[115] - (vX_[103] * vX_[291] + vX_[161] * vX_[93]);
    vX_[383] = -0.047121686402 * vX_[383] + -0.0015152446 * vX_[159] + -0.0046002455 * (vX_[22] - vX_[69]) + -1 * (vX_[298] + (vX_[68] * vX_[151]) / vX_[68]) + vX_[238] * vX_[253] + vX_[234] * vX_[229] + vX_[184] * vX_[55] + vX_[186] * vX_[172] + (0.002164052 * vX_[59]) / vX_[81] - -0.014653732538 * vX_[285] - -0.0285580595 * vX_[160] - 0.002164052 * vX_[306];
    vX_[22] = 0.05034347249 * vX_[285] + -0.047121686402 * vX_[164] + -0.0205908595 * vX_[159] + -0.0046002455 * vX_[306] + vX_[106] * vX_[277] + vX_[70] * vX_[271] + vX_[234] * vX_[253] + vX_[80] * vX_[229] + vX_[188] * vX_[55] + vX_[121] * vX_[172] + (vX_[187] * vX_[59]) / vX_[81] - -0.0015152446 * vX_[160] - 0.002164052 * (vX_[22] - vX_[346]);
    vX_[285] = 1.225946 * vX_[285] + -0.014653732538 * vX_[160] + 0.05034347249 * vX_[159] + vX_[70] * vX_[136] + vX_[49] * vX_[397] + vX_[181] * vX_[253] + vX_[230] * vX_[229] + vX_[220] * vX_[55] + vX_[217] * vX_[172] + (vX_[215] * vX_[59]) / vX_[81] - -0.047121686402 * (vX_[346] + vX_[69]);
    vX_[397] = vX_[29] * vX_[132] + vX_[132] * vX_[29];
    vX_[136] = -0.19076837715 * (vX_[384] - vX_[386]) + -0.035277844 * vX_[158] + -0.0016444875 * vX_[281] + vX_[101] * vX_[383] + vX_[95] * vX_[22] + -0.0825 * vX_[285] + vX_[108] * vX_[362] + vX_[84] * vX_[275] - 0.374644408005 * vX_[467] - 0.003905355 * vX_[448] - 0.027715843 * (vX_[397] - vX_[438]);
    vX_[69] = 0 - vX_[136];
    vX_[351] = vX_[46] * vX_[166] + vX_[185] * vX_[42] - (vX_[29] * vX_[351] + vX_[132] * vX_[92]);
    vX_[123] = 0.09850206933 * vX_[467] + 0.027715843 * vX_[448] + 0.003905355 * (vX_[457] - vX_[438]) + (vX_[81] * vX_[59]) / vX_[81] + vX_[123] + vX_[109] * vX_[362] + vX_[86] * vX_[275] + vX_[246] * vX_[32] + vX_[250] * vX_[368] + vX_[257] * vX_[391] + vX_[269] * vX_[197] + (vX_[227] * vX_[69]) / vX_[244] - -0.19076837715 * vX_[351] - 0.00990887600000001 * vX_[281] - -0.0016444875 * vX_[158];
    vX_[386] = vX_[386] - vX_[384];
    vX_[22] = 0.374644408005 * vX_[351] + 0.09850206933 * vX_[386] + 0.04518672 * vX_[448] + 0.003905355 * vX_[158] + vX_[95] * vX_[383] + vX_[83] * vX_[22] + vX_[110] * vX_[362] + vX_[87] * vX_[275] + vX_[250] * vX_[32] + vX_[243] * vX_[368] + vX_[260] * vX_[391] + vX_[40] * vX_[197] + (vX_[249] * vX_[69]) / vX_[244] - 0.027715843 * vX_[281] - -0.0016444875 * (vX_[457] - vX_[397]);
    vX_[351] = 3.587895 * vX_[351] + -0.19076837715 * vX_[281] + 0.374644408005 * vX_[448] + vX_[111] * vX_[362] + vX_[88] * vX_[275] + vX_[254] * vX_[32] + vX_[33] * vX_[368] + vX_[129] * vX_[391] + vX_[104] * vX_[197] + (vX_[224] * vX_[69]) / vX_[244] - 0.09850206933 * (vX_[397] + vX_[438]);
    vX_[383] = -(vX_[10] * vX_[177] + vX_[119] * vX_[35]);
    vX_[384] = vX_[23] * vX_[119] + vX_[245] * vX_[10];
    vX_[185] = vX_[23] * vX_[245] + vX_[245] * vX_[23];
    vX_[166] = vX_[19] * vX_[264] + vX_[264] * vX_[19];
    vX_[132] = 0.088844724872 * vX_[231] + -0.003616545 * vX_[400] + -0.004377257 * vX_[380] + vX_[26] * vX_[123] + vX_[27] * vX_[22] + -0.0825 * vX_[351] - 0.126729164208 * vX_[383] - -0.0054876483 * vX_[384] - -0.008248334 * (vX_[185] - vX_[166]);
    vX_[346] = 0 - vX_[132];
    vX_[159] = (- vX_[4]) * x_in[8];
    vX_[160] = vX_[9] * vX_[0] + vX_[0] * vX_[9];
    vX_[164] = vX_[4] * x_in[8];
    vX_[271] = vX_[5] * vX_[0] + vX_[4] * vX_[9];
    vX_[119] = vX_[10] * vX_[119] + vX_[119] * vX_[10];
    vX_[386] = -3.587895 * vX_[386] + -0.19076837715 * vX_[158] + 0.09850206933 * vX_[448] + vX_[285] + vX_[257] * vX_[32] + vX_[260] * vX_[368] + vX_[282] * vX_[391] + vX_[280] * vX_[197] + (vX_[255] * vX_[69]) / vX_[244] - 0.374644408005 * (vX_[457] + vX_[438]);
    vX_[397] = 3.587895 * vX_[467] + 0.09850206933 * vX_[281] + 0.374644408005 * vX_[158] + vX_[85] * vX_[362] + vX_[83] * vX_[275] + vX_[269] * vX_[32] + vX_[40] * vX_[368] + vX_[280] * vX_[391] + vX_[276] * vX_[197] + (vX_[267] * vX_[69]) / vX_[244] - -0.19076837715 * (vX_[457] + vX_[397]);
    vX_[281] = (- vX_[264]) * x_in[9];
    vX_[158] = vX_[245] * x_in[9];
    vX_[275] = (- vX_[473]) * x_in[9];
    vX_[362] = vX_[177] * x_in[9];
    vX_[177] = vX_[19] * vX_[177] + vX_[264] * vX_[35] - (vX_[23] * vX_[473] + vX_[245] * vX_[17]);
    vX_[136] = -0.214708623208 * vX_[383] + -0.008248334 * vX_[384] + -0.0054876483 * (vX_[119] - vX_[166]) + vX_[38] * vX_[386] + vX_[89] * vX_[397] + -1 * (vX_[136] + (vX_[244] * vX_[69]) / vX_[244]) + vX_[284] * vX_[281] + vX_[324] * vX_[158] + vX_[321] * vX_[275] + vX_[300] * vX_[362] + (vX_[320] * vX_[346]) / vX_[295] - 0.088844724872 * vX_[177] - -0.038245722 * vX_[380] - -0.004377257 * vX_[400];
    vX_[231] = - vX_[231];
    vX_[177] = 0.126729164208 * vX_[177] + -0.214708623208 * vX_[231] + -0.034629177 * vX_[384] + -0.0054876483 * vX_[400] + vX_[28] * vX_[123] + vX_[26] * vX_[22] + vX_[324] * vX_[281] + vX_[294] * vX_[158] + vX_[305] * vX_[275] + vX_[335] * vX_[362] + (vX_[301] * vX_[346]) / vX_[295] - -0.008248334 * vX_[380] - -0.004377257 * (vX_[119] - vX_[185]);
    vX_[231] = -3.228604 * vX_[231] + 0.088844724872 * vX_[400] + -0.214708623208 * vX_[384] + -1 * vX_[351] + vX_[321] * vX_[281] + vX_[305] * vX_[158] + vX_[309] * vX_[275] + vX_[339] * vX_[362] + (vX_[303] * vX_[346]) / vX_[295] - 0.126729164208 * (vX_[119] + vX_[166]);
    vX_[397] = 3.228604 * vX_[383] + -0.214708623208 * vX_[380] + 0.126729164208 * vX_[400] + vX_[39] * vX_[386] + vX_[26] * vX_[397] + vX_[300] * vX_[281] + vX_[335] * vX_[158] + vX_[339] * vX_[275] + vX_[349] * vX_[362] + (vX_[333] * vX_[346]) / vX_[295] - 0.088844724872 * (vX_[119] + vX_[185]);
    vX_[386] = 0.010261103 * vX_[372] + -0.003983359 * (vX_[160] - vX_[252]) - 0.0007689361 * vX_[164] - 0.019620772 * vX_[271] - vX_[15] * vX_[136] - vX_[11] * vX_[177] - vX_[34] * vX_[231] - vX_[16] * vX_[397];
    jac[105] = (0 - vX_[0] * (-0.003983359 * vX_[372] + 0.010261103 * (0 - vX_[252]) + -1 * (vX_[132] + (vX_[295] * vX_[346]) / vX_[295]) + vX_[356] * vX_[159] + vX_[359] * vX_[372] + (0.0007689361 * vX_[386]) / vX_[354] - 0.018031479 * vX_[164] - 0.0007689361 * vX_[271]) - vX_[4] * (-0.001589293 * vX_[372] + 0.010261103 * vX_[271] + vX_[20] * vX_[136] + vX_[15] * vX_[177] + vX_[30] * vX_[231] + vX_[12] * vX_[397] + vX_[359] * vX_[159] + vX_[353] * vX_[372] + (vX_[358] * vX_[386]) / vX_[354] - -0.003983359 * vX_[164] - 0.0007689361 * (0 - vX_[160]))) / vX_[451];
    vX_[159] = vX_[0] * jac[105] + vX_[159];
    vX_[372] = vX_[4] * jac[105] + vX_[372];
    jac[106] = (vX_[386] - 0.0007689361 * vX_[159] - vX_[358] * vX_[372]) / vX_[354];
    vX_[159] = -1 * vX_[159];
    vX_[281] = vX_[15] * jac[106] + vX_[20] * vX_[372] + vX_[281];
    vX_[158] = vX_[11] * jac[106] + vX_[15] * vX_[372] + vX_[158];
    vX_[275] = vX_[34] * jac[106] + vX_[30] * vX_[372] + vX_[275];
    vX_[372] = vX_[16] * jac[106] + vX_[12] * vX_[372] + vX_[362];
    jac[107] = (vX_[346] - vX_[295] * vX_[159] - vX_[320] * vX_[281] - vX_[301] * vX_[158] - vX_[303] * vX_[275] - vX_[333] * vX_[372]) / vX_[295];
    vX_[346] = -1 * vX_[281];
    vX_[159] = vX_[159] + jac[107];
    vX_[32] = vX_[26] * vX_[159] + vX_[28] * vX_[158] + vX_[32];
    vX_[158] = vX_[27] * vX_[159] + vX_[26] * vX_[158] + vX_[368];
    vX_[159] = -0.0825 * vX_[159] + -1 * vX_[275];
    vX_[391] = vX_[39] * vX_[372] + vX_[38] * vX_[281] + vX_[391];
    vX_[372] = vX_[26] * vX_[372] + vX_[89] * vX_[281] + vX_[197];
    jac[108] = (vX_[69] - vX_[244] * vX_[346] - vX_[227] * vX_[32] - vX_[249] * vX_[158] - vX_[224] * vX_[159] - vX_[255] * vX_[391] - vX_[267] * vX_[372]) / vX_[244];
    vX_[346] = vX_[346] + jac[108];
    vX_[253] = vX_[101] * vX_[346] + vX_[95] * vX_[158] + vX_[253];
    vX_[229] = vX_[95] * vX_[346] + vX_[83] * vX_[158] + vX_[229];
    vX_[391] = -0.0825 * vX_[346] + vX_[391];
    vX_[55] = vX_[108] * vX_[346] + vX_[109] * vX_[32] + vX_[110] * vX_[158] + vX_[111] * vX_[159] + vX_[85] * vX_[372] + vX_[55];
    vX_[346] = vX_[84] * vX_[346] + vX_[86] * vX_[32] + vX_[87] * vX_[158] + vX_[88] * vX_[159] + vX_[83] * vX_[372] + vX_[172];
    jac[109] = (vX_[59] - vX_[81] * vX_[32] - 0.002164052 * vX_[253] - vX_[187] * vX_[229] - vX_[215] * vX_[391] - vX_[182] * vX_[55] - vX_[199] * vX_[346]) / vX_[81];
    vX_[253] = -1 * vX_[253];
    vX_[32] = vX_[32] + jac[109];
    vX_[398] = vX_[70] * vX_[32] + vX_[106] * vX_[229] + vX_[398];
    vX_[32] = vX_[49] * vX_[32] + vX_[70] * vX_[229] + vX_[180];
    vX_[55] = -1 * vX_[55];
    vX_[314] = vX_[49] * vX_[391] + vX_[70] * vX_[346] + vX_[314];
    jac[110] = (vX_[151] - vX_[68] * vX_[253] - vX_[75] * vX_[398] - vX_[67] * vX_[32] - vX_[94] * vX_[55] - vX_[163] * (vX_[70] * vX_[391] + vX_[106] * vX_[346] + vX_[60]) - vX_[171] * vX_[314]) / vX_[68];
    vX_[253] = vX_[253] + jac[110];
    jac[111] = (vX_[385] - 0.0049096523 * -1 * vX_[398] - -0.0005483591 * (vX_[50] * vX_[253] + vX_[66] * vX_[32] + vX_[183]) - -0.0016724827 * (vX_[53] * vX_[253] + vX_[50] * vX_[32] + vX_[259]) - 0.007735484874 * (vX_[50] * vX_[55] + vX_[148] * vX_[314] + vX_[127] * vX_[398] + vX_[361]) - 0.003127439544 * (vX_[53] * vX_[55] + vX_[50] * vX_[314] + vX_[54] * vX_[398] + vX_[312])) / 0.0049096523;
    vX_[253] = x_in[8] + x_in[8];
    vX_[314] = vX_[10] * vX_[16];
    vX_[55] = vX_[19] * vX_[15] + vX_[11] * vX_[23];
    vX_[32] = vX_[11] * vX_[10];
    vX_[398] = -1 * vX_[34];
    vX_[385] = vX_[28] * vX_[11];
    vX_[312] = vX_[38] * vX_[15] + vX_[39] * vX_[16];
    vX_[361] = -1 * vX_[15];
    vX_[259] = vX_[29] * vX_[398] + vX_[385] * vX_[36] - (vX_[37] * vX_[312] + vX_[361] * vX_[42]);
    vX_[183] = vX_[29] * vX_[361] + vX_[385] * vX_[37];
    vX_[346] = vX_[37] * vX_[361] + vX_[361] * vX_[37];
    vX_[391] = vX_[26] * vX_[11];
    vX_[151] = vX_[46] * vX_[391] + vX_[391] * vX_[46];
    vX_[60] = vX_[89] * vX_[15] + vX_[26] * vX_[16];
    vX_[229] = vX_[84] * vX_[361] + vX_[86] * vX_[385] + vX_[87] * vX_[391] + vX_[88] * vX_[398] + vX_[83] * vX_[60];
    vX_[180] = vX_[82] * vX_[229] + vX_[385] * vX_[93];
    vX_[59] = -0.0825 * vX_[361] + vX_[312];
    vX_[372] = vX_[83] * vX_[391] + vX_[95] * vX_[361];
    vX_[159] = vX_[96] * vX_[59] + vX_[372] * vX_[99];
    vX_[158] = vX_[95] * vX_[391] + vX_[101] * vX_[361];
    vX_[172] = vX_[96] * vX_[158] + vX_[372] * vX_[103];
    vX_[69] = vX_[96] * vX_[385] + vX_[372] * vX_[82];
    vX_[281] = vX_[108] * vX_[361] + vX_[109] * vX_[385] + vX_[110] * vX_[391] + vX_[111] * vX_[398] + vX_[85] * vX_[60];
    vX_[197] = -1 * vX_[281];
    vX_[275] = vX_[106] * vX_[372] + vX_[70] * vX_[385];
    vX_[368] = vX_[106] * vX_[229] + vX_[70] * vX_[59];
    vX_[362] = -1 * vX_[158];
    vX_[386] = vX_[107] * vX_[197] + vX_[275] * vX_[116] - (vX_[117] * vX_[368] + vX_[362] * vX_[120]);
    vX_[397] = vX_[107] * vX_[362] + vX_[275] * vX_[117];
    vX_[231] = vX_[117] * vX_[362] + vX_[362] * vX_[117];
    vX_[177] = vX_[70] * vX_[372] + vX_[49] * vX_[385];
    vX_[136] = vX_[124] * vX_[177] + vX_[177] * vX_[124];
    vX_[271] = -0.088 * vX_[362] + -1 * vX_[368];
    vX_[164] = vX_[50] * vX_[177] + vX_[53] * vX_[362];
    vX_[160] = vX_[128] * vX_[271] + vX_[164] * vX_[131];
    vX_[132] = vX_[70] * vX_[229] + vX_[49] * vX_[59];
    vX_[252] = vX_[53] * vX_[197] + vX_[50] * vX_[132] + vX_[54] * vX_[275];
    vX_[119] = -1 * vX_[275];
    vX_[185] = vX_[133] * vX_[252] + vX_[119] * vX_[138];
    vX_[383] = vX_[160] - vX_[185];
    vX_[380] = vX_[66] * vX_[177] + vX_[50] * vX_[362];
    vX_[400] = vX_[128] * vX_[380] + vX_[164] * vX_[142];
    vX_[166] = vX_[142] * vX_[119] + vX_[380] * vX_[133];
    vX_[384] = (- vX_[164]) * x_in[13];
    vX_[351] = vX_[380] * x_in[13];
    vX_[22] = (- vX_[252]) * x_in[13];
    vX_[123] = vX_[50] * vX_[197] + vX_[148] * vX_[132] + vX_[127] * vX_[275];
    vX_[264] = vX_[123] * x_in[13];
    vX_[245] = vX_[128] * vX_[119] + vX_[164] * vX_[133];
    vX_[271] = vX_[142] * vX_[271] + vX_[380] * vX_[131] - (vX_[133] * vX_[123] + vX_[119] * vX_[152]);
    vX_[473] = vX_[142] * vX_[380] + vX_[380] * vX_[142];
    vX_[457] = vX_[128] * vX_[164] + vX_[164] * vX_[128];
    vX_[185] = 0.007735484874 * (vX_[185] - vX_[160]) + -0.002420945 * vX_[400] + -0.0005483591 * vX_[245] - -0.003127439544 * vX_[271] - -0.0016724827 * vX_[166] - -0.0003951087 * (vX_[473] - vX_[457]);
    vX_[160] = 0 - vX_[185];
    vX_[119] = vX_[133] * vX_[119] + vX_[119] * vX_[133];
    vX_[467] = -0.735522 * vX_[383] + 0.007735484874 * vX_[400] + 0.045305948634 * vX_[166] + 0.000863976360112152 * vX_[384] + -0.0426708405168984 * vX_[351] + 0.72333422730663 * vX_[22] + -0.00492748973017121 * vX_[264] + (0.007735484874 * vX_[160]) / 0.0049096523 - -0.003127439544 * (vX_[119] + vX_[457]);
    vX_[285] = 0.735522 * vX_[271] + 0.045305948634 * vX_[245] + -0.003127439544 * vX_[400] + 0.0456552523787178 * vX_[384] + 0.00106536842387716 * vX_[351] + -0.00492748973017121 * vX_[22] + 0.733529826725046 * vX_[264] + (0.003127439544 * vX_[160]) / 0.0049096523 - 0.007735484874 * (vX_[119] + vX_[473]);
    vX_[438] = (- vX_[177]) * x_in[12];
    vX_[448] = vX_[275] * x_in[12];
    vX_[277] = (- vX_[132]) * x_in[12];
    vX_[306] = vX_[368] * x_in[12];
    vX_[298] = vX_[117] * vX_[132] + vX_[362] * vX_[137];
    vX_[197] = vX_[124] * vX_[197] + vX_[177] * vX_[116];
    vX_[161] = vX_[124] * vX_[275] + vX_[177] * vX_[107];
    vX_[362] = vX_[124] * vX_[362] + vX_[177] * vX_[117];
    vX_[123] = vX_[128] * vX_[123] + vX_[164] * vX_[152] - (vX_[142] * vX_[252] + vX_[380] * vX_[138]);
    vX_[271] = 0.045305948634 * vX_[271] + -0.0003951087 * vX_[166] + -0.0016724827 * (vX_[119] - vX_[457]) + 0.0128378177682551 * vX_[384] + -0.000581908304553986 * vX_[351] + 0.000863976360112152 * vX_[22] + 0.0456552523787178 * vX_[264] + (-0.0005483591 * vX_[160]) / 0.0049096523 - 0.007735484874 * vX_[123] - -0.0104103567 * vX_[245] - -0.0005483591 * vX_[400];
    vX_[119] = -0.003127439544 * vX_[123] + 0.045305948634 * vX_[383] + -0.0079894117 * vX_[166] + -0.0016724827 * vX_[400] + -0.000581908304553986 * vX_[384] + 0.0147502744829958 * vX_[351] + -0.0426708405168984 * vX_[22] + 0.00106536842387716 * vX_[264] + (-0.0016724827 * vX_[160]) / 0.0049096523 - -0.0003951087 * vX_[245] - -0.0005483591 * (vX_[119] - vX_[473]);
    vX_[123] = 0.735522 * vX_[123] + 0.007735484874 * vX_[245] + -0.003127439544 * vX_[166] + -0.007735484874 * vX_[384] + -0.003127439544 * vX_[351] - 0.045305948634 * (vX_[473] + vX_[457]);
    vX_[457] = vX_[107] * vX_[275] + vX_[275] * vX_[107];
    vX_[473] = 0.100241616695 * (vX_[298] - vX_[197]) + 0.0080873057 * vX_[161] + 9.3569106e-05 * vX_[362] + vX_[50] * vX_[271] + vX_[53] * vX_[119] + -0.088 * vX_[123] - -0.023526756935 * vX_[386] - -0.000103758764 * vX_[397] - 0.0015241109 * (vX_[457] - vX_[136]);
    vX_[245] = 0 - vX_[473];
    vX_[132] = vX_[124] * vX_[368] + vX_[177] * vX_[120] - (vX_[107] * vX_[132] + vX_[275] * vX_[137]);
    vX_[185] = -0.017527158935 * vX_[386] + 0.0015241109 * vX_[397] + -0.000103758764 * (vX_[231] - vX_[136]) + vX_[127] * vX_[467] + vX_[54] * vX_[285] + -1 * (vX_[185] + (0.0049096523 * vX_[160]) / 0.0049096523) + vX_[58] * vX_[438] + vX_[77] * vX_[448] + vX_[165] * vX_[277] + vX_[173] * vX_[306] + (vX_[75] * vX_[245]) / vX_[68] - 0.100241616695 * vX_[132] - 0.0093141007 * vX_[362] - 9.3569106e-05 * vX_[161];
    vX_[197] = vX_[197] - vX_[298];
    vX_[119] = -0.023526756935 * vX_[132] + -0.017527158935 * vX_[197] + 0.001226795 * vX_[397] + -0.000103758764 * vX_[161] + vX_[66] * vX_[271] + vX_[50] * vX_[119] + vX_[77] * vX_[438] + vX_[65] * vX_[448] + vX_[168] * vX_[277] + vX_[118] * vX_[306] + (vX_[67] * vX_[245]) / vX_[68] - 0.0015241109 * vX_[362] - 9.3569106e-05 * (vX_[231] - vX_[457]);
    vX_[59] = vX_[103] * vX_[59] + vX_[158] * vX_[99] - (vX_[82] * vX_[281] + vX_[385] * vX_[115]);
    vX_[271] = vX_[103] * vX_[385] + vX_[158] * vX_[82];
    vX_[298] = vX_[103] * vX_[158] + vX_[158] * vX_[103];
    vX_[177] = vX_[96] * vX_[372] + vX_[372] * vX_[96];
    vX_[368] = -0.014653732538 * (vX_[180] - vX_[159]) + -0.0079672 * vX_[172] + 0.002164052 * vX_[69] + vX_[70] * vX_[185] + vX_[49] * vX_[119] - 0.05034347249 * vX_[59] - -0.0046002455 * vX_[271] - -0.0015152446 * (vX_[298] - vX_[177]);
    vX_[275] = 0 - vX_[368];
    vX_[159] = vX_[159] - vX_[180];
    vX_[180] = (- vX_[372]) * x_in[11];
    vX_[166] = vX_[158] * x_in[11];
    vX_[400] = (- vX_[229]) * x_in[11];
    vX_[383] = vX_[281] * x_in[11];
    vX_[380] = vX_[82] * vX_[385] + vX_[385] * vX_[82];
    vX_[132] = -1.225946 * vX_[159] + -0.014653732538 * vX_[172] + -0.047121686402 * vX_[271] + -1 * (1.666555 * vX_[132] + 0.100241616695 * vX_[362] + -0.023526756935 * vX_[397] + vX_[50] * vX_[467] + vX_[53] * vX_[285] + vX_[162] * vX_[438] + vX_[135] * vX_[448] + vX_[130] * vX_[277] + vX_[179] * vX_[306] + (vX_[94] * vX_[245]) / vX_[68] - -0.017527158935 * (vX_[457] + vX_[136])) + vX_[184] * vX_[180] + vX_[188] * vX_[166] + vX_[192] * vX_[400] + vX_[200] * vX_[383] + (vX_[182] * vX_[275]) / vX_[81] - 0.05034347249 * (vX_[380] + vX_[177]);
    vX_[197] = -1.666555 * vX_[197] + 0.100241616695 * vX_[161] + -0.017527158935 * vX_[397] + -1 * vX_[123] + vX_[165] * vX_[438] + vX_[168] * vX_[448] + vX_[203] * vX_[277] + vX_[204] * vX_[306] + (vX_[163] * vX_[245]) / vX_[68] - -0.023526756935 * (vX_[231] + vX_[136]);
    vX_[457] = 1.666555 * vX_[386] + -0.017527158935 * vX_[362] + -0.023526756935 * vX_[161] + vX_[148] * vX_[467] + vX_[50] * vX_[285] + vX_[173] * vX_[438] + vX_[118] * vX_[448] + vX_[204] * vX_[277] + vX_[190] * vX_[306] + (vX_[171] * vX_[245]) / vX_[68] - 0.100241616695 * (vX_[231] + vX_[457]);
    vX_[362] = 1.225946 * vX_[59] + -0.047121686402 * vX_[69] + 0.05034347249 * vX_[172] + vX_[106] * vX_[197] + vX_[70] * vX_[457] + vX_[186] * vX_[180] + vX_[121] * vX_[166] + vX_[200] * vX_[400] + vX_[207] * vX_[383] + (vX_[199] * vX_[275]) / vX_[81] - -0.014653732538 * (vX_[380] + vX_[298]);
    vX_[161] = (- vX_[391]) * x_in[10];
    vX_[285] = vX_[385] * x_in[10];
    vX_[467] = (- vX_[60]) * x_in[10];
    vX_[231] = vX_[312] * x_in[10];
    vX_[386] = vX_[37] * vX_[60] + vX_[361] * vX_[92];
    vX_[398] = vX_[46] * vX_[398] + vX_[391] * vX_[36];
    vX_[123] = vX_[46] * vX_[385] + vX_[391] * vX_[29];
    vX_[361] = vX_[46] * vX_[361] + vX_[391] * vX_[37];
    vX_[281] = vX_[96] * vX_[281] + vX_[372] * vX_[115] - (vX_[103] * vX_[229] + vX_[158] * vX_[93]);
    vX_[59] = -0.047121686402 * vX_[59] + -0.0015152446 * vX_[271] + -0.0046002455 * (vX_[380] - vX_[177]) + -1 * (vX_[473] + (vX_[68] * vX_[245]) / vX_[68]) + vX_[238] * vX_[180] + vX_[234] * vX_[166] + vX_[184] * vX_[400] + vX_[186] * vX_[383] + (0.002164052 * vX_[275]) / vX_[81] - -0.014653732538 * vX_[281] - -0.0285580595 * vX_[69] - 0.002164052 * vX_[172];
    vX_[380] = 0.05034347249 * vX_[281] + -0.047121686402 * vX_[159] + -0.0205908595 * vX_[271] + -0.0046002455 * vX_[172] + vX_[106] * vX_[185] + vX_[70] * vX_[119] + vX_[234] * vX_[180] + vX_[80] * vX_[166] + vX_[188] * vX_[400] + vX_[121] * vX_[383] + (vX_[187] * vX_[275]) / vX_[81] - -0.0015152446 * vX_[69] - 0.002164052 * (vX_[380] - vX_[298]);
    vX_[281] = 1.225946 * vX_[281] + -0.014653732538 * vX_[69] + 0.05034347249 * vX_[271] + vX_[70] * vX_[197] + vX_[49] * vX_[457] + vX_[181] * vX_[180] + vX_[230] * vX_[166] + vX_[220] * vX_[400] + vX_[217] * vX_[383] + (vX_[215] * vX_[275]) / vX_[81] - -0.047121686402 * (vX_[298] + vX_[177]);
    vX_[457] = vX_[29] * vX_[385] + vX_[385] * vX_[29];
    vX_[197] = -0.19076837715 * (vX_[386] - vX_[398]) + -0.035277844 * vX_[123] + -0.0016444875 * vX_[361] + vX_[101] * vX_[59] + vX_[95] * vX_[380] + -0.0825 * vX_[281] + vX_[108] * vX_[132] + vX_[84] * vX_[362] - 0.374644408005 * vX_[259] - 0.003905355 * vX_[183] - 0.027715843 * (vX_[457] - vX_[151]);
    vX_[177] = 0 - vX_[197];
    vX_[60] = vX_[46] * vX_[312] + vX_[391] * vX_[42] - (vX_[29] * vX_[60] + vX_[385] * vX_[92]);
    vX_[368] = 0.09850206933 * vX_[259] + 0.027715843 * vX_[183] + 0.003905355 * (vX_[346] - vX_[151]) + (vX_[81] * vX_[275]) / vX_[81] + vX_[368] + vX_[109] * vX_[132] + vX_[86] * vX_[362] + vX_[246] * vX_[161] + vX_[250] * vX_[285] + vX_[257] * vX_[467] + vX_[269] * vX_[231] + (vX_[227] * vX_[177]) / vX_[244] - -0.19076837715 * vX_[60] - 0.00990887600000001 * vX_[361] - -0.0016444875 * vX_[123];
    vX_[398] = vX_[398] - vX_[386];
    vX_[380] = 0.374644408005 * vX_[60] + 0.09850206933 * vX_[398] + 0.04518672 * vX_[183] + 0.003905355 * vX_[123] + vX_[95] * vX_[59] + vX_[83] * vX_[380] + vX_[110] * vX_[132] + vX_[87] * vX_[362] + vX_[250] * vX_[161] + vX_[243] * vX_[285] + vX_[260] * vX_[467] + vX_[40] * vX_[231] + (vX_[249] * vX_[177]) / vX_[244] - 0.027715843 * vX_[361] - -0.0016444875 * (vX_[346] - vX_[457]);
    vX_[60] = 3.587895 * vX_[60] + -0.19076837715 * vX_[361] + 0.374644408005 * vX_[183] + vX_[111] * vX_[132] + vX_[88] * vX_[362] + vX_[254] * vX_[161] + vX_[33] * vX_[285] + vX_[129] * vX_[467] + vX_[104] * vX_[231] + (vX_[224] * vX_[177]) / vX_[244] - 0.09850206933 * (vX_[457] + vX_[151]);
    vX_[59] = - vX_[10] * vX_[34];
    vX_[386] = vX_[15] * vX_[10];
    vX_[391] = vX_[23] * vX_[15] + vX_[15] * vX_[23];
    vX_[312] = vX_[19] * vX_[11] + vX_[11] * vX_[19];
    vX_[385] = 0.088844724872 * vX_[314] + -0.003616545 * vX_[55] + -0.004377257 * vX_[32] + vX_[26] * vX_[368] + vX_[27] * vX_[380] + -0.0825 * vX_[60] - 0.126729164208 * vX_[59] - -0.0054876483 * vX_[386] - -0.008248334 * (vX_[391] - vX_[312]);
    vX_[298] = 0 - vX_[385];
    vX_[398] = -3.587895 * vX_[398] + -0.19076837715 * vX_[123] + 0.09850206933 * vX_[183] + vX_[281] + vX_[257] * vX_[161] + vX_[260] * vX_[285] + vX_[282] * vX_[467] + vX_[280] * vX_[231] + (vX_[255] * vX_[177]) / vX_[244] - 0.374644408005 * (vX_[346] + vX_[151]);
    vX_[457] = 3.587895 * vX_[259] + 0.09850206933 * vX_[361] + 0.374644408005 * vX_[123] + vX_[85] * vX_[132] + vX_[83] * vX_[362] + vX_[269] * vX_[161] + vX_[40] * vX_[285] + vX_[280] * vX_[467] + vX_[276] * vX_[231] + (vX_[267] * vX_[177]) / vX_[244] - -0.19076837715 * (vX_[346] + vX_[457]);
    vX_[361] = (- vX_[11]) * x_in[9];
    vX_[123] = vX_[15] * x_in[9];
    vX_[362] = (- vX_[16]) * x_in[9];
    vX_[132] = vX_[34] * x_in[9];
    vX_[346] = vX_[19] * vX_[34] + vX_[11] * vX_[35] - (vX_[23] * vX_[16] + vX_[15] * vX_[17]);
    vX_[197] = -0.214708623208 * vX_[59] + -0.008248334 * vX_[386] + -0.0054876483 * (0 - vX_[312]) + vX_[38] * vX_[398] + vX_[89] * vX_[457] + -1 * (vX_[197] + (vX_[244] * vX_[177]) / vX_[244]) + vX_[284] * vX_[361] + vX_[324] * vX_[123] + vX_[321] * vX_[362] + vX_[300] * vX_[132] + (vX_[320] * vX_[298]) / vX_[295] - 0.088844724872 * vX_[346] - -0.038245722 * vX_[32] - -0.004377257 * vX_[55];
    vX_[314] = - vX_[314];
    vX_[346] = 0.126729164208 * vX_[346] + -0.214708623208 * vX_[314] + -0.034629177 * vX_[386] + -0.0054876483 * vX_[55] + vX_[28] * vX_[368] + vX_[26] * vX_[380] + vX_[324] * vX_[361] + vX_[294] * vX_[123] + vX_[305] * vX_[362] + vX_[335] * vX_[132] + (vX_[301] * vX_[298]) / vX_[295] - -0.008248334 * vX_[32] - -0.004377257 * (0 - vX_[391]);
    vX_[314] = -3.228604 * vX_[314] + 0.088844724872 * vX_[55] + -0.214708623208 * vX_[386] + -1 * vX_[60] + vX_[321] * vX_[361] + vX_[305] * vX_[123] + vX_[309] * vX_[362] + vX_[339] * vX_[132] + (vX_[303] * vX_[298]) / vX_[295] - 0.126729164208 * vX_[312];
    vX_[457] = 3.228604 * vX_[59] + -0.214708623208 * vX_[32] + 0.126729164208 * vX_[55] + vX_[39] * vX_[398] + vX_[26] * vX_[457] + vX_[300] * vX_[361] + vX_[335] * vX_[123] + vX_[339] * vX_[362] + vX_[349] * vX_[132] + (vX_[333] * vX_[298]) / vX_[295] - 0.088844724872 * vX_[391];
    vX_[398] = 0.010261103 * vX_[9] - 0.0007689361 * vX_[5] - vX_[15] * vX_[197] - vX_[11] * vX_[346] - vX_[34] * vX_[314] - vX_[16] * vX_[457];
    jac[119] = (0 - vX_[0] * (-0.003983359 * vX_[9] + 0.010261103 * vX_[253] + -1 * (vX_[385] + (vX_[295] * vX_[298]) / vX_[295]) + vX_[356] * vX_[419] + vX_[359] * vX_[9] + (0.0007689361 * vX_[398]) / vX_[354] - 0.018031479 * vX_[5]) - vX_[4] * (-0.001589293 * vX_[9] + vX_[20] * vX_[197] + vX_[15] * vX_[346] + vX_[30] * vX_[314] + vX_[12] * vX_[457] + vX_[359] * vX_[419] + vX_[353] * vX_[9] + (vX_[358] * vX_[398]) / vX_[354] - -0.003983359 * vX_[5] - 0.0007689361 * vX_[253])) / vX_[451];
    vX_[419] = vX_[0] * jac[119] + vX_[419];
    vX_[9] = vX_[4] * jac[119] + vX_[9];
    jac[120] = (vX_[398] - 0.0007689361 * vX_[419] - vX_[358] * vX_[9]) / vX_[354];
    vX_[419] = -1 * vX_[419];
    vX_[361] = vX_[15] * jac[120] + vX_[20] * vX_[9] + vX_[361];
    vX_[123] = vX_[11] * jac[120] + vX_[15] * vX_[9] + vX_[123];
    vX_[362] = vX_[34] * jac[120] + vX_[30] * vX_[9] + vX_[362];
    vX_[9] = vX_[16] * jac[120] + vX_[12] * vX_[9] + vX_[132];
    jac[121] = (vX_[298] - vX_[295] * vX_[419] - vX_[320] * vX_[361] - vX_[301] * vX_[123] - vX_[303] * vX_[362] - vX_[333] * vX_[9]) / vX_[295];
    vX_[298] = -1 * vX_[361];
    vX_[419] = vX_[419] + jac[121];
    vX_[161] = vX_[26] * vX_[419] + vX_[28] * vX_[123] + vX_[161];
    vX_[123] = vX_[27] * vX_[419] + vX_[26] * vX_[123] + vX_[285];
    vX_[419] = -0.0825 * vX_[419] + -1 * vX_[362];
    vX_[467] = vX_[39] * vX_[9] + vX_[38] * vX_[361] + vX_[467];
    vX_[9] = vX_[26] * vX_[9] + vX_[89] * vX_[361] + vX_[231];
    jac[122] = (vX_[177] - vX_[244] * vX_[298] - vX_[227] * vX_[161] - vX_[249] * vX_[123] - vX_[224] * vX_[419] - vX_[255] * vX_[467] - vX_[267] * vX_[9]) / vX_[244];
    vX_[298] = vX_[298] + jac[122];
    vX_[180] = vX_[101] * vX_[298] + vX_[95] * vX_[123] + vX_[180];
    vX_[166] = vX_[95] * vX_[298] + vX_[83] * vX_[123] + vX_[166];
    vX_[467] = -0.0825 * vX_[298] + vX_[467];
    vX_[400] = vX_[108] * vX_[298] + vX_[109] * vX_[161] + vX_[110] * vX_[123] + vX_[111] * vX_[419] + vX_[85] * vX_[9] + vX_[400];
    vX_[298] = vX_[84] * vX_[298] + vX_[86] * vX_[161] + vX_[87] * vX_[123] + vX_[88] * vX_[419] + vX_[83] * vX_[9] + vX_[383];
    jac[123] = (vX_[275] - vX_[81] * vX_[161] - 0.002164052 * vX_[180] - vX_[187] * vX_[166] - vX_[215] * vX_[467] - vX_[182] * vX_[400] - vX_[199] * vX_[298]) / vX_[81];
    vX_[180] = -1 * vX_[180];
    vX_[161] = vX_[161] + jac[123];
    vX_[438] = vX_[70] * vX_[161] + vX_[106] * vX_[166] + vX_[438];
    vX_[161] = vX_[49] * vX_[161] + vX_[70] * vX_[166] + vX_[448];
    vX_[400] = -1 * vX_[400];
    vX_[306] = vX_[49] * vX_[467] + vX_[70] * vX_[298] + vX_[306];
    jac[124] = (vX_[245] - vX_[68] * vX_[180] - vX_[75] * vX_[438] - vX_[67] * vX_[161] - vX_[94] * vX_[400] - vX_[163] * (vX_[70] * vX_[467] + vX_[106] * vX_[298] + vX_[277]) - vX_[171] * vX_[306]) / vX_[68];
    vX_[180] = vX_[180] + jac[124];
    jac[125] = (vX_[160] - 0.0049096523 * -1 * vX_[438] - -0.0005483591 * (vX_[50] * vX_[180] + vX_[66] * vX_[161] + vX_[384]) - -0.0016724827 * (vX_[53] * vX_[180] + vX_[50] * vX_[161] + vX_[351]) - 0.007735484874 * (vX_[50] * vX_[400] + vX_[148] * vX_[306] + vX_[127] * vX_[438] + vX_[22]) - 0.003127439544 * (vX_[53] * vX_[400] + vX_[50] * vX_[306] + vX_[54] * vX_[438] + vX_[264])) / 0.0049096523;
    vX_[180] = vX_[29] * -0.0825 + vX_[26] * vX_[36];
    vX_[306] = vX_[26] * vX_[37];
    vX_[400] = vX_[46] * vX_[27] + vX_[27] * vX_[46];
    vX_[161] = vX_[86] * vX_[26] + vX_[87] * vX_[27] + vX_[88] * -0.0825;
    vX_[438] = vX_[82] * vX_[161] + vX_[26] * vX_[93];
    vX_[160] = vX_[83] * vX_[27];
    vX_[264] = vX_[160] * vX_[99];
    vX_[22] = vX_[95] * vX_[27];
    vX_[351] = vX_[96] * vX_[22] + vX_[160] * vX_[103];
    vX_[384] = vX_[96] * vX_[26] + vX_[160] * vX_[82];
    vX_[298] = vX_[109] * vX_[26] + vX_[110] * vX_[27] + vX_[111] * -0.0825;
    vX_[467] = -1 * vX_[298];
    vX_[245] = vX_[106] * vX_[160] + vX_[70] * vX_[26];
    vX_[277] = vX_[106] * vX_[161];
    vX_[166] = -1 * vX_[22];
    vX_[448] = vX_[107] * vX_[467] + vX_[245] * vX_[116] - (vX_[117] * vX_[277] + vX_[166] * vX_[120]);
    vX_[275] = vX_[107] * vX_[166] + vX_[245] * vX_[117];
    vX_[9] = vX_[117] * vX_[166] + vX_[166] * vX_[117];
    vX_[419] = vX_[70] * vX_[160] + vX_[49] * vX_[26];
    vX_[123] = vX_[124] * vX_[419] + vX_[419] * vX_[124];
    vX_[383] = -0.088 * vX_[166] + -1 * vX_[277];
    vX_[177] = vX_[50] * vX_[419] + vX_[53] * vX_[166];
    vX_[361] = vX_[128] * vX_[383] + vX_[177] * vX_[131];
    vX_[231] = vX_[70] * vX_[161];
    vX_[362] = vX_[53] * vX_[467] + vX_[50] * vX_[231] + vX_[54] * vX_[245];
    vX_[285] = -1 * vX_[245];
    vX_[132] = vX_[133] * vX_[362] + vX_[285] * vX_[138];
    vX_[398] = vX_[361] - vX_[132];
    vX_[457] = vX_[66] * vX_[419] + vX_[50] * vX_[166];
    vX_[314] = vX_[128] * vX_[457] + vX_[177] * vX_[142];
    vX_[346] = vX_[142] * vX_[285] + vX_[457] * vX_[133];
    vX_[197] = (- vX_[177]) * x_in[13];
    vX_[385] = vX_[457] * x_in[13];
    vX_[253] = (- vX_[362]) * x_in[13];
    vX_[353] = vX_[50] * vX_[467] + vX_[148] * vX_[231] + vX_[127] * vX_[245];
    vX_[359] = vX_[353] * x_in[13];
    vX_[356] = vX_[128] * vX_[285] + vX_[177] * vX_[133];
    vX_[383] = vX_[142] * vX_[383] + vX_[457] * vX_[131] - (vX_[133] * vX_[353] + vX_[285] * vX_[152]);
    vX_[5] = vX_[142] * vX_[457] + vX_[457] * vX_[142];
    vX_[391] = vX_[128] * vX_[177] + vX_[177] * vX_[128];
    vX_[132] = 0.007735484874 * (vX_[132] - vX_[361]) + -0.002420945 * vX_[314] + -0.0005483591 * vX_[356] - -0.003127439544 * vX_[383] - -0.0016724827 * vX_[346] - -0.0003951087 * (vX_[5] - vX_[391]);
    vX_[361] = 0 - vX_[132];
    vX_[285] = vX_[133] * vX_[285] + vX_[285] * vX_[133];
    vX_[59] = -0.735522 * vX_[398] + 0.007735484874 * vX_[314] + 0.045305948634 * vX_[346] + 0.000863976360112152 * vX_[197] + -0.0426708405168984 * vX_[385] + 0.72333422730663 * vX_[253] + -0.00492748973017121 * vX_[359] + (0.007735484874 * vX_[361]) / 0.0049096523 - -0.003127439544 * (vX_[285] + vX_[391]);
    vX_[32] = 0.735522 * vX_[383] + 0.045305948634 * vX_[356] + -0.003127439544 * vX_[314] + 0.0456552523787178 * vX_[197] + 0.00106536842387716 * vX_[385] + -0.00492748973017121 * vX_[253] + 0.733529826725046 * vX_[359] + (0.003127439544 * vX_[361]) / 0.0049096523 - 0.007735484874 * (vX_[285] + vX_[5]);
    vX_[55] = (- vX_[419]) * x_in[12];
    vX_[312] = vX_[245] * x_in[12];
    vX_[386] = (- vX_[231]) * x_in[12];
    vX_[60] = vX_[277] * x_in[12];
    vX_[380] = vX_[117] * vX_[231] + vX_[166] * vX_[137];
    vX_[467] = vX_[124] * vX_[467] + vX_[419] * vX_[116];
    vX_[368] = vX_[124] * vX_[245] + vX_[419] * vX_[107];
    vX_[166] = vX_[124] * vX_[166] + vX_[419] * vX_[117];
    vX_[353] = vX_[128] * vX_[353] + vX_[177] * vX_[152] - (vX_[142] * vX_[362] + vX_[457] * vX_[138]);
    vX_[383] = 0.045305948634 * vX_[383] + -0.0003951087 * vX_[346] + -0.0016724827 * (vX_[285] - vX_[391]) + 0.0128378177682551 * vX_[197] + -0.000581908304553986 * vX_[385] + 0.000863976360112152 * vX_[253] + 0.0456552523787178 * vX_[359] + (-0.0005483591 * vX_[361]) / 0.0049096523 - 0.007735484874 * vX_[353] - -0.0104103567 * vX_[356] - -0.0005483591 * vX_[314];
    vX_[285] = -0.003127439544 * vX_[353] + 0.045305948634 * vX_[398] + -0.0079894117 * vX_[346] + -0.0016724827 * vX_[314] + -0.000581908304553986 * vX_[197] + 0.0147502744829958 * vX_[385] + -0.0426708405168984 * vX_[253] + 0.00106536842387716 * vX_[359] + (-0.0016724827 * vX_[361]) / 0.0049096523 - -0.0003951087 * vX_[356] - -0.0005483591 * (vX_[285] - vX_[5]);
    vX_[353] = 0.735522 * vX_[353] + 0.007735484874 * vX_[356] + -0.003127439544 * vX_[346] + -0.007735484874 * vX_[197] + -0.003127439544 * vX_[385] - 0.045305948634 * (vX_[5] + vX_[391]);
    vX_[391] = vX_[107] * vX_[245] + vX_[245] * vX_[107];
    vX_[5] = 0.100241616695 * (vX_[380] - vX_[467]) + 0.0080873057 * vX_[368] + 9.3569106e-05 * vX_[166] + vX_[50] * vX_[383] + vX_[53] * vX_[285] + -0.088 * vX_[353] - -0.023526756935 * vX_[448] - -0.000103758764 * vX_[275] - 0.0015241109 * (vX_[391] - vX_[123]);
    vX_[356] = 0 - vX_[5];
    vX_[231] = vX_[124] * vX_[277] + vX_[419] * vX_[120] - (vX_[107] * vX_[231] + vX_[245] * vX_[137]);
    vX_[132] = -0.017527158935 * vX_[448] + 0.0015241109 * vX_[275] + -0.000103758764 * (vX_[9] - vX_[123]) + vX_[127] * vX_[59] + vX_[54] * vX_[32] + -1 * (vX_[132] + (0.0049096523 * vX_[361]) / 0.0049096523) + vX_[58] * vX_[55] + vX_[77] * vX_[312] + vX_[165] * vX_[386] + vX_[173] * vX_[60] + (vX_[75] * vX_[356]) / vX_[68] - 0.100241616695 * vX_[231] - 0.0093141007 * vX_[166] - 9.3569106e-05 * vX_[368];
    vX_[467] = vX_[467] - vX_[380];
    vX_[285] = -0.023526756935 * vX_[231] + -0.017527158935 * vX_[467] + 0.001226795 * vX_[275] + -0.000103758764 * vX_[368] + vX_[66] * vX_[383] + vX_[50] * vX_[285] + vX_[77] * vX_[55] + vX_[65] * vX_[312] + vX_[168] * vX_[386] + vX_[118] * vX_[60] + (vX_[67] * vX_[356]) / vX_[68] - 0.0015241109 * vX_[166] - 9.3569106e-05 * (vX_[9] - vX_[391]);
    vX_[383] = vX_[22] * vX_[99] - (vX_[82] * vX_[298] + vX_[26] * vX_[115]);
    vX_[380] = vX_[103] * vX_[26] + vX_[22] * vX_[82];
    vX_[419] = vX_[103] * vX_[22] + vX_[22] * vX_[103];
    vX_[277] = vX_[96] * vX_[160] + vX_[160] * vX_[96];
    vX_[245] = -0.014653732538 * (vX_[438] - vX_[264]) + -0.0079672 * vX_[351] + 0.002164052 * vX_[384] + vX_[70] * vX_[132] + vX_[49] * vX_[285] - 0.05034347249 * vX_[383] - -0.0046002455 * vX_[380] - -0.0015152446 * (vX_[419] - vX_[277]);
    vX_[346] = 0 - vX_[245];
    vX_[264] = vX_[264] - vX_[438];
    vX_[438] = (- vX_[160]) * x_in[11];
    vX_[314] = vX_[22] * x_in[11];
    vX_[398] = (- vX_[161]) * x_in[11];
    vX_[457] = vX_[298] * x_in[11];
    vX_[362] = vX_[82] * vX_[26] + vX_[26] * vX_[82];
    vX_[231] = -1.225946 * vX_[264] + -0.014653732538 * vX_[351] + -0.047121686402 * vX_[380] + -1 * (1.666555 * vX_[231] + 0.100241616695 * vX_[166] + -0.023526756935 * vX_[275] + vX_[50] * vX_[59] + vX_[53] * vX_[32] + vX_[162] * vX_[55] + vX_[135] * vX_[312] + vX_[130] * vX_[386] + vX_[179] * vX_[60] + (vX_[94] * vX_[356]) / vX_[68] - -0.017527158935 * (vX_[391] + vX_[123])) + vX_[184] * vX_[438] + vX_[188] * vX_[314] + vX_[192] * vX_[398] + vX_[200] * vX_[457] + (vX_[182] * vX_[346]) / vX_[81] - 0.05034347249 * (vX_[362] + vX_[277]);
    vX_[467] = -1.666555 * vX_[467] + 0.100241616695 * vX_[368] + -0.017527158935 * vX_[275] + -1 * vX_[353] + vX_[165] * vX_[55] + vX_[168] * vX_[312] + vX_[203] * vX_[386] + vX_[204] * vX_[60] + (vX_[163] * vX_[356]) / vX_[68] - -0.023526756935 * (vX_[9] + vX_[123]);
    vX_[391] = 1.666555 * vX_[448] + -0.017527158935 * vX_[166] + -0.023526756935 * vX_[368] + vX_[148] * vX_[59] + vX_[50] * vX_[32] + vX_[173] * vX_[55] + vX_[118] * vX_[312] + vX_[204] * vX_[386] + vX_[190] * vX_[60] + (vX_[171] * vX_[356]) / vX_[68] - 0.100241616695 * (vX_[9] + vX_[391]);
    vX_[166] = 1.225946 * vX_[383] + -0.047121686402 * vX_[384] + 0.05034347249 * vX_[351] + vX_[106] * vX_[467] + vX_[70] * vX_[391] + vX_[186] * vX_[438] + vX_[121] * vX_[314] + vX_[200] * vX_[398] + vX_[207] * vX_[457] + (vX_[199] * vX_[346]) / vX_[81] - -0.014653732538 * (vX_[362] + vX_[419]);
    vX_[368] = (- vX_[27]) * x_in[10];
    vX_[32] = vX_[26] * x_in[10];
    vX_[36] = vX_[46] * -0.0825 + vX_[27] * vX_[36];
    vX_[59] = vX_[46] * vX_[26] + vX_[27] * vX_[29];
    vX_[9] = vX_[27] * vX_[37];
    vX_[298] = vX_[96] * vX_[298] + vX_[160] * vX_[115] - (vX_[103] * vX_[161] + vX_[22] * vX_[93]);
    vX_[383] = -0.047121686402 * vX_[383] + -0.0015152446 * vX_[380] + -0.0046002455 * (vX_[362] - vX_[277]) + -1 * (vX_[5] + (vX_[68] * vX_[356]) / vX_[68]) + vX_[238] * vX_[438] + vX_[234] * vX_[314] + vX_[184] * vX_[398] + vX_[186] * vX_[457] + (0.002164052 * vX_[346]) / vX_[81] - -0.014653732538 * vX_[298] - -0.0285580595 * vX_[384] - 0.002164052 * vX_[351];
    vX_[362] = 0.05034347249 * vX_[298] + -0.047121686402 * vX_[264] + -0.0205908595 * vX_[380] + -0.0046002455 * vX_[351] + vX_[106] * vX_[132] + vX_[70] * vX_[285] + vX_[234] * vX_[438] + vX_[80] * vX_[314] + vX_[188] * vX_[398] + vX_[121] * vX_[457] + (vX_[187] * vX_[346]) / vX_[81] - -0.0015152446 * vX_[384] - 0.002164052 * (vX_[362] - vX_[419]);
    vX_[298] = 1.225946 * vX_[298] + -0.014653732538 * vX_[384] + 0.05034347249 * vX_[380] + vX_[70] * vX_[467] + vX_[49] * vX_[391] + vX_[181] * vX_[438] + vX_[230] * vX_[314] + vX_[220] * vX_[398] + vX_[217] * vX_[457] + (vX_[215] * vX_[346]) / vX_[81] - -0.047121686402 * (vX_[419] + vX_[277]);
    vX_[391] = vX_[29] * vX_[26] + vX_[26] * vX_[29];
    vX_[467] = -0.19076837715 * (0 - vX_[36]) + -0.035277844 * vX_[59] + -0.0016444875 * vX_[9] + vX_[101] * vX_[383] + vX_[95] * vX_[362] + -0.0825 * vX_[298] + vX_[108] * vX_[231] + vX_[84] * vX_[166] - 0.374644408005 * vX_[180] - 0.003905355 * vX_[306] - 0.027715843 * (vX_[391] - vX_[400]);
    vX_[277] = 0 - vX_[467];
    vX_[419] = vX_[27] * vX_[42] - vX_[26] * vX_[92];
    vX_[245] = 0.09850206933 * vX_[180] + 0.027715843 * vX_[306] + 0.003905355 * (0 - vX_[400]) + (vX_[81] * vX_[346]) / vX_[81] + vX_[245] + vX_[109] * vX_[231] + vX_[86] * vX_[166] + vX_[246] * vX_[368] + vX_[250] * vX_[32] + (vX_[227] * vX_[277]) / vX_[244] - -0.19076837715 * vX_[419] - 0.00990887600000001 * vX_[9] - -0.0016444875 * vX_[59];
    vX_[362] = 0.374644408005 * vX_[419] + 0.09850206933 * vX_[36] + 0.04518672 * vX_[306] + 0.003905355 * vX_[59] + vX_[95] * vX_[383] + vX_[83] * vX_[362] + vX_[110] * vX_[231] + vX_[87] * vX_[166] + vX_[250] * vX_[368] + vX_[243] * vX_[32] + (vX_[249] * vX_[277]) / vX_[244] - 0.027715843 * vX_[9] - -0.0016444875 * (0 - vX_[391]);
    vX_[419] = 3.587895 * vX_[419] + -0.19076837715 * vX_[9] + 0.374644408005 * vX_[306] + vX_[111] * vX_[231] + vX_[88] * vX_[166] + vX_[254] * vX_[368] + vX_[33] * vX_[32] + (vX_[224] * vX_[277]) / vX_[244] - 0.09850206933 * (vX_[391] + vX_[400]);
    vX_[383] = - vX_[35];
    vX_[380] = 0.088844724872 * vX_[17] + -0.004377257 * vX_[19] + vX_[26] * vX_[245] + vX_[27] * vX_[362] + -0.0825 * vX_[419] - 0.126729164208 * vX_[383] - -0.0054876483 * vX_[23];
    vX_[384] = 0 - vX_[380];
    vX_[10] = vX_[10] + vX_[10];
    vX_[298] = -3.587895 * vX_[36] + -0.19076837715 * vX_[59] + 0.09850206933 * vX_[306] + vX_[298] + vX_[257] * vX_[368] + vX_[260] * vX_[32] + (vX_[255] * vX_[277]) / vX_[244] - 0.374644408005 * vX_[400];
    vX_[391] = 3.587895 * vX_[180] + 0.09850206933 * vX_[9] + 0.374644408005 * vX_[59] + vX_[85] * vX_[231] + vX_[83] * vX_[166] + vX_[269] * vX_[368] + vX_[40] * vX_[32] + (vX_[267] * vX_[277]) / vX_[244] - -0.19076837715 * vX_[391];
    vX_[467] = -0.214708623208 * vX_[383] + -0.008248334 * vX_[23] + -0.0054876483 * vX_[10] + vX_[38] * vX_[298] + vX_[89] * vX_[391] + -1 * (vX_[467] + (vX_[244] * vX_[277]) / vX_[244]) + vX_[284] * vX_[405] + vX_[324] * vX_[23] + vX_[321] * vX_[143] + vX_[300] * vX_[35] + (vX_[320] * vX_[384]) / vX_[295] - -0.038245722 * vX_[19];
    vX_[17] = - vX_[17];
    vX_[362] = -0.214708623208 * vX_[17] + -0.034629177 * vX_[23] + vX_[28] * vX_[245] + vX_[26] * vX_[362] + vX_[324] * vX_[405] + vX_[294] * vX_[23] + vX_[305] * vX_[143] + vX_[335] * vX_[35] + (vX_[301] * vX_[384]) / vX_[295] - -0.008248334 * vX_[19] - -0.004377257 * vX_[10];
    vX_[17] = -3.228604 * vX_[17] + -0.214708623208 * vX_[23] + -1 * vX_[419] + vX_[321] * vX_[405] + vX_[305] * vX_[23] + vX_[309] * vX_[143] + vX_[339] * vX_[35] + (vX_[303] * vX_[384]) / vX_[295] - 0.126729164208 * vX_[10];
    vX_[391] = 3.228604 * vX_[383] + -0.214708623208 * vX_[19] + vX_[39] * vX_[298] + vX_[26] * vX_[391] + vX_[300] * vX_[405] + vX_[335] * vX_[23] + vX_[339] * vX_[143] + vX_[349] * vX_[35] + (vX_[333] * vX_[384]) / vX_[295] - 0.088844724872 * vX_[10];
    vX_[298] = 0 - vX_[15] * vX_[467] - vX_[11] * vX_[362] - vX_[34] * vX_[17] - vX_[16] * vX_[391];
    jac[133] = (0 - vX_[0] * (-1 * (vX_[380] + (vX_[295] * vX_[384]) / vX_[295]) + (0.0007689361 * vX_[298]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[467] + vX_[15] * vX_[362] + vX_[30] * vX_[17] + vX_[12] * vX_[391] + (vX_[358] * vX_[298]) / vX_[354])) / vX_[451];
    vX_[391] = vX_[0] * jac[133];
    vX_[17] = vX_[4] * jac[133];
    jac[134] = (vX_[298] - 0.0007689361 * vX_[391] - vX_[358] * vX_[17]) / vX_[354];
    vX_[391] = -1 * vX_[391];
    vX_[405] = vX_[15] * jac[134] + vX_[20] * vX_[17] + vX_[405];
    vX_[23] = vX_[11] * jac[134] + vX_[15] * vX_[17] + vX_[23];
    vX_[143] = vX_[34] * jac[134] + vX_[30] * vX_[17] + vX_[143];
    vX_[17] = vX_[16] * jac[134] + vX_[12] * vX_[17] + vX_[35];
    jac[135] = (vX_[384] - vX_[295] * vX_[391] - vX_[320] * vX_[405] - vX_[301] * vX_[23] - vX_[303] * vX_[143] - vX_[333] * vX_[17]) / vX_[295];
    vX_[384] = -1 * vX_[405];
    vX_[391] = vX_[391] + jac[135];
    vX_[368] = vX_[26] * vX_[391] + vX_[28] * vX_[23] + vX_[368];
    vX_[23] = vX_[27] * vX_[391] + vX_[26] * vX_[23] + vX_[32];
    vX_[391] = -0.0825 * vX_[391] + -1 * vX_[143];
    vX_[143] = vX_[39] * vX_[17] + vX_[38] * vX_[405];
    vX_[17] = vX_[26] * vX_[17] + vX_[89] * vX_[405];
    jac[136] = (vX_[277] - vX_[244] * vX_[384] - vX_[227] * vX_[368] - vX_[249] * vX_[23] - vX_[224] * vX_[391] - vX_[255] * vX_[143] - vX_[267] * vX_[17]) / vX_[244];
    vX_[384] = vX_[384] + jac[136];
    vX_[438] = vX_[101] * vX_[384] + vX_[95] * vX_[23] + vX_[438];
    vX_[314] = vX_[95] * vX_[384] + vX_[83] * vX_[23] + vX_[314];
    vX_[143] = -0.0825 * vX_[384] + vX_[143];
    vX_[398] = vX_[108] * vX_[384] + vX_[109] * vX_[368] + vX_[110] * vX_[23] + vX_[111] * vX_[391] + vX_[85] * vX_[17] + vX_[398];
    vX_[384] = vX_[84] * vX_[384] + vX_[86] * vX_[368] + vX_[87] * vX_[23] + vX_[88] * vX_[391] + vX_[83] * vX_[17] + vX_[457];
    jac[137] = (vX_[346] - vX_[81] * vX_[368] - 0.002164052 * vX_[438] - vX_[187] * vX_[314] - vX_[215] * vX_[143] - vX_[182] * vX_[398] - vX_[199] * vX_[384]) / vX_[81];
    vX_[438] = -1 * vX_[438];
    vX_[368] = vX_[368] + jac[137];
    vX_[55] = vX_[70] * vX_[368] + vX_[106] * vX_[314] + vX_[55];
    vX_[368] = vX_[49] * vX_[368] + vX_[70] * vX_[314] + vX_[312];
    vX_[398] = -1 * vX_[398];
    vX_[60] = vX_[49] * vX_[143] + vX_[70] * vX_[384] + vX_[60];
    jac[138] = (vX_[356] - vX_[68] * vX_[438] - vX_[75] * vX_[55] - vX_[67] * vX_[368] - vX_[94] * vX_[398] - vX_[163] * (vX_[70] * vX_[143] + vX_[106] * vX_[384] + vX_[386]) - vX_[171] * vX_[60]) / vX_[68];
    vX_[438] = vX_[438] + jac[138];
    jac[139] = (vX_[361] - 0.0049096523 * -1 * vX_[55] - -0.0005483591 * (vX_[50] * vX_[438] + vX_[66] * vX_[368] + vX_[197]) - -0.0016724827 * (vX_[53] * vX_[438] + vX_[50] * vX_[368] + vX_[385]) - 0.007735484874 * (vX_[50] * vX_[398] + vX_[148] * vX_[60] + vX_[127] * vX_[55] + vX_[253]) - 0.003127439544 * (vX_[53] * vX_[398] + vX_[50] * vX_[60] + vX_[54] * vX_[55] + vX_[359])) / 0.0049096523;
    vX_[438] = 0 - vX_[42];
    vX_[37] = vX_[37] + vX_[37];
    vX_[60] = vX_[82] * vX_[84];
    vX_[398] = vX_[96] * -0.0825 + vX_[95] * vX_[99];
    vX_[368] = vX_[96] * vX_[101] + vX_[95] * vX_[103];
    vX_[55] = vX_[95] * vX_[82];
    vX_[361] = -1 * vX_[108];
    vX_[359] = vX_[106] * vX_[95];
    vX_[253] = vX_[106] * vX_[84] + vX_[70] * -0.0825;
    vX_[385] = -1 * vX_[101];
    vX_[197] = vX_[107] * vX_[361] + vX_[359] * vX_[116] - (vX_[117] * vX_[253] + vX_[385] * vX_[120]);
    vX_[384] = vX_[107] * vX_[385] + vX_[359] * vX_[117];
    vX_[143] = vX_[117] * vX_[385] + vX_[385] * vX_[117];
    vX_[356] = vX_[70] * vX_[95];
    vX_[386] = vX_[124] * vX_[356] + vX_[356] * vX_[124];
    vX_[314] = -0.088 * vX_[385] + -1 * vX_[253];
    vX_[312] = vX_[50] * vX_[356] + vX_[53] * vX_[385];
    vX_[346] = vX_[128] * vX_[314] + vX_[312] * vX_[131];
    vX_[17] = vX_[70] * vX_[84] + vX_[49] * -0.0825;
    vX_[391] = vX_[53] * vX_[361] + vX_[50] * vX_[17] + vX_[54] * vX_[359];
    vX_[23] = -1 * vX_[359];
    vX_[457] = vX_[133] * vX_[391] + vX_[23] * vX_[138];
    vX_[277] = vX_[346] - vX_[457];
    vX_[405] = vX_[66] * vX_[356] + vX_[50] * vX_[385];
    vX_[32] = vX_[128] * vX_[405] + vX_[312] * vX_[142];
    vX_[35] = vX_[142] * vX_[23] + vX_[405] * vX_[133];
    vX_[298] = (- vX_[312]) * x_in[13];
    vX_[362] = vX_[405] * x_in[13];
    vX_[467] = (- vX_[391]) * x_in[13];
    vX_[380] = vX_[50] * vX_[361] + vX_[148] * vX_[17] + vX_[127] * vX_[359];
    vX_[10] = vX_[380] * x_in[13];
    vX_[383] = vX_[128] * vX_[23] + vX_[312] * vX_[133];
    vX_[314] = vX_[142] * vX_[314] + vX_[405] * vX_[131] - (vX_[133] * vX_[380] + vX_[23] * vX_[152]);
    vX_[349] = vX_[142] * vX_[405] + vX_[405] * vX_[142];
    vX_[300] = vX_[128] * vX_[312] + vX_[312] * vX_[128];
    vX_[457] = 0.007735484874 * (vX_[457] - vX_[346]) + -0.002420945 * vX_[32] + -0.0005483591 * vX_[383] - -0.003127439544 * vX_[314] - -0.0016724827 * vX_[35] - -0.0003951087 * (vX_[349] - vX_[300]);
    vX_[346] = 0 - vX_[457];
    vX_[23] = vX_[133] * vX_[23] + vX_[23] * vX_[133];
    vX_[339] = -0.735522 * vX_[277] + 0.007735484874 * vX_[32] + 0.045305948634 * vX_[35] + 0.000863976360112152 * vX_[298] + -0.0426708405168984 * vX_[362] + 0.72333422730663 * vX_[467] + -0.00492748973017121 * vX_[10] + (0.007735484874 * vX_[346]) / 0.0049096523 - -0.003127439544 * (vX_[23] + vX_[300]);
    vX_[335] = 0.735522 * vX_[314] + 0.045305948634 * vX_[383] + -0.003127439544 * vX_[32] + 0.0456552523787178 * vX_[298] + 0.00106536842387716 * vX_[362] + -0.00492748973017121 * vX_[467] + 0.733529826725046 * vX_[10] + (0.003127439544 * vX_[346]) / 0.0049096523 - 0.007735484874 * (vX_[23] + vX_[349]);
    vX_[19] = (- vX_[356]) * x_in[12];
    vX_[419] = vX_[359] * x_in[12];
    vX_[321] = (- vX_[17]) * x_in[12];
    vX_[309] = vX_[253] * x_in[12];
    vX_[305] = vX_[117] * vX_[17] + vX_[385] * vX_[137];
    vX_[361] = vX_[124] * vX_[361] + vX_[356] * vX_[116];
    vX_[245] = vX_[124] * vX_[359] + vX_[356] * vX_[107];
    vX_[385] = vX_[124] * vX_[385] + vX_[356] * vX_[117];
    vX_[380] = vX_[128] * vX_[380] + vX_[312] * vX_[152] - (vX_[142] * vX_[391] + vX_[405] * vX_[138]);
    vX_[314] = 0.045305948634 * vX_[314] + -0.0003951087 * vX_[35] + -0.0016724827 * (vX_[23] - vX_[300]) + 0.0128378177682551 * vX_[298] + -0.000581908304553986 * vX_[362] + 0.000863976360112152 * vX_[467] + 0.0456552523787178 * vX_[10] + (-0.0005483591 * vX_[346]) / 0.0049096523 - 0.007735484874 * vX_[380] - -0.0104103567 * vX_[383] - -0.0005483591 * vX_[32];
    vX_[23] = -0.003127439544 * vX_[380] + 0.045305948634 * vX_[277] + -0.0079894117 * vX_[35] + -0.0016724827 * vX_[32] + -0.000581908304553986 * vX_[298] + 0.0147502744829958 * vX_[362] + -0.0426708405168984 * vX_[467] + 0.00106536842387716 * vX_[10] + (-0.0016724827 * vX_[346]) / 0.0049096523 - -0.0003951087 * vX_[383] - -0.0005483591 * (vX_[23] - vX_[349]);
    vX_[380] = 0.735522 * vX_[380] + 0.007735484874 * vX_[383] + -0.003127439544 * vX_[35] + -0.007735484874 * vX_[298] + -0.003127439544 * vX_[362] - 0.045305948634 * (vX_[349] + vX_[300]);
    vX_[300] = vX_[107] * vX_[359] + vX_[359] * vX_[107];
    vX_[349] = 0.100241616695 * (vX_[305] - vX_[361]) + 0.0080873057 * vX_[245] + 9.3569106e-05 * vX_[385] + vX_[50] * vX_[314] + vX_[53] * vX_[23] + -0.088 * vX_[380] - -0.023526756935 * vX_[197] - -0.000103758764 * vX_[384] - 0.0015241109 * (vX_[300] - vX_[386]);
    vX_[383] = 0 - vX_[349];
    vX_[17] = vX_[124] * vX_[253] + vX_[356] * vX_[120] - (vX_[107] * vX_[17] + vX_[359] * vX_[137]);
    vX_[457] = -0.017527158935 * vX_[197] + 0.0015241109 * vX_[384] + -0.000103758764 * (vX_[143] - vX_[386]) + vX_[127] * vX_[339] + vX_[54] * vX_[335] + -1 * (vX_[457] + (0.0049096523 * vX_[346]) / 0.0049096523) + vX_[58] * vX_[19] + vX_[77] * vX_[419] + vX_[165] * vX_[321] + vX_[173] * vX_[309] + (vX_[75] * vX_[383]) / vX_[68] - 0.100241616695 * vX_[17] - 0.0093141007 * vX_[385] - 9.3569106e-05 * vX_[245];
    vX_[361] = vX_[361] - vX_[305];
    vX_[23] = -0.023526756935 * vX_[17] + -0.017527158935 * vX_[361] + 0.001226795 * vX_[384] + -0.000103758764 * vX_[245] + vX_[66] * vX_[314] + vX_[50] * vX_[23] + vX_[77] * vX_[19] + vX_[65] * vX_[419] + vX_[168] * vX_[321] + vX_[118] * vX_[309] + (vX_[67] * vX_[383]) / vX_[68] - 0.0015241109 * vX_[385] - 9.3569106e-05 * (vX_[143] - vX_[300]);
    vX_[99] = vX_[103] * -0.0825 + vX_[101] * vX_[99] - vX_[82] * vX_[108];
    vX_[314] = vX_[101] * vX_[82];
    vX_[305] = vX_[103] * vX_[101] + vX_[101] * vX_[103];
    vX_[356] = vX_[96] * vX_[95] + vX_[95] * vX_[96];
    vX_[253] = -0.014653732538 * (vX_[60] - vX_[398]) + -0.0079672 * vX_[368] + 0.002164052 * vX_[55] + vX_[70] * vX_[457] + vX_[49] * vX_[23] - 0.05034347249 * vX_[99] - -0.0046002455 * vX_[314] - -0.0015152446 * (vX_[305] - vX_[356]);
    vX_[359] = 0 - vX_[253];
    vX_[398] = vX_[398] - vX_[60];
    vX_[60] = (- vX_[95]) * x_in[11];
    vX_[35] = vX_[101] * x_in[11];
    vX_[32] = (- vX_[84]) * x_in[11];
    vX_[277] = vX_[108] * x_in[11];
    vX_[17] = -1.225946 * vX_[398] + -0.014653732538 * vX_[368] + -0.047121686402 * vX_[314] + -1 * (1.666555 * vX_[17] + 0.100241616695 * vX_[385] + -0.023526756935 * vX_[384] + vX_[50] * vX_[339] + vX_[53] * vX_[335] + vX_[162] * vX_[19] + vX_[135] * vX_[419] + vX_[130] * vX_[321] + vX_[179] * vX_[309] + (vX_[94] * vX_[383]) / vX_[68] - -0.017527158935 * (vX_[300] + vX_[386])) + vX_[184] * vX_[60] + vX_[188] * vX_[35] + vX_[192] * vX_[32] + vX_[200] * vX_[277] + (vX_[182] * vX_[359]) / vX_[81] - 0.05034347249 * vX_[356];
    vX_[361] = -1.666555 * vX_[361] + 0.100241616695 * vX_[245] + -0.017527158935 * vX_[384] + -1 * vX_[380] + vX_[165] * vX_[19] + vX_[168] * vX_[419] + vX_[203] * vX_[321] + vX_[204] * vX_[309] + (vX_[163] * vX_[383]) / vX_[68] - -0.023526756935 * (vX_[143] + vX_[386]);
    vX_[300] = 1.666555 * vX_[197] + -0.017527158935 * vX_[385] + -0.023526756935 * vX_[245] + vX_[148] * vX_[339] + vX_[50] * vX_[335] + vX_[173] * vX_[19] + vX_[118] * vX_[419] + vX_[204] * vX_[321] + vX_[190] * vX_[309] + (vX_[171] * vX_[383]) / vX_[68] - 0.100241616695 * (vX_[143] + vX_[300]);
    vX_[385] = 1.225946 * vX_[99] + -0.047121686402 * vX_[55] + 0.05034347249 * vX_[368] + vX_[106] * vX_[361] + vX_[70] * vX_[300] + vX_[186] * vX_[60] + vX_[121] * vX_[35] + vX_[200] * vX_[32] + vX_[207] * vX_[277] + (vX_[199] * vX_[359]) / vX_[81] - -0.014653732538 * vX_[305];
    vX_[245] = vX_[96] * vX_[108] + vX_[95] * vX_[115] - (vX_[103] * vX_[84] + vX_[101] * vX_[93]);
    vX_[99] = -0.047121686402 * vX_[99] + -0.0015152446 * vX_[314] + -0.0046002455 * (0 - vX_[356]) + -1 * (vX_[349] + (vX_[68] * vX_[383]) / vX_[68]) + vX_[238] * vX_[60] + vX_[234] * vX_[35] + vX_[184] * vX_[32] + vX_[186] * vX_[277] + (0.002164052 * vX_[359]) / vX_[81] - -0.014653732538 * vX_[245] - -0.0285580595 * vX_[55] - 0.002164052 * vX_[368];
    vX_[398] = 0.05034347249 * vX_[245] + -0.047121686402 * vX_[398] + -0.0205908595 * vX_[314] + -0.0046002455 * vX_[368] + vX_[106] * vX_[457] + vX_[70] * vX_[23] + vX_[234] * vX_[60] + vX_[80] * vX_[35] + vX_[188] * vX_[32] + vX_[121] * vX_[277] + (vX_[187] * vX_[359]) / vX_[81] - -0.0015152446 * vX_[55] - 0.002164052 * (0 - vX_[305]);
    vX_[245] = 1.225946 * vX_[245] + -0.014653732538 * vX_[55] + 0.05034347249 * vX_[314] + vX_[70] * vX_[361] + vX_[49] * vX_[300] + vX_[181] * vX_[60] + vX_[230] * vX_[35] + vX_[220] * vX_[32] + vX_[217] * vX_[277] + (vX_[215] * vX_[359]) / vX_[81] - -0.047121686402 * (vX_[305] + vX_[356]);
    vX_[300] = -0.19076837715 * vX_[92] + -0.0016444875 * vX_[46] + vX_[101] * vX_[99] + vX_[95] * vX_[398] + -0.0825 * vX_[245] + vX_[108] * vX_[17] + vX_[84] * vX_[385] - 0.374644408005 * vX_[438] - 0.003905355 * vX_[29];
    vX_[361] = 0 - vX_[300];
    vX_[253] = 0.09850206933 * vX_[438] + 0.027715843 * vX_[29] + 0.003905355 * vX_[37] + (vX_[81] * vX_[359]) / vX_[81] + vX_[253] + vX_[109] * vX_[17] + vX_[86] * vX_[385] + vX_[246] * vX_[48] + vX_[250] * vX_[29] + vX_[257] * vX_[112] + vX_[269] * vX_[42] + (vX_[227] * vX_[361]) / vX_[244] - 0.00990887600000001 * vX_[46];
    vX_[92] = 0 - vX_[92];
    vX_[398] = 0.09850206933 * vX_[92] + 0.04518672 * vX_[29] + vX_[95] * vX_[99] + vX_[83] * vX_[398] + vX_[110] * vX_[17] + vX_[87] * vX_[385] + vX_[250] * vX_[48] + vX_[243] * vX_[29] + vX_[260] * vX_[112] + vX_[40] * vX_[42] + (vX_[249] * vX_[361]) / vX_[244] - 0.027715843 * vX_[46] - -0.0016444875 * vX_[37];
    vX_[104] = -0.19076837715 * vX_[46] + 0.374644408005 * vX_[29] + vX_[111] * vX_[17] + vX_[88] * vX_[385] + vX_[254] * vX_[48] + vX_[33] * vX_[29] + vX_[129] * vX_[112] + vX_[104] * vX_[42] + (vX_[224] * vX_[361]) / vX_[244];
    vX_[129] = vX_[26] * vX_[253] + vX_[27] * vX_[398] + -0.0825 * vX_[104];
    vX_[33] = 0 - vX_[129];
    vX_[92] = -3.587895 * vX_[92] + 0.09850206933 * vX_[29] + vX_[245] + vX_[257] * vX_[48] + vX_[260] * vX_[29] + vX_[282] * vX_[112] + vX_[280] * vX_[42] + (vX_[255] * vX_[361]) / vX_[244] - 0.374644408005 * vX_[37];
    vX_[385] = 3.587895 * vX_[438] + 0.09850206933 * vX_[46] + vX_[85] * vX_[17] + vX_[83] * vX_[385] + vX_[269] * vX_[48] + vX_[40] * vX_[29] + vX_[280] * vX_[112] + vX_[276] * vX_[42] + (vX_[267] * vX_[361]) / vX_[244] - -0.19076837715 * vX_[37];
    vX_[300] = vX_[38] * vX_[92] + vX_[89] * vX_[385] + -1 * (vX_[300] + (vX_[244] * vX_[361]) / vX_[244]) + (vX_[320] * vX_[33]) / vX_[295];
    vX_[398] = vX_[28] * vX_[253] + vX_[26] * vX_[398] + (vX_[301] * vX_[33]) / vX_[295];
    vX_[104] = -1 * vX_[104] + (vX_[303] * vX_[33]) / vX_[295];
    vX_[385] = vX_[39] * vX_[92] + vX_[26] * vX_[385] + (vX_[333] * vX_[33]) / vX_[295];
    vX_[92] = 0 - vX_[15] * vX_[300] - vX_[11] * vX_[398] - vX_[34] * vX_[104] - vX_[16] * vX_[385];
    jac[147] = (0 - vX_[0] * (-1 * (vX_[129] + (vX_[295] * vX_[33]) / vX_[295]) + (0.0007689361 * vX_[92]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[300] + vX_[15] * vX_[398] + vX_[30] * vX_[104] + vX_[12] * vX_[385] + (vX_[358] * vX_[92]) / vX_[354])) / vX_[451];
    vX_[385] = vX_[0] * jac[147];
    vX_[104] = vX_[4] * jac[147];
    jac[148] = (vX_[92] - 0.0007689361 * vX_[385] - vX_[358] * vX_[104]) / vX_[354];
    vX_[385] = -1 * vX_[385];
    vX_[92] = vX_[15] * jac[148] + vX_[20] * vX_[104];
    vX_[398] = vX_[11] * jac[148] + vX_[15] * vX_[104];
    vX_[300] = vX_[34] * jac[148] + vX_[30] * vX_[104];
    vX_[104] = vX_[16] * jac[148] + vX_[12] * vX_[104];
    jac[149] = (vX_[33] - vX_[295] * vX_[385] - vX_[320] * vX_[92] - vX_[301] * vX_[398] - vX_[303] * vX_[300] - vX_[333] * vX_[104]) / vX_[295];
    vX_[33] = -1 * vX_[92];
    vX_[385] = vX_[385] + jac[149];
    vX_[48] = vX_[26] * vX_[385] + vX_[28] * vX_[398] + vX_[48];
    vX_[398] = vX_[27] * vX_[385] + vX_[26] * vX_[398] + vX_[29];
    vX_[385] = -0.0825 * vX_[385] + -1 * vX_[300];
    vX_[112] = vX_[39] * vX_[104] + vX_[38] * vX_[92] + vX_[112];
    vX_[104] = vX_[26] * vX_[104] + vX_[89] * vX_[92] + vX_[42];
    jac[150] = (vX_[361] - vX_[244] * vX_[33] - vX_[227] * vX_[48] - vX_[249] * vX_[398] - vX_[224] * vX_[385] - vX_[255] * vX_[112] - vX_[267] * vX_[104]) / vX_[244];
    vX_[33] = vX_[33] + jac[150];
    vX_[60] = vX_[101] * vX_[33] + vX_[95] * vX_[398] + vX_[60];
    vX_[35] = vX_[95] * vX_[33] + vX_[83] * vX_[398] + vX_[35];
    vX_[112] = -0.0825 * vX_[33] + vX_[112];
    vX_[32] = vX_[108] * vX_[33] + vX_[109] * vX_[48] + vX_[110] * vX_[398] + vX_[111] * vX_[385] + vX_[85] * vX_[104] + vX_[32];
    vX_[33] = vX_[84] * vX_[33] + vX_[86] * vX_[48] + vX_[87] * vX_[398] + vX_[88] * vX_[385] + vX_[83] * vX_[104] + vX_[277];
    jac[151] = (vX_[359] - vX_[81] * vX_[48] - 0.002164052 * vX_[60] - vX_[187] * vX_[35] - vX_[215] * vX_[112] - vX_[182] * vX_[32] - vX_[199] * vX_[33]) / vX_[81];
    vX_[60] = -1 * vX_[60];
    vX_[48] = vX_[48] + jac[151];
    vX_[19] = vX_[70] * vX_[48] + vX_[106] * vX_[35] + vX_[19];
    vX_[48] = vX_[49] * vX_[48] + vX_[70] * vX_[35] + vX_[419];
    vX_[32] = -1 * vX_[32];
    vX_[309] = vX_[49] * vX_[112] + vX_[70] * vX_[33] + vX_[309];
    jac[152] = (vX_[383] - vX_[68] * vX_[60] - vX_[75] * vX_[19] - vX_[67] * vX_[48] - vX_[94] * vX_[32] - vX_[163] * (vX_[70] * vX_[112] + vX_[106] * vX_[33] + vX_[321]) - vX_[171] * vX_[309]) / vX_[68];
    vX_[60] = vX_[60] + jac[152];
    jac[153] = (vX_[346] - 0.0049096523 * -1 * vX_[19] - -0.0005483591 * (vX_[50] * vX_[60] + vX_[66] * vX_[48] + vX_[298]) - -0.0016724827 * (vX_[53] * vX_[60] + vX_[50] * vX_[48] + vX_[362]) - 0.007735484874 * (vX_[50] * vX_[32] + vX_[148] * vX_[309] + vX_[127] * vX_[19] + vX_[467]) - 0.003127439544 * (vX_[53] * vX_[32] + vX_[50] * vX_[309] + vX_[54] * vX_[19] + vX_[10])) / 0.0049096523;
    vX_[60] = vX_[70] * vX_[116];
    vX_[309] = vX_[70] * vX_[117];
    vX_[32] = vX_[124] * vX_[49] + vX_[49] * vX_[124];
    vX_[48] = vX_[50] * vX_[49];
    vX_[19] = vX_[48] * vX_[131];
    vX_[346] = vX_[54] * vX_[70];
    vX_[10] = -1 * vX_[70];
    vX_[467] = vX_[133] * vX_[346] + vX_[10] * vX_[138];
    vX_[362] = vX_[19] - vX_[467];
    vX_[298] = vX_[66] * vX_[49];
    vX_[33] = vX_[128] * vX_[298] + vX_[48] * vX_[142];
    vX_[112] = vX_[142] * vX_[10] + vX_[298] * vX_[133];
    vX_[383] = (- vX_[48]) * x_in[13];
    vX_[321] = vX_[298] * x_in[13];
    vX_[35] = (- vX_[346]) * x_in[13];
    vX_[419] = vX_[127] * vX_[70];
    vX_[359] = vX_[419] * x_in[13];
    vX_[104] = vX_[128] * vX_[10] + vX_[48] * vX_[133];
    vX_[385] = vX_[298] * vX_[131] - (vX_[133] * vX_[419] + vX_[10] * vX_[152]);
    vX_[398] = vX_[142] * vX_[298] + vX_[298] * vX_[142];
    vX_[277] = vX_[128] * vX_[48] + vX_[48] * vX_[128];
    vX_[467] = 0.007735484874 * (vX_[467] - vX_[19]) + -0.002420945 * vX_[33] + -0.0005483591 * vX_[104] - -0.003127439544 * vX_[385] - -0.0016724827 * vX_[112] - -0.0003951087 * (vX_[398] - vX_[277]);
    vX_[19] = 0 - vX_[467];
    vX_[10] = vX_[133] * vX_[10] + vX_[10] * vX_[133];
    vX_[361] = -0.735522 * vX_[362] + 0.007735484874 * vX_[33] + 0.045305948634 * vX_[112] + 0.000863976360112152 * vX_[383] + -0.0426708405168984 * vX_[321] + 0.72333422730663 * vX_[35] + -0.00492748973017121 * vX_[359] + (0.007735484874 * vX_[19]) / 0.0049096523 - -0.003127439544 * (vX_[10] + vX_[277]);
    vX_[92] = 0.735522 * vX_[385] + 0.045305948634 * vX_[104] + -0.003127439544 * vX_[33] + 0.0456552523787178 * vX_[383] + 0.00106536842387716 * vX_[321] + -0.00492748973017121 * vX_[35] + 0.733529826725046 * vX_[359] + (0.003127439544 * vX_[19]) / 0.0049096523 - 0.007735484874 * (vX_[10] + vX_[398]);
    vX_[42] = (- vX_[49]) * x_in[12];
    vX_[300] = vX_[70] * x_in[12];
    vX_[116] = vX_[49] * vX_[116];
    vX_[29] = vX_[124] * vX_[70] + vX_[49] * vX_[107];
    vX_[129] = vX_[49] * vX_[117];
    vX_[419] = vX_[128] * vX_[419] + vX_[48] * vX_[152] - (vX_[142] * vX_[346] + vX_[298] * vX_[138]);
    vX_[385] = 0.045305948634 * vX_[385] + -0.0003951087 * vX_[112] + -0.0016724827 * (vX_[10] - vX_[277]) + 0.0128378177682551 * vX_[383] + -0.000581908304553986 * vX_[321] + 0.000863976360112152 * vX_[35] + 0.0456552523787178 * vX_[359] + (-0.0005483591 * vX_[19]) / 0.0049096523 - 0.007735484874 * vX_[419] - -0.0104103567 * vX_[104] - -0.0005483591 * vX_[33];
    vX_[10] = -0.003127439544 * vX_[419] + 0.045305948634 * vX_[362] + -0.0079894117 * vX_[112] + -0.0016724827 * vX_[33] + -0.000581908304553986 * vX_[383] + 0.0147502744829958 * vX_[321] + -0.0426708405168984 * vX_[35] + 0.00106536842387716 * vX_[359] + (-0.0016724827 * vX_[19]) / 0.0049096523 - -0.0003951087 * vX_[104] - -0.0005483591 * (vX_[10] - vX_[398]);
    vX_[419] = 0.735522 * vX_[419] + 0.007735484874 * vX_[104] + -0.003127439544 * vX_[112] + -0.007735484874 * vX_[383] + -0.003127439544 * vX_[321] - 0.045305948634 * (vX_[398] + vX_[277]);
    vX_[277] = vX_[107] * vX_[70] + vX_[70] * vX_[107];
    vX_[398] = 0.100241616695 * (0 - vX_[116]) + 0.0080873057 * vX_[29] + 9.3569106e-05 * vX_[129] + vX_[50] * vX_[385] + vX_[53] * vX_[10] + -0.088 * vX_[419] - -0.023526756935 * vX_[60] - -0.000103758764 * vX_[309] - 0.0015241109 * (vX_[277] - vX_[32]);
    vX_[104] = 0 - vX_[398];
    vX_[112] = vX_[49] * vX_[120] - vX_[70] * vX_[137];
    vX_[467] = -0.017527158935 * vX_[60] + 0.0015241109 * vX_[309] + -0.000103758764 * (0 - vX_[32]) + vX_[127] * vX_[361] + vX_[54] * vX_[92] + -1 * (vX_[467] + (0.0049096523 * vX_[19]) / 0.0049096523) + vX_[58] * vX_[42] + vX_[77] * vX_[300] + (vX_[75] * vX_[104]) / vX_[68] - 0.100241616695 * vX_[112] - 0.0093141007 * vX_[129] - 9.3569106e-05 * vX_[29];
    vX_[10] = -0.023526756935 * vX_[112] + -0.017527158935 * vX_[116] + 0.001226795 * vX_[309] + -0.000103758764 * vX_[29] + vX_[66] * vX_[385] + vX_[50] * vX_[10] + vX_[77] * vX_[42] + vX_[65] * vX_[300] + (vX_[67] * vX_[104]) / vX_[68] - 0.0015241109 * vX_[129] - 9.3569106e-05 * (0 - vX_[277]);
    vX_[385] = 0 - vX_[115];
    vX_[33] = -0.014653732538 * vX_[93] + 0.002164052 * vX_[96] + vX_[70] * vX_[467] + vX_[49] * vX_[10] - 0.05034347249 * vX_[385] - -0.0046002455 * vX_[103];
    vX_[362] = 0 - vX_[33];
    vX_[93] = 0 - vX_[93];
    vX_[82] = vX_[82] + vX_[82];
    vX_[112] = -1.225946 * vX_[93] + -0.047121686402 * vX_[103] + -1 * (1.666555 * vX_[112] + 0.100241616695 * vX_[129] + -0.023526756935 * vX_[309] + vX_[50] * vX_[361] + vX_[53] * vX_[92] + vX_[162] * vX_[42] + vX_[135] * vX_[300] + (vX_[94] * vX_[104]) / vX_[68] - -0.017527158935 * (vX_[277] + vX_[32])) + vX_[184] * vX_[392] + vX_[188] * vX_[103] + vX_[192] * vX_[395] + vX_[200] * vX_[115] + (vX_[182] * vX_[362]) / vX_[81] - 0.05034347249 * vX_[82];
    vX_[419] = -1.666555 * vX_[116] + 0.100241616695 * vX_[29] + -0.017527158935 * vX_[309] + -1 * vX_[419] + vX_[165] * vX_[42] + vX_[168] * vX_[300] + (vX_[163] * vX_[104]) / vX_[68] - -0.023526756935 * vX_[32];
    vX_[277] = 1.666555 * vX_[60] + -0.017527158935 * vX_[129] + -0.023526756935 * vX_[29] + vX_[148] * vX_[361] + vX_[50] * vX_[92] + vX_[173] * vX_[42] + vX_[118] * vX_[300] + (vX_[171] * vX_[104]) / vX_[68] - 0.100241616695 * vX_[277];
    vX_[207] = 1.225946 * vX_[385] + -0.047121686402 * vX_[96] + vX_[106] * vX_[419] + vX_[70] * vX_[277] + vX_[186] * vX_[392] + vX_[121] * vX_[103] + vX_[200] * vX_[395] + vX_[207] * vX_[115] + (vX_[199] * vX_[362]) / vX_[81] - -0.014653732538 * vX_[82];
    vX_[385] = -0.047121686402 * vX_[385] + -0.0015152446 * vX_[103] + -0.0046002455 * vX_[82] + -1 * (vX_[398] + (vX_[68] * vX_[104]) / vX_[68]) + vX_[238] * vX_[392] + vX_[234] * vX_[103] + vX_[184] * vX_[395] + vX_[186] * vX_[115] + (0.002164052 * vX_[362]) / vX_[81] - -0.0285580595 * vX_[96];
    vX_[82] = -0.047121686402 * vX_[93] + -0.0205908595 * vX_[103] + vX_[106] * vX_[467] + vX_[70] * vX_[10] + vX_[234] * vX_[392] + vX_[80] * vX_[103] + vX_[188] * vX_[395] + vX_[121] * vX_[115] + (vX_[187] * vX_[362]) / vX_[81] - -0.0015152446 * vX_[96] - 0.002164052 * vX_[82];
    vX_[277] = -0.014653732538 * vX_[96] + 0.05034347249 * vX_[103] + vX_[70] * vX_[419] + vX_[49] * vX_[277] + vX_[181] * vX_[392] + vX_[230] * vX_[103] + vX_[220] * vX_[395] + vX_[217] * vX_[115] + (vX_[215] * vX_[362]) / vX_[81];
    vX_[419] = vX_[101] * vX_[385] + vX_[95] * vX_[82] + -0.0825 * vX_[277] + vX_[108] * vX_[112] + vX_[84] * vX_[207];
    vX_[181] = 0 - vX_[419];
    vX_[33] = (vX_[81] * vX_[362]) / vX_[81] + vX_[33] + vX_[109] * vX_[112] + vX_[86] * vX_[207] + (vX_[227] * vX_[181]) / vX_[244];
    vX_[82] = vX_[95] * vX_[385] + vX_[83] * vX_[82] + vX_[110] * vX_[112] + vX_[87] * vX_[207] + (vX_[249] * vX_[181]) / vX_[244];
    vX_[385] = vX_[111] * vX_[112] + vX_[88] * vX_[207] + (vX_[224] * vX_[181]) / vX_[244];
    vX_[230] = vX_[26] * vX_[33] + vX_[27] * vX_[82] + -0.0825 * vX_[385];
    vX_[220] = 0 - vX_[230];
    vX_[277] = vX_[277] + (vX_[255] * vX_[181]) / vX_[244];
    vX_[207] = vX_[85] * vX_[112] + vX_[83] * vX_[207] + (vX_[267] * vX_[181]) / vX_[244];
    vX_[419] = vX_[38] * vX_[277] + vX_[89] * vX_[207] + -1 * (vX_[419] + (vX_[244] * vX_[181]) / vX_[244]) + (vX_[320] * vX_[220]) / vX_[295];
    vX_[82] = vX_[28] * vX_[33] + vX_[26] * vX_[82] + (vX_[301] * vX_[220]) / vX_[295];
    vX_[385] = -1 * vX_[385] + (vX_[303] * vX_[220]) / vX_[295];
    vX_[207] = vX_[39] * vX_[277] + vX_[26] * vX_[207] + (vX_[333] * vX_[220]) / vX_[295];
    vX_[277] = 0 - vX_[15] * vX_[419] - vX_[11] * vX_[82] - vX_[34] * vX_[385] - vX_[16] * vX_[207];
    jac[161] = (0 - vX_[0] * (-1 * (vX_[230] + (vX_[295] * vX_[220]) / vX_[295]) + (0.0007689361 * vX_[277]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[419] + vX_[15] * vX_[82] + vX_[30] * vX_[385] + vX_[12] * vX_[207] + (vX_[358] * vX_[277]) / vX_[354])) / vX_[451];
    vX_[207] = vX_[0] * jac[161];
    vX_[385] = vX_[4] * jac[161];
    jac[162] = (vX_[277] - 0.0007689361 * vX_[207] - vX_[358] * vX_[385]) / vX_[354];
    vX_[207] = -1 * vX_[207];
    vX_[277] = vX_[15] * jac[162] + vX_[20] * vX_[385];
    vX_[82] = vX_[11] * jac[162] + vX_[15] * vX_[385];
    vX_[419] = vX_[34] * jac[162] + vX_[30] * vX_[385];
    vX_[385] = vX_[16] * jac[162] + vX_[12] * vX_[385];
    jac[163] = (vX_[220] - vX_[295] * vX_[207] - vX_[320] * vX_[277] - vX_[301] * vX_[82] - vX_[303] * vX_[419] - vX_[333] * vX_[385]) / vX_[295];
    vX_[220] = -1 * vX_[277];
    vX_[207] = vX_[207] + jac[163];
    vX_[230] = vX_[26] * vX_[207] + vX_[28] * vX_[82];
    vX_[82] = vX_[27] * vX_[207] + vX_[26] * vX_[82];
    vX_[207] = -0.0825 * vX_[207] + -1 * vX_[419];
    vX_[419] = vX_[39] * vX_[385] + vX_[38] * vX_[277];
    vX_[385] = vX_[26] * vX_[385] + vX_[89] * vX_[277];
    jac[164] = (vX_[181] - vX_[244] * vX_[220] - vX_[227] * vX_[230] - vX_[249] * vX_[82] - vX_[224] * vX_[207] - vX_[255] * vX_[419] - vX_[267] * vX_[385]) / vX_[244];
    vX_[220] = vX_[220] + jac[164];
    vX_[392] = vX_[101] * vX_[220] + vX_[95] * vX_[82] + vX_[392];
    vX_[103] = vX_[95] * vX_[220] + vX_[83] * vX_[82] + vX_[103];
    vX_[419] = -0.0825 * vX_[220] + vX_[419];
    vX_[395] = vX_[108] * vX_[220] + vX_[109] * vX_[230] + vX_[110] * vX_[82] + vX_[111] * vX_[207] + vX_[85] * vX_[385] + vX_[395];
    vX_[220] = vX_[84] * vX_[220] + vX_[86] * vX_[230] + vX_[87] * vX_[82] + vX_[88] * vX_[207] + vX_[83] * vX_[385] + vX_[115];
    jac[165] = (vX_[362] - vX_[81] * vX_[230] - 0.002164052 * vX_[392] - vX_[187] * vX_[103] - vX_[215] * vX_[419] - vX_[182] * vX_[395] - vX_[199] * vX_[220]) / vX_[81];
    vX_[392] = -1 * vX_[392];
    vX_[230] = vX_[230] + jac[165];
    vX_[42] = vX_[70] * vX_[230] + vX_[106] * vX_[103] + vX_[42];
    vX_[230] = vX_[49] * vX_[230] + vX_[70] * vX_[103] + vX_[300];
    vX_[395] = -1 * vX_[395];
    vX_[103] = vX_[49] * vX_[419] + vX_[70] * vX_[220];
    jac[166] = (vX_[104] - vX_[68] * vX_[392] - vX_[75] * vX_[42] - vX_[67] * vX_[230] - vX_[94] * vX_[395] - vX_[163] * (vX_[70] * vX_[419] + vX_[106] * vX_[220]) - vX_[171] * vX_[103]) / vX_[68];
    vX_[392] = vX_[392] + jac[166];
    jac[167] = (vX_[19] - 0.0049096523 * -1 * vX_[42] - -0.0005483591 * (vX_[50] * vX_[392] + vX_[66] * vX_[230] + vX_[383]) - -0.0016724827 * (vX_[53] * vX_[392] + vX_[50] * vX_[230] + vX_[321]) - 0.007735484874 * (vX_[50] * vX_[395] + vX_[148] * vX_[103] + vX_[127] * vX_[42] + vX_[35]) - 0.003127439544 * (vX_[53] * vX_[395] + vX_[50] * vX_[103] + vX_[54] * vX_[42] + vX_[359])) / 0.0049096523;
    vX_[392] = 0 - vX_[120];
    vX_[117] = vX_[117] + vX_[117];
    vX_[103] = vX_[128] * -0.088 + vX_[53] * vX_[131];
    vX_[395] = vX_[128] * vX_[50] + vX_[53] * vX_[142];
    vX_[230] = vX_[50] * vX_[133];
    vX_[42] = (- vX_[53]) * x_in[13];
    vX_[19] = vX_[50] * x_in[13];
    vX_[359] = vX_[53] * vX_[133];
    vX_[131] = vX_[142] * -0.088 + vX_[50] * vX_[131];
    vX_[35] = vX_[142] * vX_[50] + vX_[50] * vX_[142];
    vX_[321] = vX_[128] * vX_[53] + vX_[53] * vX_[128];
    vX_[383] = 0.007735484874 * (0 - vX_[103]) + -0.002420945 * vX_[395] + -0.0005483591 * vX_[359] - -0.003127439544 * vX_[131] - -0.0016724827 * vX_[230] - -0.0003951087 * (vX_[35] - vX_[321]);
    vX_[220] = 0 - vX_[383];
    vX_[419] = -0.735522 * vX_[103] + 0.007735484874 * vX_[395] + 0.045305948634 * vX_[230] + 0.000863976360112152 * vX_[42] + -0.0426708405168984 * vX_[19] + (0.007735484874 * vX_[220]) / 0.0049096523 - -0.003127439544 * vX_[321];
    vX_[104] = 0.735522 * vX_[131] + 0.045305948634 * vX_[359] + -0.003127439544 * vX_[395] + 0.0456552523787178 * vX_[42] + 0.00106536842387716 * vX_[19] + (0.003127439544 * vX_[220]) / 0.0049096523 - 0.007735484874 * vX_[35];
    vX_[300] = vX_[53] * vX_[152] - vX_[50] * vX_[138];
    vX_[131] = 0.045305948634 * vX_[131] + -0.0003951087 * vX_[230] + -0.0016724827 * (0 - vX_[321]) + 0.0128378177682551 * vX_[42] + -0.000581908304553986 * vX_[19] + (-0.0005483591 * vX_[220]) / 0.0049096523 - 0.007735484874 * vX_[300] - -0.0104103567 * vX_[359] - -0.0005483591 * vX_[395];
    vX_[395] = -0.003127439544 * vX_[300] + 0.045305948634 * vX_[103] + -0.0079894117 * vX_[230] + -0.0016724827 * vX_[395] + -0.000581908304553986 * vX_[42] + 0.0147502744829958 * vX_[19] + (-0.0016724827 * vX_[220]) / 0.0049096523 - -0.0003951087 * vX_[359] - -0.0005483591 * (0 - vX_[35]);
    vX_[300] = 0.735522 * vX_[300] + 0.007735484874 * vX_[359] + -0.003127439544 * vX_[230] + -0.007735484874 * vX_[42] + -0.003127439544 * vX_[19] - 0.045305948634 * (vX_[35] + vX_[321]);
    vX_[321] = 0.100241616695 * vX_[137] + 9.3569106e-05 * vX_[124] + vX_[50] * vX_[131] + vX_[53] * vX_[395] + -0.088 * vX_[300] - -0.023526756935 * vX_[392] - -0.000103758764 * vX_[107];
    vX_[35] = 0 - vX_[321];
    vX_[383] = -0.017527158935 * vX_[392] + 0.0015241109 * vX_[107] + -0.000103758764 * vX_[117] + vX_[127] * vX_[419] + vX_[54] * vX_[104] + -1 * (vX_[383] + (0.0049096523 * vX_[220]) / 0.0049096523) + vX_[58] * vX_[379] + vX_[77] * vX_[107] + vX_[165] * vX_[382] + vX_[173] * vX_[120] + (vX_[75] * vX_[35]) / vX_[68] - 0.0093141007 * vX_[124];
    vX_[137] = 0 - vX_[137];
    vX_[395] = -0.017527158935 * vX_[137] + 0.001226795 * vX_[107] + vX_[66] * vX_[131] + vX_[50] * vX_[395] + vX_[77] * vX_[379] + vX_[65] * vX_[107] + vX_[168] * vX_[382] + vX_[118] * vX_[120] + (vX_[67] * vX_[35]) / vX_[68] - 0.0015241109 * vX_[124] - 9.3569106e-05 * vX_[117];
    vX_[131] = vX_[70] * vX_[383] + vX_[49] * vX_[395];
    vX_[77] = 0 - vX_[131];
    vX_[179] = -1 * (0.100241616695 * vX_[124] + -0.023526756935 * vX_[107] + vX_[50] * vX_[419] + vX_[53] * vX_[104] + vX_[162] * vX_[379] + vX_[135] * vX_[107] + vX_[130] * vX_[382] + vX_[179] * vX_[120] + (vX_[94] * vX_[35]) / vX_[68]) + (vX_[182] * vX_[77]) / vX_[81];
    vX_[137] = -1.666555 * vX_[137] + -0.017527158935 * vX_[107] + -1 * vX_[300] + vX_[165] * vX_[379] + vX_[168] * vX_[107] + vX_[203] * vX_[382] + vX_[204] * vX_[120] + (vX_[163] * vX_[35]) / vX_[68] - -0.023526756935 * vX_[117];
    vX_[104] = 1.666555 * vX_[392] + -0.017527158935 * vX_[124] + vX_[148] * vX_[419] + vX_[50] * vX_[104] + vX_[173] * vX_[379] + vX_[118] * vX_[107] + vX_[204] * vX_[382] + vX_[190] * vX_[120] + (vX_[171] * vX_[35]) / vX_[68] - 0.100241616695 * vX_[117];
    vX_[419] = vX_[106] * vX_[137] + vX_[70] * vX_[104] + (vX_[199] * vX_[77]) / vX_[81];
    vX_[321] = -1 * (vX_[321] + (vX_[68] * vX_[35]) / vX_[68]) + (0.002164052 * vX_[77]) / vX_[81];
    vX_[395] = vX_[106] * vX_[383] + vX_[70] * vX_[395] + (vX_[187] * vX_[77]) / vX_[81];
    vX_[104] = vX_[70] * vX_[137] + vX_[49] * vX_[104] + (vX_[215] * vX_[77]) / vX_[81];
    vX_[137] = vX_[101] * vX_[321] + vX_[95] * vX_[395] + -0.0825 * vX_[104] + vX_[108] * vX_[179] + vX_[84] * vX_[419];
    vX_[383] = 0 - vX_[137];
    vX_[131] = (vX_[81] * vX_[77]) / vX_[81] + vX_[131] + vX_[109] * vX_[179] + vX_[86] * vX_[419] + (vX_[227] * vX_[383]) / vX_[244];
    vX_[395] = vX_[95] * vX_[321] + vX_[83] * vX_[395] + vX_[110] * vX_[179] + vX_[87] * vX_[419] + (vX_[249] * vX_[383]) / vX_[244];
    vX_[321] = vX_[111] * vX_[179] + vX_[88] * vX_[419] + (vX_[224] * vX_[383]) / vX_[244];
    vX_[117] = vX_[26] * vX_[131] + vX_[27] * vX_[395] + -0.0825 * vX_[321];
    vX_[392] = 0 - vX_[117];
    vX_[104] = vX_[104] + (vX_[255] * vX_[383]) / vX_[244];
    vX_[419] = vX_[85] * vX_[179] + vX_[83] * vX_[419] + (vX_[267] * vX_[383]) / vX_[244];
    vX_[137] = vX_[38] * vX_[104] + vX_[89] * vX_[419] + -1 * (vX_[137] + (vX_[244] * vX_[383]) / vX_[244]) + (vX_[320] * vX_[392]) / vX_[295];
    vX_[395] = vX_[28] * vX_[131] + vX_[26] * vX_[395] + (vX_[301] * vX_[392]) / vX_[295];
    vX_[321] = -1 * vX_[321] + (vX_[303] * vX_[392]) / vX_[295];
    vX_[419] = vX_[39] * vX_[104] + vX_[26] * vX_[419] + (vX_[333] * vX_[392]) / vX_[295];
    vX_[104] = 0 - vX_[15] * vX_[137] - vX_[11] * vX_[395] - vX_[34] * vX_[321] - vX_[16] * vX_[419];
    jac[175] = (0 - vX_[0] * (-1 * (vX_[117] + (vX_[295] * vX_[392]) / vX_[295]) + (0.0007689361 * vX_[104]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[137] + vX_[15] * vX_[395] + vX_[30] * vX_[321] + vX_[12] * vX_[419] + (vX_[358] * vX_[104]) / vX_[354])) / vX_[451];
    vX_[419] = vX_[0] * jac[175];
    vX_[321] = vX_[4] * jac[175];
    jac[176] = (vX_[104] - 0.0007689361 * vX_[419] - vX_[358] * vX_[321]) / vX_[354];
    vX_[419] = -1 * vX_[419];
    vX_[104] = vX_[15] * jac[176] + vX_[20] * vX_[321];
    vX_[395] = vX_[11] * jac[176] + vX_[15] * vX_[321];
    vX_[137] = vX_[34] * jac[176] + vX_[30] * vX_[321];
    vX_[321] = vX_[16] * jac[176] + vX_[12] * vX_[321];
    jac[177] = (vX_[392] - vX_[295] * vX_[419] - vX_[320] * vX_[104] - vX_[301] * vX_[395] - vX_[303] * vX_[137] - vX_[333] * vX_[321]) / vX_[295];
    vX_[392] = -1 * vX_[104];
    vX_[419] = vX_[419] + jac[177];
    vX_[117] = vX_[26] * vX_[419] + vX_[28] * vX_[395];
    vX_[395] = vX_[27] * vX_[419] + vX_[26] * vX_[395];
    vX_[419] = -0.0825 * vX_[419] + -1 * vX_[137];
    vX_[137] = vX_[39] * vX_[321] + vX_[38] * vX_[104];
    vX_[321] = vX_[26] * vX_[321] + vX_[89] * vX_[104];
    jac[178] = (vX_[383] - vX_[244] * vX_[392] - vX_[227] * vX_[117] - vX_[249] * vX_[395] - vX_[224] * vX_[419] - vX_[255] * vX_[137] - vX_[267] * vX_[321]) / vX_[244];
    vX_[392] = vX_[392] + jac[178];
    vX_[383] = vX_[101] * vX_[392] + vX_[95] * vX_[395];
    vX_[104] = vX_[95] * vX_[392] + vX_[83] * vX_[395];
    vX_[137] = -0.0825 * vX_[392] + vX_[137];
    vX_[131] = vX_[108] * vX_[392] + vX_[109] * vX_[117] + vX_[110] * vX_[395] + vX_[111] * vX_[419] + vX_[85] * vX_[321];
    vX_[392] = vX_[84] * vX_[392] + vX_[86] * vX_[117] + vX_[87] * vX_[395] + vX_[88] * vX_[419] + vX_[83] * vX_[321];
    jac[179] = (vX_[77] - vX_[81] * vX_[117] - 0.002164052 * vX_[383] - vX_[187] * vX_[104] - vX_[215] * vX_[137] - vX_[182] * vX_[131] - vX_[199] * vX_[392]) / vX_[81];
    vX_[383] = -1 * vX_[383];
    vX_[117] = vX_[117] + jac[179];
    vX_[379] = vX_[70] * vX_[117] + vX_[106] * vX_[104] + vX_[379];
    vX_[117] = vX_[49] * vX_[117] + vX_[70] * vX_[104] + vX_[107];
    vX_[131] = -1 * vX_[131];
    vX_[120] = vX_[49] * vX_[137] + vX_[70] * vX_[392] + vX_[120];
    jac[180] = (vX_[35] - vX_[68] * vX_[383] - vX_[75] * vX_[379] - vX_[67] * vX_[117] - vX_[94] * vX_[131] - vX_[163] * (vX_[70] * vX_[137] + vX_[106] * vX_[392] + vX_[382]) - vX_[171] * vX_[120]) / vX_[68];
    vX_[383] = vX_[383] + jac[180];
    jac[181] = (vX_[220] - 0.0049096523 * -1 * vX_[379] - -0.0005483591 * (vX_[50] * vX_[383] + vX_[66] * vX_[117] + vX_[42]) - -0.0016724827 * (vX_[53] * vX_[383] + vX_[50] * vX_[117] + vX_[19]) - 0.007735484874 * (vX_[50] * vX_[131] + vX_[148] * vX_[120] + vX_[127] * vX_[379]) - 0.003127439544 * (vX_[53] * vX_[131] + vX_[50] * vX_[120] + vX_[54] * vX_[379])) / 0.0049096523;
    vX_[383] = 0 - vX_[138];
    vX_[120] = 0 - vX_[152];
    vX_[138] = 0.007735484874 * vX_[138] + -0.0005483591 * vX_[128] - -0.003127439544 * vX_[120] - -0.0016724827 * vX_[142];
    vX_[131] = 0 - vX_[138];
    vX_[133] = vX_[133] + vX_[133];
    vX_[117] = -0.735522 * vX_[383] + 0.045305948634 * vX_[142] + 0.000863976360112152 * vX_[366] + -0.0426708405168984 * vX_[142] + 0.72333422730663 * vX_[369] + -0.00492748973017121 * vX_[152] + (0.007735484874 * vX_[131]) / 0.0049096523 - -0.003127439544 * vX_[133];
    vX_[379] = 0.735522 * vX_[120] + 0.045305948634 * vX_[128] + 0.0456552523787178 * vX_[366] + 0.00106536842387716 * vX_[142] + -0.00492748973017121 * vX_[369] + 0.733529826725046 * vX_[152] + (0.003127439544 * vX_[131]) / 0.0049096523 - 0.007735484874 * vX_[133];
    vX_[120] = 0.045305948634 * vX_[120] + -0.0003951087 * vX_[142] + -0.0016724827 * vX_[133] + 0.0128378177682551 * vX_[366] + -0.000581908304553986 * vX_[142] + 0.000863976360112152 * vX_[369] + 0.0456552523787178 * vX_[152] + (-0.0005483591 * vX_[131]) / 0.0049096523 - -0.0104103567 * vX_[128];
    vX_[133] = 0.045305948634 * vX_[383] + -0.0079894117 * vX_[142] + -0.000581908304553986 * vX_[366] + 0.0147502744829958 * vX_[142] + -0.0426708405168984 * vX_[369] + 0.00106536842387716 * vX_[152] + (-0.0016724827 * vX_[131]) / 0.0049096523 - -0.0003951087 * vX_[128] - -0.0005483591 * vX_[133];
    vX_[128] = 0.007735484874 * vX_[128] + -0.003127439544 * vX_[142] + -0.007735484874 * vX_[366] + -0.003127439544 * vX_[142];
    vX_[383] = vX_[50] * vX_[120] + vX_[53] * vX_[133] + -0.088 * vX_[128];
    vX_[220] = 0 - vX_[383];
    vX_[138] = vX_[127] * vX_[117] + vX_[54] * vX_[379] + -1 * (vX_[138] + (0.0049096523 * vX_[131]) / 0.0049096523) + (vX_[75] * vX_[220]) / vX_[68];
    vX_[133] = vX_[66] * vX_[120] + vX_[50] * vX_[133] + (vX_[67] * vX_[220]) / vX_[68];
    vX_[120] = vX_[70] * vX_[138] + vX_[49] * vX_[133];
    vX_[19] = 0 - vX_[120];
    vX_[42] = -1 * (vX_[50] * vX_[117] + vX_[53] * vX_[379] + (vX_[94] * vX_[220]) / vX_[68]) + (vX_[182] * vX_[19]) / vX_[81];
    vX_[128] = -1 * vX_[128] + (vX_[163] * vX_[220]) / vX_[68];
    vX_[379] = vX_[148] * vX_[117] + vX_[50] * vX_[379] + (vX_[171] * vX_[220]) / vX_[68];
    vX_[117] = vX_[106] * vX_[128] + vX_[70] * vX_[379] + (vX_[199] * vX_[19]) / vX_[81];
    vX_[383] = -1 * (vX_[383] + (vX_[68] * vX_[220]) / vX_[68]) + (0.002164052 * vX_[19]) / vX_[81];
    vX_[133] = vX_[106] * vX_[138] + vX_[70] * vX_[133] + (vX_[187] * vX_[19]) / vX_[81];
    vX_[379] = vX_[70] * vX_[128] + vX_[49] * vX_[379] + (vX_[215] * vX_[19]) / vX_[81];
    vX_[128] = vX_[101] * vX_[383] + vX_[95] * vX_[133] + -0.0825 * vX_[379] + vX_[108] * vX_[42] + vX_[84] * vX_[117];
    vX_[138] = 0 - vX_[128];
    vX_[120] = (vX_[81] * vX_[19]) / vX_[81] + vX_[120] + vX_[109] * vX_[42] + vX_[86] * vX_[117] + (vX_[227] * vX_[138]) / vX_[244];
    vX_[133] = vX_[95] * vX_[383] + vX_[83] * vX_[133] + vX_[110] * vX_[42] + vX_[87] * vX_[117] + (vX_[249] * vX_[138]) / vX_[244];
    vX_[383] = vX_[111] * vX_[42] + vX_[88] * vX_[117] + (vX_[224] * vX_[138]) / vX_[244];
    vX_[392] = vX_[26] * vX_[120] + vX_[27] * vX_[133] + -0.0825 * vX_[383];
    vX_[137] = 0 - vX_[392];
    vX_[379] = vX_[379] + (vX_[255] * vX_[138]) / vX_[244];
    vX_[117] = vX_[85] * vX_[42] + vX_[83] * vX_[117] + (vX_[267] * vX_[138]) / vX_[244];
    vX_[128] = vX_[38] * vX_[379] + vX_[89] * vX_[117] + -1 * (vX_[128] + (vX_[244] * vX_[138]) / vX_[244]) + (vX_[320] * vX_[137]) / vX_[295];
    vX_[133] = vX_[28] * vX_[120] + vX_[26] * vX_[133] + (vX_[301] * vX_[137]) / vX_[295];
    vX_[383] = -1 * vX_[383] + (vX_[303] * vX_[137]) / vX_[295];
    vX_[117] = vX_[39] * vX_[379] + vX_[26] * vX_[117] + (vX_[333] * vX_[137]) / vX_[295];
    vX_[379] = 0 - vX_[15] * vX_[128] - vX_[11] * vX_[133] - vX_[34] * vX_[383] - vX_[16] * vX_[117];
    jac[189] = (0 - vX_[0] * (-1 * (vX_[392] + (vX_[295] * vX_[137]) / vX_[295]) + (0.0007689361 * vX_[379]) / vX_[354]) - vX_[4] * (vX_[20] * vX_[128] + vX_[15] * vX_[133] + vX_[30] * vX_[383] + vX_[12] * vX_[117] + (vX_[358] * vX_[379]) / vX_[354])) / vX_[451];
    vX_[0] = vX_[0] * jac[189];
    vX_[4] = vX_[4] * jac[189];
    jac[190] = (vX_[379] - 0.0007689361 * vX_[0] - vX_[358] * vX_[4]) / vX_[354];
    vX_[0] = -1 * vX_[0];
    vX_[20] = vX_[15] * jac[190] + vX_[20] * vX_[4];
    vX_[15] = vX_[11] * jac[190] + vX_[15] * vX_[4];
    vX_[34] = vX_[34] * jac[190] + vX_[30] * vX_[4];
    vX_[4] = vX_[16] * jac[190] + vX_[12] * vX_[4];
    jac[191] = (vX_[137] - vX_[295] * vX_[0] - vX_[320] * vX_[20] - vX_[301] * vX_[15] - vX_[303] * vX_[34] - vX_[333] * vX_[4]) / vX_[295];
    vX_[137] = -1 * vX_[20];
    vX_[0] = vX_[0] + jac[191];
    vX_[28] = vX_[26] * vX_[0] + vX_[28] * vX_[15];
    vX_[15] = vX_[27] * vX_[0] + vX_[26] * vX_[15];
    vX_[0] = -0.0825 * vX_[0] + -1 * vX_[34];
    vX_[39] = vX_[39] * vX_[4] + vX_[38] * vX_[20];
    vX_[4] = vX_[26] * vX_[4] + vX_[89] * vX_[20];
    jac[192] = (vX_[138] - vX_[244] * vX_[137] - vX_[227] * vX_[28] - vX_[249] * vX_[15] - vX_[224] * vX_[0] - vX_[255] * vX_[39] - vX_[267] * vX_[4]) / vX_[244];
    vX_[137] = vX_[137] + jac[192];
    vX_[101] = vX_[101] * vX_[137] + vX_[95] * vX_[15];
    vX_[95] = vX_[95] * vX_[137] + vX_[83] * vX_[15];
    vX_[39] = -0.0825 * vX_[137] + vX_[39];
    vX_[85] = vX_[108] * vX_[137] + vX_[109] * vX_[28] + vX_[110] * vX_[15] + vX_[111] * vX_[0] + vX_[85] * vX_[4];
    vX_[137] = vX_[84] * vX_[137] + vX_[86] * vX_[28] + vX_[87] * vX_[15] + vX_[88] * vX_[0] + vX_[83] * vX_[4];
    jac[193] = (vX_[19] - vX_[81] * vX_[28] - 0.002164052 * vX_[101] - vX_[187] * vX_[95] - vX_[215] * vX_[39] - vX_[182] * vX_[85] - vX_[199] * vX_[137]) / vX_[81];
    vX_[101] = -1 * vX_[101];
    vX_[28] = vX_[28] + jac[193];
    vX_[19] = vX_[70] * vX_[28] + vX_[106] * vX_[95];
    vX_[28] = vX_[49] * vX_[28] + vX_[70] * vX_[95];
    vX_[85] = -1 * vX_[85];
    vX_[49] = vX_[49] * vX_[39] + vX_[70] * vX_[137];
    jac[194] = (vX_[220] - vX_[68] * vX_[101] - vX_[75] * vX_[19] - vX_[67] * vX_[28] - vX_[94] * vX_[85] - vX_[163] * (vX_[70] * vX_[39] + vX_[106] * vX_[137]) - vX_[171] * vX_[49]) / vX_[68];
    vX_[101] = vX_[101] + jac[194];
    jac[195] = (vX_[131] - 0.0049096523 * -1 * vX_[19] - -0.0005483591 * (vX_[50] * vX_[101] + vX_[66] * vX_[28] + vX_[366]) - -0.0016724827 * (vX_[53] * vX_[101] + vX_[50] * vX_[28] + vX_[142]) - 0.007735484874 * (vX_[50] * vX_[85] + vX_[148] * vX_[49] + vX_[127] * vX_[19] + vX_[369]) - 0.003127439544 * (vX_[53] * vX_[85] + vX_[50] * vX_[49] + vX_[54] * vX_[19] + vX_[152])) / 0.0049096523;
    // dependent variables without operations
    jac[98] = 1;
    jac[113] = 1;
    jac[128] = 1;
    jac[143] = 1;
    jac[158] = 1;
    jac[173] = 1;
    jac[188] = 1;


    return dFdx_;
}

const FrankaLinearizedForward::state_control_matrix_t& FrankaLinearizedForward::getDerivativeControl(
    const state_vector_t& x,
    const control_vector_t& u,
    const double t)
{
    double* jac = dFdu_.data();
    Eigen::Matrix<double, 14 + 7, 1> x_in;
    x_in << x, u;

        vU_[0] = 0 - sin(x_in[1]);
    vU_[1] = sin(x_in[2]);
    vU_[2] = sin(x_in[3]);
    vU_[3] = -0.0825 * vU_[2];
    vU_[4] = -1 * vU_[3];
    vU_[5] = sin(x_in[4]);
    vU_[6] = 0 - vU_[5];
    vU_[7] = cos(x_in[6]);
    vU_[8] = -0.088 * vU_[7];
    vU_[9] = 0.735522 * vU_[8];
    vU_[10] = -0.007735484874 + vU_[9];
    vU_[11] = 0 - vU_[10];
    vU_[12] = sin(x_in[6]);
    vU_[13] = 0 - vU_[12];
    vU_[14] = -0.088 * vU_[12];
    vU_[15] = -1 * vU_[14];
    vU_[16] = 0 - 0.735522 * vU_[15];
    vU_[17] = -0.003127439544 + vU_[16];
    vU_[18] = vU_[7] * vU_[11] + vU_[13] * vU_[17];
    vU_[19] = 0.100241616695 + vU_[18];
    vU_[20] = 0.00106536842387716 * vU_[12] + 0.0456552523787178 * vU_[7];
    vU_[21] = -0.0426708405168984 * vU_[12] + 0.000863976360112152 * vU_[7];
    vU_[22] = vU_[20] * vU_[12] + vU_[21] * vU_[7];
    vU_[23] = 0.733529826725046 * vU_[15] - -0.00492748973017121 * vU_[8];
    vU_[24] = -0.00492748973017121 * vU_[15] - 0.72333422730663 * vU_[8];
    vU_[25] = vU_[23] * vU_[15] - vU_[24] * vU_[8];
    vU_[26] = 0.0147502744829958 - -0.006254879088 * vU_[15] - vU_[16] * vU_[15] - vU_[25];
    vU_[16] = -0.000581908304553986 + -0.003127439544 * vU_[8] + vU_[16] * vU_[8] - -0.007735484874 * vU_[15];
    vU_[27] = vU_[12] * vU_[26] + vU_[7] * vU_[16];
    vU_[9] = 0.0128378177682551 + -0.015470969748 * vU_[8] + vU_[9] * vU_[8] - vU_[25];
    vU_[16] = vU_[12] * vU_[16] + vU_[7] * vU_[9];
    vU_[28] = vU_[27] * vU_[12] + vU_[16] * vU_[7];
    vU_[29] = 0.011794561 + vU_[25] + vU_[28];
    vU_[30] = vU_[22] / vU_[29];
    vU_[31] = 0 - vU_[19] * vU_[30];
    vU_[32] = sin(x_in[5]);
    vU_[33] = 0 - vU_[32];
    vU_[34] = -0.00492748973017121 * vU_[12] + -0.0121877726933703 * vU_[7];
    vU_[35] = -0.00199217327495371 * vU_[12] + -0.00492748973017121 * vU_[7];
    vU_[21] = 0.023526756935 + vU_[21] * vU_[13] + vU_[20] * vU_[7];
    vU_[20] = vU_[34] * vU_[13] + vU_[35] * vU_[7] - vU_[21] * vU_[30];
    vU_[36] = cos(x_in[5]);
    vU_[37] = 0 - vU_[31];
    vU_[11] = vU_[12] * vU_[11] + vU_[7] * vU_[17];
    vU_[16] = -0.000103758764 + vU_[16] * vU_[13] + vU_[27] * vU_[7];
    vU_[27] = vU_[19] / vU_[29];
    vU_[38] = 0.017527158935 - vU_[11] - vU_[16] * vU_[27];
    vU_[39] = 0.00106536842387716 * vU_[15] - -0.0426708405168984 * vU_[8];
    vU_[15] = 0.0456552523787178 * vU_[15] - 0.000863976360112152 * vU_[8];
    vU_[8] = 0 - vU_[15];
    vU_[40] = 9.3569106e-05 + vU_[13] * vU_[39] + vU_[7] * vU_[8];
    vU_[41] = 0 - vU_[40] * vU_[27];
    vU_[42] = vU_[32] * vU_[38] + vU_[36] * vU_[41];
    vU_[43] = -0.0426708405168984 * vU_[7] + 0.000863976360112152 * vU_[13];
    vU_[44] = 0.00106536842387716 * vU_[7] + 0.0456552523787178 * vU_[13];
    vU_[45] = vU_[21] / vU_[29];
    vU_[46] = vU_[43] * vU_[13] + vU_[44] * vU_[7] - vU_[16] * vU_[45];
    vU_[24] = -1 * (vU_[24] + vU_[10]);
    vU_[23] = -1 * (vU_[23] + vU_[17]);
    vU_[11] = -0.017527158935 + vU_[24] * vU_[13] + vU_[23] * vU_[7] + vU_[11] - vU_[40] * vU_[45];
    vU_[17] = vU_[32] * vU_[46] + vU_[36] * vU_[11];
    vU_[10] = -0.05034347249 + vU_[42] * vU_[33] + vU_[17] * vU_[36];
    vU_[23] = -0.100241616695 + vU_[24] * vU_[7] + vU_[23] * vU_[12] - vU_[18] - vU_[40] * vU_[30];
    vU_[24] = 0 - vU_[23];
    vU_[44] = -0.023526756935 + vU_[43] * vU_[7] + vU_[44] * vU_[12] - vU_[16] * vU_[30];
    vU_[43] = vU_[36] * vU_[24] + vU_[33] * vU_[44];
    vU_[18] = -0.014653732538 + vU_[43];
    vU_[28] = 0.0024804603 + vU_[9] + vU_[26] + vU_[25] - vU_[28] - vU_[16] * vU_[16] / vU_[29];
    vU_[9] = vU_[40] / vU_[29];
    vU_[8] = 0.0015241109 + -1 * 2. * vU_[15] * vU_[13] + -1 * 2. * vU_[39] * vU_[7] + vU_[7] * vU_[39] + vU_[12] * vU_[8] - vU_[16] * vU_[9];
    vU_[15] = vU_[32] * vU_[28] + vU_[36] * vU_[8];
    vU_[9] = 0.010567766 + vU_[25] - vU_[40] * vU_[9];
    vU_[8] = vU_[32] * vU_[8] + vU_[36] * vU_[9];
    vU_[25] = vU_[15] * vU_[32] + vU_[8] * vU_[36];
    vU_[39] = 0.0108695105 + vU_[25];
    vU_[26] = vU_[18] / vU_[39];
    vU_[31] = -1 * 2. * vU_[31] * vU_[33] + -1 * 2. * vU_[20] * vU_[36] + vU_[36] * vU_[20] + vU_[32] * vU_[37] - vU_[10] * vU_[26];
    vU_[47] = cos(x_in[4]);
    vU_[48] = 0 - vU_[47];
    vU_[35] = vU_[35] * vU_[12] + vU_[34] * vU_[7];
    vU_[30] = 2.402077 + vU_[35] - vU_[22] * vU_[30];
    vU_[34] = 1.225946 + vU_[30] - vU_[18] * vU_[26];
    vU_[35] = 2.38789705403168 - vU_[35] - vU_[21] * vU_[45] - vU_[30];
    vU_[45] = 0 - vU_[21] * vU_[27];
    vU_[49] = vU_[32] * vU_[35] + vU_[36] * vU_[45];
    vU_[27] = 2.402077 - vU_[19] * vU_[27] - vU_[30];
    vU_[45] = vU_[32] * vU_[45] + vU_[36] * vU_[27];
    vU_[50] = vU_[49] * vU_[32] + vU_[45] * vU_[36];
    vU_[17] = vU_[17] * vU_[32] + vU_[42] * vU_[36];
    vU_[42] = vU_[17] / vU_[39];
    vU_[51] = 1.225946 + vU_[30] + vU_[50] - vU_[17] * vU_[42];
    vU_[52] = vU_[34] - vU_[51];
    vU_[53] = vU_[6] * vU_[31] + vU_[48] * vU_[52];
    vU_[54] = vU_[10] / vU_[39];
    vU_[50] = 1.225946 + vU_[27] + vU_[35] + vU_[30] - vU_[50] - vU_[10] * vU_[54];
    vU_[27] = vU_[50] - vU_[51];
    vU_[35] = vU_[6] * vU_[27] + vU_[48] * vU_[31];
    vU_[30] = -0.384 * vU_[47];
    vU_[55] = 0.384 * vU_[5];
    vU_[56] = vU_[47] * vU_[30] + vU_[6] * vU_[55];
    vU_[57] = -0.0825 * vU_[5];
    vU_[37] = vU_[33] * vU_[20] + vU_[36] * vU_[37] - vU_[18] * vU_[42];
    vU_[20] = vU_[56] * vU_[34] - vU_[57] * vU_[37];
    vU_[24] = vU_[32] * vU_[24] + vU_[36] * vU_[44];
    vU_[8] = -0.0046002455 + vU_[8] * vU_[33] + vU_[15] * vU_[36];
    vU_[15] = 0.047121686402 - vU_[24] - vU_[8] * vU_[26];
    vU_[58] = vU_[20] + vU_[15];
    vU_[26] = 0 - 0.002164052 * vU_[26];
    vU_[59] = -0.0825 * vU_[48];
    vU_[60] = vU_[59] * vU_[37];
    vU_[61] = vU_[56] * vU_[31];
    vU_[62] = vU_[60] - vU_[61];
    vU_[45] = vU_[45] * vU_[33] + vU_[49] * vU_[36] - vU_[10] * vU_[42];
    vU_[49] = vU_[57] * vU_[45];
    vU_[60] = vU_[49] - vU_[60];
    vU_[63] = vU_[26] + vU_[62] - vU_[60];
    vU_[64] = vU_[6] * vU_[58] + vU_[48] * vU_[63];
    vU_[41] = vU_[36] * vU_[38] + vU_[33] * vU_[41];
    vU_[11] = vU_[36] * vU_[46] + vU_[33] * vU_[11];
    vU_[46] = vU_[41] * vU_[33] + vU_[11] * vU_[36] - vU_[8] * vU_[54];
    vU_[49] = vU_[61] - vU_[49];
    vU_[61] = vU_[46] + vU_[49] - vU_[60];
    vU_[38] = vU_[59] * vU_[45] - vU_[56] * vU_[50];
    vU_[23] = -1 * vU_[23];
    vU_[44] = -1 * vU_[44];
    vU_[24] = -0.047121686402 + vU_[23] * vU_[33] + vU_[44] * vU_[36] + vU_[24] - 0.002164052 * vU_[54];
    vU_[54] = vU_[38] + vU_[24];
    vU_[65] = vU_[6] * vU_[61] + vU_[48] * vU_[54];
    vU_[66] = -0.374644408005 + vU_[64] * vU_[6] + vU_[65] * vU_[47];
    vU_[65] = vU_[64] * vU_[48] + vU_[65] * vU_[6] + vU_[60];
    vU_[50] = vU_[57] * vU_[50] - vU_[59] * vU_[31];
    vU_[34] = vU_[57] * vU_[31] - vU_[59] * vU_[34];
    vU_[31] = vU_[50] * vU_[57] - vU_[34] * vU_[59];
    vU_[11] = 0.05034347249 + vU_[41] * vU_[36] + vU_[11] * vU_[32] - vU_[8] * vU_[42];
    vU_[41] = vU_[56] * vU_[37] - vU_[57] * vU_[51];
    vU_[25] = 2. * vU_[15] * vU_[56] + 0.03942757 + vU_[9] + vU_[28] - vU_[25] - vU_[8] * vU_[8] / vU_[39] + vU_[20] * vU_[56] - 2. * vU_[11] * vU_[57] - vU_[41] * vU_[57] - vU_[31];
    vU_[9] = 0.002164052 / vU_[39];
    vU_[44] = 0.014653732538 + vU_[23] * vU_[36] + vU_[44] * vU_[32] - vU_[43] - 0.002164052 * vU_[42];
    vU_[23] = vU_[26] * vU_[56] + -0.0015152446 - vU_[8] * vU_[9] + vU_[11] * vU_[59] + vU_[41] * vU_[59] - vU_[46] * vU_[56] - vU_[44] * vU_[57] - vU_[49] * vU_[56];
    vU_[42] = vU_[6] * vU_[25] + vU_[48] * vU_[23];
    vU_[43] = vU_[59] * vU_[51] - vU_[56] * vU_[45];
    vU_[9] = 2. * vU_[44] * vU_[59] + 0.03146037 - 0.002164052 * vU_[9] + vU_[43] * vU_[59] - 2. * vU_[24] * vU_[56] - vU_[38] * vU_[56] - vU_[31];
    vU_[23] = vU_[6] * vU_[23] + vU_[48] * vU_[9];
    vU_[56] = vU_[42] * vU_[6] + vU_[23] * vU_[48];
    vU_[28] = 0.07758615 + vU_[31] + vU_[56];
    vU_[64] = vU_[65] / vU_[28];
    vU_[67] = vU_[53] * vU_[6] + vU_[35] * vU_[47] - vU_[66] * vU_[64];
    vU_[68] = vU_[4] * vU_[67];
    vU_[69] = cos(x_in[3]);
    vU_[70] = -0.0825 * vU_[69];
    vU_[71] = 0 - vU_[37];
    vU_[43] = vU_[43] + vU_[44];
    vU_[44] = 0 - vU_[43];
    vU_[41] = vU_[41] + vU_[11];
    vU_[11] = vU_[47] * vU_[44] + vU_[6] * vU_[41];
    vU_[72] = -0.19076837715 + vU_[11];
    vU_[73] = vU_[6] * vU_[45] + vU_[47] * vU_[71] - vU_[72] * vU_[64];
    vU_[74] = vU_[70] * vU_[73];
    vU_[75] = vU_[68] - vU_[74];
    vU_[76] = 0 - vU_[2];
    vU_[63] = vU_[47] * vU_[58] + vU_[6] * vU_[63];
    vU_[54] = vU_[47] * vU_[61] + vU_[6] * vU_[54];
    vU_[23] = 0.003905355 + vU_[23] * vU_[6] + vU_[42] * vU_[47];
    vU_[42] = vU_[66] / vU_[28];
    vU_[61] = vU_[63] * vU_[6] + vU_[54] * vU_[47] + vU_[60] - vU_[23] * vU_[42];
    vU_[68] = -0 - vU_[68];
    vU_[44] = vU_[6] * vU_[44] + vU_[48] * vU_[41];
    vU_[58] = vU_[72] / vU_[28];
    vU_[77] = -0.09850206933 - vU_[44] - vU_[23] * vU_[58];
    vU_[78] = 0 - vU_[4] * vU_[73];
    vU_[79] = vU_[61] * vU_[4] + vU_[68] * vU_[4] - vU_[77] * vU_[70] - vU_[78] * vU_[70];
    vU_[43] = vU_[34] + vU_[43];
    vU_[41] = vU_[50] + vU_[41];
    vU_[49] = vU_[46] * vU_[57] + vU_[49] * vU_[57] - vU_[15] * vU_[59] - vU_[20] * vU_[59];
    vU_[24] = vU_[24] * vU_[57] + vU_[38] * vU_[57] - vU_[26] * vU_[59] - vU_[62] * vU_[59];
    vU_[38] = 0 - vU_[24];
    vU_[62] = -0.0016444875 + vU_[6] * vU_[49] + vU_[47] * vU_[38];
    vU_[44] = 0.09850206933 + vU_[43] * vU_[6] + vU_[41] * vU_[47] + vU_[44] - vU_[62] * vU_[42];
    vU_[59] = vU_[70] * vU_[67];
    vU_[60] = vU_[60] - vU_[62] * vU_[58];
    vU_[26] = vU_[44] * vU_[4] + vU_[59] * vU_[4] - vU_[60] * vU_[70] - vU_[74] * vU_[70];
    vU_[46] = 0 - vU_[26];
    vU_[15] = -0.004377257 + vU_[76] * vU_[79] + vU_[69] * vU_[46];
    vU_[35] = vU_[35] * vU_[6] + vU_[53] * vU_[48];
    vU_[53] = 3.587895 + vU_[51] + vU_[35] - vU_[65] * vU_[64];
    vU_[20] = vU_[70] * vU_[53];
    vU_[41] = 0.19076837715 + vU_[43] * vU_[48] + vU_[41] * vU_[6] - vU_[11] - vU_[62] * vU_[64];
    vU_[43] = vU_[20] + vU_[41];
    vU_[11] = 0 - vU_[43];
    vU_[50] = -0 - vU_[4] * vU_[53];
    vU_[54] = 0.374644408005 + vU_[63] * vU_[48] + vU_[54] * vU_[6] - vU_[23] * vU_[64];
    vU_[63] = vU_[50] + vU_[54];
    vU_[64] = 0.088844724872 + vU_[69] * vU_[11] + vU_[76] * vU_[63];
    vU_[35] = 3.587895 + vU_[52] + vU_[27] + vU_[51] - vU_[35] - vU_[66] * vU_[42];
    vU_[71] = 2. * vU_[37] * vU_[6] + 2. * vU_[45] * vU_[47] + vU_[48] * vU_[45] + vU_[6] * vU_[71] - vU_[66] * vU_[58];
    vU_[45] = vU_[4] * vU_[35] - vU_[70] * vU_[71];
    vU_[58] = 3.587895 + vU_[51] - vU_[72] * vU_[58];
    vU_[51] = vU_[4] * vU_[71] - vU_[70] * vU_[58];
    vU_[37] = vU_[45] * vU_[4] - vU_[51] * vU_[70];
    vU_[56] = 0.067677274 + vU_[9] + vU_[25] + vU_[31] - vU_[56] - vU_[23] * vU_[23] / vU_[28] - 2. * vU_[54] * vU_[4] - vU_[50] * vU_[4] - vU_[37];
    vU_[9] = vU_[62] / vU_[28];
    vU_[54] = 0.027715843 + 2. * vU_[24] * vU_[6] + 2. * vU_[49] * vU_[47] + vU_[48] * vU_[49] + vU_[6] * vU_[38] - vU_[23] * vU_[9] + vU_[54] * vU_[70] + vU_[50] * vU_[70] - vU_[41] * vU_[4];
    vU_[50] = vU_[2] * vU_[56] + vU_[69] * vU_[54];
    vU_[9] = 2. * vU_[41] * vU_[70] + 0.03239943 + vU_[31] - vU_[62] * vU_[9] + vU_[20] * vU_[70] - vU_[37];
    vU_[54] = vU_[2] * vU_[54] + vU_[69] * vU_[9];
    vU_[41] = vU_[50] * vU_[2] + vU_[54] * vU_[69];
    vU_[20] = 0.018249203 + vU_[37] + vU_[41];
    vU_[70] = vU_[64] / vU_[20];
    vU_[31] = cos(x_in[2]);
    vU_[38] = -0.316 * vU_[31];
    vU_[24] = -0.316 * vU_[1];
    vU_[49] = vU_[31] * vU_[38] + vU_[1] * vU_[24];
    vU_[54] = -0.0054876483 + vU_[54] * vU_[76] + vU_[50] * vU_[69];
    vU_[50] = vU_[15] / vU_[20];
    vU_[78] = vU_[78] + vU_[77];
    vU_[60] = vU_[60] + vU_[74] - vU_[75];
    vU_[68] = vU_[61] + vU_[68] - vU_[75];
    vU_[59] = vU_[59] + vU_[44];
    vU_[44] = -0.126729164208 + (vU_[2] * vU_[78] + vU_[69] * vU_[60]) * vU_[76] + (vU_[2] * vU_[68] + vU_[69] * vU_[59]) * vU_[69];
    vU_[61] = vU_[44] / vU_[20];
    vU_[59] = (vU_[75] - vU_[15] * vU_[70]) * vU_[49] + -0.008248334 + -1 * 2. * vU_[26] * vU_[76] + -1 * 2. * vU_[79] * vU_[69] + vU_[69] * vU_[79] + vU_[2] * vU_[46] - vU_[54] * vU_[50] - ((vU_[69] * vU_[78] + vU_[76] * vU_[60]) * vU_[76] + (vU_[69] * vU_[68] + vU_[76] * vU_[59]) * vU_[69] + vU_[75] - vU_[54] * vU_[61]) * vU_[49] - vU_[49] * (-1 * 2. * vU_[73] * vU_[76] + -1 * 2. * vU_[67] * vU_[69] + vU_[69] * vU_[67] + vU_[2] * (0 - vU_[73]) - vU_[44] * vU_[70]) * vU_[49];
    vU_[11] = vU_[2] * vU_[11] + vU_[69] * vU_[63];
    vU_[58] = vU_[58] - vU_[53];
    vU_[35] = vU_[35] - vU_[53];
    vU_[35] = 0.05287838 + vU_[37] - vU_[15] * vU_[50] - 2. * (-0.214708623208 + -1 * (vU_[51] + vU_[43]) * vU_[76] + -1 * (vU_[45] + vU_[63]) * vU_[69] + vU_[11] - vU_[15] * vU_[61]) * vU_[49] - (-0 - vU_[49] * (3.228604 + vU_[58] + vU_[35] + vU_[53] - (vU_[2] * vU_[71] + vU_[69] * vU_[58]) * vU_[69] - (vU_[2] * vU_[35] + vU_[69] * vU_[71]) * vU_[2] - vU_[44] * vU_[61])) * vU_[49];
    vU_[58] = vU_[1] * vU_[59] + vU_[31] * vU_[35];
    vU_[61] = 0 - vU_[1];
    vU_[11] = 2. * (0.214708623208 - vU_[11] - vU_[54] * vU_[70]) * vU_[49] + 0.056494925 + vU_[9] + vU_[56] + vU_[37] - vU_[41] - vU_[54] * vU_[54] / vU_[20] + vU_[49] * (3.228604 + vU_[53] - vU_[64] * vU_[70]) * vU_[49];
    vU_[59] = vU_[1] * vU_[11] + vU_[31] * vU_[59];
    vU_[49] = 0.010261103 + vU_[58] * vU_[61] + vU_[59] * vU_[31];
    vU_[59] = vU_[59] * vU_[1] + vU_[58] * vU_[31];
    vU_[58] = 0.026534991 + vU_[59];
    vU_[70] = 0.0007689361 / vU_[58];
    vU_[41] = -0.003983359 - vU_[49] * vU_[70];
    vU_[9] = 0 - cos(x_in[1]);
    vU_[41] = 0.0092131635 + (vU_[0] * vU_[41] + vU_[9] * (0.028124284 - 0.0007689361 * vU_[70])) * vU_[9] + (vU_[0] * (0.008503512 + vU_[35] + vU_[11] - vU_[59] - vU_[49] * vU_[49] / vU_[58]) + vU_[9] * vU_[41]) * vU_[0];
    jac[7] = 1 / vU_[41];
    vU_[70] = vU_[9] * jac[7];
    vU_[59] = vU_[0] * jac[7];
    jac[8] = (0 - 0.0007689361 * vU_[70] - vU_[49] * vU_[59]) / vU_[58];
    vU_[70] = -1 * vU_[70];
    vU_[11] = vU_[31] * jac[8] + vU_[61] * vU_[59];
    vU_[35] = vU_[1] * jac[8] + vU_[31] * vU_[59];
    vU_[56] = vU_[24] * jac[8] + vU_[38] * vU_[59];
    vU_[37] = 0.316 * vU_[31];
    vU_[53] = -0.316 * vU_[1];
    vU_[59] = vU_[37] * jac[8] + vU_[53] * vU_[59];
    jac[9] = (0 - vU_[20] * vU_[70] - vU_[15] * vU_[11] - vU_[54] * vU_[35] - vU_[64] * vU_[56] - vU_[44] * vU_[59]) / vU_[20];
    vU_[50] = -1 * vU_[11];
    vU_[70] = vU_[70] + jac[9];
    vU_[51] = vU_[69] * vU_[70] + vU_[76] * vU_[35];
    vU_[35] = vU_[2] * vU_[70] + vU_[69] * vU_[35];
    vU_[70] = -0.0825 * vU_[70] + -1 * vU_[56];
    vU_[56] = 0 - vU_[2];
    vU_[45] = -0.0825 * vU_[69];
    vU_[71] = vU_[56] * vU_[59] + vU_[45] * vU_[11];
    vU_[59] = vU_[69] * vU_[59] + vU_[3] * vU_[11];
    jac[10] = (0 - vU_[28] * vU_[50] - vU_[62] * vU_[51] - vU_[23] * vU_[35] - vU_[65] * vU_[70] - vU_[72] * vU_[71] - vU_[66] * vU_[59]) / vU_[28];
    vU_[50] = vU_[50] + jac[10];
    vU_[11] = vU_[48] * vU_[50] + vU_[6] * vU_[35];
    vU_[63] = vU_[6] * vU_[50] + vU_[47] * vU_[35];
    vU_[71] = -0.0825 * vU_[50] + vU_[71];
    vU_[43] = -0.0825 * vU_[47];
    vU_[68] = 0 - vU_[47];
    vU_[60] = 0 - vU_[5];
    vU_[78] = vU_[55] * vU_[50] + vU_[43] * vU_[51] + vU_[30] * vU_[35] + vU_[68] * vU_[70] + vU_[60] * vU_[59];
    vU_[46] = -0.384 * vU_[47];
    vU_[26] = -0.384 * vU_[5];
    vU_[5] = 0 - vU_[5];
    vU_[50] = vU_[46] * vU_[50] + vU_[57] * vU_[51] + vU_[26] * vU_[35] + vU_[5] * vU_[70] + vU_[47] * vU_[59];
    jac[11] = (0 - vU_[39] * vU_[51] - 0.002164052 * vU_[11] - vU_[8] * vU_[63] - vU_[17] * vU_[71] - vU_[18] * vU_[78] - vU_[10] * vU_[50]) / vU_[39];
    vU_[11] = -1 * vU_[11];
    vU_[51] = vU_[51] + jac[11];
    vU_[59] = vU_[36] * vU_[51] + vU_[33] * vU_[63];
    vU_[51] = vU_[32] * vU_[51] + vU_[36] * vU_[63];
    vU_[78] = -1 * vU_[78];
    vU_[63] = vU_[32] * vU_[71] + vU_[36] * vU_[50];
    jac[12] = (0 - vU_[29] * vU_[11] - vU_[40] * vU_[59] - vU_[16] * vU_[51] - vU_[22] * vU_[78] - vU_[19] * (vU_[36] * vU_[71] + vU_[33] * vU_[50]) - vU_[21] * vU_[63]) / vU_[29];
    vU_[11] = vU_[11] + jac[12];
    vU_[50] = 0 - vU_[12];
    vU_[71] = -0.088 * vU_[7];
    jac[13] = (0 - 0.0049096523 * -1 * vU_[59] - -0.0005483591 * (vU_[7] * vU_[11] + vU_[13] * vU_[51]) - -0.0016724827 * (vU_[12] * vU_[11] + vU_[7] * vU_[51]) - 0.007735484874 * (vU_[7] * vU_[78] + vU_[50] * vU_[63] + vU_[71] * vU_[59]) - 0.003127439544 * (vU_[12] * vU_[78] + vU_[7] * vU_[63] + vU_[14] * vU_[59])) / 0.0049096523;
    jac[21] = (0 - vU_[9] * 0.0007689361 / vU_[58] - vU_[0] * vU_[49] / vU_[58]) / vU_[41];
    vU_[11] = vU_[9] * jac[21];
    vU_[63] = vU_[0] * jac[21];
    jac[22] = (1 - 0.0007689361 * vU_[11] - vU_[49] * vU_[63]) / vU_[58];
    vU_[11] = -1 * vU_[11];
    vU_[78] = vU_[31] * jac[22] + vU_[61] * vU_[63];
    vU_[51] = vU_[1] * jac[22] + vU_[31] * vU_[63];
    vU_[59] = vU_[24] * jac[22] + vU_[38] * vU_[63];
    vU_[63] = vU_[37] * jac[22] + vU_[53] * vU_[63];
    jac[23] = (0 - vU_[20] * vU_[11] - vU_[15] * vU_[78] - vU_[54] * vU_[51] - vU_[64] * vU_[59] - vU_[44] * vU_[63]) / vU_[20];
    vU_[70] = -1 * vU_[78];
    vU_[11] = vU_[11] + jac[23];
    vU_[35] = vU_[69] * vU_[11] + vU_[76] * vU_[51];
    vU_[51] = vU_[2] * vU_[11] + vU_[69] * vU_[51];
    vU_[11] = -0.0825 * vU_[11] + -1 * vU_[59];
    vU_[59] = vU_[56] * vU_[63] + vU_[45] * vU_[78];
    vU_[63] = vU_[69] * vU_[63] + vU_[3] * vU_[78];
    jac[24] = (0 - vU_[28] * vU_[70] - vU_[62] * vU_[35] - vU_[23] * vU_[51] - vU_[65] * vU_[11] - vU_[72] * vU_[59] - vU_[66] * vU_[63]) / vU_[28];
    vU_[70] = vU_[70] + jac[24];
    vU_[78] = vU_[48] * vU_[70] + vU_[6] * vU_[51];
    vU_[79] = vU_[6] * vU_[70] + vU_[47] * vU_[51];
    vU_[59] = -0.0825 * vU_[70] + vU_[59];
    vU_[75] = vU_[55] * vU_[70] + vU_[43] * vU_[35] + vU_[30] * vU_[51] + vU_[68] * vU_[11] + vU_[60] * vU_[63];
    vU_[70] = vU_[46] * vU_[70] + vU_[57] * vU_[35] + vU_[26] * vU_[51] + vU_[5] * vU_[11] + vU_[47] * vU_[63];
    jac[25] = (0 - vU_[39] * vU_[35] - 0.002164052 * vU_[78] - vU_[8] * vU_[79] - vU_[17] * vU_[59] - vU_[18] * vU_[75] - vU_[10] * vU_[70]) / vU_[39];
    vU_[78] = -1 * vU_[78];
    vU_[35] = vU_[35] + jac[25];
    vU_[63] = vU_[36] * vU_[35] + vU_[33] * vU_[79];
    vU_[35] = vU_[32] * vU_[35] + vU_[36] * vU_[79];
    vU_[75] = -1 * vU_[75];
    vU_[79] = vU_[32] * vU_[59] + vU_[36] * vU_[70];
    jac[26] = (0 - vU_[29] * vU_[78] - vU_[40] * vU_[63] - vU_[16] * vU_[35] - vU_[22] * vU_[75] - vU_[19] * (vU_[36] * vU_[59] + vU_[33] * vU_[70]) - vU_[21] * vU_[79]) / vU_[29];
    vU_[78] = vU_[78] + jac[26];
    jac[27] = (0 - 0.0049096523 * -1 * vU_[63] - -0.0005483591 * (vU_[7] * vU_[78] + vU_[13] * vU_[35]) - -0.0016724827 * (vU_[12] * vU_[78] + vU_[7] * vU_[35]) - 0.007735484874 * (vU_[7] * vU_[75] + vU_[50] * vU_[79] + vU_[71] * vU_[63]) - 0.003127439544 * (vU_[12] * vU_[75] + vU_[7] * vU_[79] + vU_[14] * vU_[63])) / 0.0049096523;
    vU_[78] = vU_[15] / vU_[20];
    vU_[79] = vU_[54] / vU_[20];
    vU_[75] = vU_[64] / vU_[20];
    vU_[35] = vU_[44] / vU_[20];
    vU_[63] = 0 - vU_[31] * vU_[78] - vU_[1] * vU_[79] - vU_[24] * vU_[75] - vU_[37] * vU_[35];
    jac[35] = (0 - vU_[9] * (-1 * vU_[20] / vU_[20] + (0.0007689361 * vU_[63]) / vU_[58]) - vU_[0] * (vU_[61] * vU_[78] + vU_[31] * vU_[79] + vU_[38] * vU_[75] + vU_[53] * vU_[35] + (vU_[49] * vU_[63]) / vU_[58])) / vU_[41];
    vU_[35] = vU_[9] * jac[35];
    vU_[75] = vU_[0] * jac[35];
    jac[36] = (vU_[63] - 0.0007689361 * vU_[35] - vU_[49] * vU_[75]) / vU_[58];
    vU_[35] = -1 * vU_[35];
    vU_[63] = vU_[31] * jac[36] + vU_[61] * vU_[75];
    vU_[79] = vU_[1] * jac[36] + vU_[31] * vU_[75];
    vU_[78] = vU_[24] * jac[36] + vU_[38] * vU_[75];
    vU_[75] = vU_[37] * jac[36] + vU_[53] * vU_[75];
    jac[37] = (1 - vU_[20] * vU_[35] - vU_[15] * vU_[63] - vU_[54] * vU_[79] - vU_[64] * vU_[78] - vU_[44] * vU_[75]) / vU_[20];
    vU_[70] = -1 * vU_[63];
    vU_[35] = vU_[35] + jac[37];
    vU_[59] = vU_[69] * vU_[35] + vU_[76] * vU_[79];
    vU_[79] = vU_[2] * vU_[35] + vU_[69] * vU_[79];
    vU_[35] = -0.0825 * vU_[35] + -1 * vU_[78];
    vU_[78] = vU_[56] * vU_[75] + vU_[45] * vU_[63];
    vU_[75] = vU_[69] * vU_[75] + vU_[3] * vU_[63];
    jac[38] = (0 - vU_[28] * vU_[70] - vU_[62] * vU_[59] - vU_[23] * vU_[79] - vU_[65] * vU_[35] - vU_[72] * vU_[78] - vU_[66] * vU_[75]) / vU_[28];
    vU_[70] = vU_[70] + jac[38];
    vU_[63] = vU_[48] * vU_[70] + vU_[6] * vU_[79];
    vU_[11] = vU_[6] * vU_[70] + vU_[47] * vU_[79];
    vU_[78] = -0.0825 * vU_[70] + vU_[78];
    vU_[51] = vU_[55] * vU_[70] + vU_[43] * vU_[59] + vU_[30] * vU_[79] + vU_[68] * vU_[35] + vU_[60] * vU_[75];
    vU_[70] = vU_[46] * vU_[70] + vU_[57] * vU_[59] + vU_[26] * vU_[79] + vU_[5] * vU_[35] + vU_[47] * vU_[75];
    jac[39] = (0 - vU_[39] * vU_[59] - 0.002164052 * vU_[63] - vU_[8] * vU_[11] - vU_[17] * vU_[78] - vU_[18] * vU_[51] - vU_[10] * vU_[70]) / vU_[39];
    vU_[63] = -1 * vU_[63];
    vU_[59] = vU_[59] + jac[39];
    vU_[75] = vU_[36] * vU_[59] + vU_[33] * vU_[11];
    vU_[59] = vU_[32] * vU_[59] + vU_[36] * vU_[11];
    vU_[51] = -1 * vU_[51];
    vU_[11] = vU_[32] * vU_[78] + vU_[36] * vU_[70];
    jac[40] = (0 - vU_[29] * vU_[63] - vU_[40] * vU_[75] - vU_[16] * vU_[59] - vU_[22] * vU_[51] - vU_[19] * (vU_[36] * vU_[78] + vU_[33] * vU_[70]) - vU_[21] * vU_[11]) / vU_[29];
    vU_[63] = vU_[63] + jac[40];
    jac[41] = (0 - 0.0049096523 * -1 * vU_[75] - -0.0005483591 * (vU_[7] * vU_[63] + vU_[13] * vU_[59]) - -0.0016724827 * (vU_[12] * vU_[63] + vU_[7] * vU_[59]) - 0.007735484874 * (vU_[7] * vU_[51] + vU_[50] * vU_[11] + vU_[71] * vU_[75]) - 0.003127439544 * (vU_[12] * vU_[51] + vU_[7] * vU_[11] + vU_[14] * vU_[75])) / 0.0049096523;
    vU_[63] = vU_[62] / vU_[28];
    vU_[11] = vU_[23] / vU_[28];
    vU_[51] = vU_[65] / vU_[28];
    vU_[59] = vU_[69] * vU_[63] + vU_[2] * vU_[11] + -0.0825 * vU_[51];
    vU_[75] = 0 - vU_[59];
    vU_[70] = vU_[72] / vU_[28];
    vU_[78] = vU_[66] / vU_[28];
    vU_[35] = vU_[45] * vU_[70] + vU_[3] * vU_[78] + -1 * vU_[28] / vU_[28] + (vU_[15] * vU_[75]) / vU_[20];
    vU_[11] = vU_[76] * vU_[63] + vU_[69] * vU_[11] + (vU_[54] * vU_[75]) / vU_[20];
    vU_[51] = -1 * vU_[51] + (vU_[64] * vU_[75]) / vU_[20];
    vU_[78] = vU_[56] * vU_[70] + vU_[69] * vU_[78] + (vU_[44] * vU_[75]) / vU_[20];
    vU_[70] = 0 - vU_[31] * vU_[35] - vU_[1] * vU_[11] - vU_[24] * vU_[51] - vU_[37] * vU_[78];
    jac[49] = (0 - vU_[9] * (-1 * (vU_[59] + (vU_[20] * vU_[75]) / vU_[20]) + (0.0007689361 * vU_[70]) / vU_[58]) - vU_[0] * (vU_[61] * vU_[35] + vU_[31] * vU_[11] + vU_[38] * vU_[51] + vU_[53] * vU_[78] + (vU_[49] * vU_[70]) / vU_[58])) / vU_[41];
    vU_[78] = vU_[9] * jac[49];
    vU_[51] = vU_[0] * jac[49];
    jac[50] = (vU_[70] - 0.0007689361 * vU_[78] - vU_[49] * vU_[51]) / vU_[58];
    vU_[78] = -1 * vU_[78];
    vU_[70] = vU_[31] * jac[50] + vU_[61] * vU_[51];
    vU_[11] = vU_[1] * jac[50] + vU_[31] * vU_[51];
    vU_[35] = vU_[24] * jac[50] + vU_[38] * vU_[51];
    vU_[51] = vU_[37] * jac[50] + vU_[53] * vU_[51];
    jac[51] = (vU_[75] - vU_[20] * vU_[78] - vU_[15] * vU_[70] - vU_[54] * vU_[11] - vU_[64] * vU_[35] - vU_[44] * vU_[51]) / vU_[20];
    vU_[75] = -1 * vU_[70];
    vU_[78] = vU_[78] + jac[51];
    vU_[59] = vU_[69] * vU_[78] + vU_[76] * vU_[11];
    vU_[11] = vU_[2] * vU_[78] + vU_[69] * vU_[11];
    vU_[78] = -0.0825 * vU_[78] + -1 * vU_[35];
    vU_[35] = vU_[56] * vU_[51] + vU_[45] * vU_[70];
    vU_[51] = vU_[69] * vU_[51] + vU_[3] * vU_[70];
    jac[52] = (1 - vU_[28] * vU_[75] - vU_[62] * vU_[59] - vU_[23] * vU_[11] - vU_[65] * vU_[78] - vU_[72] * vU_[35] - vU_[66] * vU_[51]) / vU_[28];
    vU_[75] = vU_[75] + jac[52];
    vU_[70] = vU_[48] * vU_[75] + vU_[6] * vU_[11];
    vU_[63] = vU_[6] * vU_[75] + vU_[47] * vU_[11];
    vU_[35] = -0.0825 * vU_[75] + vU_[35];
    vU_[79] = vU_[55] * vU_[75] + vU_[43] * vU_[59] + vU_[30] * vU_[11] + vU_[68] * vU_[78] + vU_[60] * vU_[51];
    vU_[75] = vU_[46] * vU_[75] + vU_[57] * vU_[59] + vU_[26] * vU_[11] + vU_[5] * vU_[78] + vU_[47] * vU_[51];
    jac[53] = (0 - vU_[39] * vU_[59] - 0.002164052 * vU_[70] - vU_[8] * vU_[63] - vU_[17] * vU_[35] - vU_[18] * vU_[79] - vU_[10] * vU_[75]) / vU_[39];
    vU_[70] = -1 * vU_[70];
    vU_[59] = vU_[59] + jac[53];
    vU_[51] = vU_[36] * vU_[59] + vU_[33] * vU_[63];
    vU_[59] = vU_[32] * vU_[59] + vU_[36] * vU_[63];
    vU_[79] = -1 * vU_[79];
    vU_[63] = vU_[32] * vU_[35] + vU_[36] * vU_[75];
    jac[54] = (0 - vU_[29] * vU_[70] - vU_[40] * vU_[51] - vU_[16] * vU_[59] - vU_[22] * vU_[79] - vU_[19] * (vU_[36] * vU_[35] + vU_[33] * vU_[75]) - vU_[21] * vU_[63]) / vU_[29];
    vU_[70] = vU_[70] + jac[54];
    jac[55] = (0 - 0.0049096523 * -1 * vU_[51] - -0.0005483591 * (vU_[7] * vU_[70] + vU_[13] * vU_[59]) - -0.0016724827 * (vU_[12] * vU_[70] + vU_[7] * vU_[59]) - 0.007735484874 * (vU_[7] * vU_[79] + vU_[50] * vU_[63] + vU_[71] * vU_[51]) - 0.003127439544 * (vU_[12] * vU_[79] + vU_[7] * vU_[63] + vU_[14] * vU_[51])) / 0.0049096523;
    vU_[70] = vU_[18] / vU_[39];
    vU_[63] = vU_[10] / vU_[39];
    vU_[79] = 0.002164052 / vU_[39];
    vU_[59] = vU_[8] / vU_[39];
    vU_[51] = vU_[17] / vU_[39];
    vU_[75] = vU_[48] * vU_[79] + vU_[6] * vU_[59] + -0.0825 * vU_[51] + vU_[55] * vU_[70] + vU_[46] * vU_[63];
    vU_[35] = 0 - vU_[75];
    vU_[78] = vU_[39] / vU_[39] + vU_[43] * vU_[70] + vU_[57] * vU_[63] + (vU_[62] * vU_[35]) / vU_[28];
    vU_[59] = vU_[6] * vU_[79] + vU_[47] * vU_[59] + vU_[30] * vU_[70] + vU_[26] * vU_[63] + (vU_[23] * vU_[35]) / vU_[28];
    vU_[79] = vU_[68] * vU_[70] + vU_[5] * vU_[63] + (vU_[65] * vU_[35]) / vU_[28];
    vU_[11] = vU_[69] * vU_[78] + vU_[2] * vU_[59] + -0.0825 * vU_[79];
    vU_[73] = 0 - vU_[11];
    vU_[51] = vU_[51] + (vU_[72] * vU_[35]) / vU_[28];
    vU_[63] = vU_[60] * vU_[70] + vU_[47] * vU_[63] + (vU_[66] * vU_[35]) / vU_[28];
    vU_[75] = vU_[45] * vU_[51] + vU_[3] * vU_[63] + -1 * (vU_[75] + (vU_[28] * vU_[35]) / vU_[28]) + (vU_[15] * vU_[73]) / vU_[20];
    vU_[59] = vU_[76] * vU_[78] + vU_[69] * vU_[59] + (vU_[54] * vU_[73]) / vU_[20];
    vU_[79] = -1 * vU_[79] + (vU_[64] * vU_[73]) / vU_[20];
    vU_[63] = vU_[56] * vU_[51] + vU_[69] * vU_[63] + (vU_[44] * vU_[73]) / vU_[20];
    vU_[51] = 0 - vU_[31] * vU_[75] - vU_[1] * vU_[59] - vU_[24] * vU_[79] - vU_[37] * vU_[63];
    jac[63] = (0 - vU_[9] * (-1 * (vU_[11] + (vU_[20] * vU_[73]) / vU_[20]) + (0.0007689361 * vU_[51]) / vU_[58]) - vU_[0] * (vU_[61] * vU_[75] + vU_[31] * vU_[59] + vU_[38] * vU_[79] + vU_[53] * vU_[63] + (vU_[49] * vU_[51]) / vU_[58])) / vU_[41];
    vU_[63] = vU_[9] * jac[63];
    vU_[79] = vU_[0] * jac[63];
    jac[64] = (vU_[51] - 0.0007689361 * vU_[63] - vU_[49] * vU_[79]) / vU_[58];
    vU_[63] = -1 * vU_[63];
    vU_[51] = vU_[31] * jac[64] + vU_[61] * vU_[79];
    vU_[59] = vU_[1] * jac[64] + vU_[31] * vU_[79];
    vU_[75] = vU_[24] * jac[64] + vU_[38] * vU_[79];
    vU_[79] = vU_[37] * jac[64] + vU_[53] * vU_[79];
    jac[65] = (vU_[73] - vU_[20] * vU_[63] - vU_[15] * vU_[51] - vU_[54] * vU_[59] - vU_[64] * vU_[75] - vU_[44] * vU_[79]) / vU_[20];
    vU_[73] = -1 * vU_[51];
    vU_[63] = vU_[63] + jac[65];
    vU_[11] = vU_[69] * vU_[63] + vU_[76] * vU_[59];
    vU_[59] = vU_[2] * vU_[63] + vU_[69] * vU_[59];
    vU_[63] = -0.0825 * vU_[63] + -1 * vU_[75];
    vU_[75] = vU_[56] * vU_[79] + vU_[45] * vU_[51];
    vU_[79] = vU_[69] * vU_[79] + vU_[3] * vU_[51];
    jac[66] = (vU_[35] - vU_[28] * vU_[73] - vU_[62] * vU_[11] - vU_[23] * vU_[59] - vU_[65] * vU_[63] - vU_[72] * vU_[75] - vU_[66] * vU_[79]) / vU_[28];
    vU_[73] = vU_[73] + jac[66];
    vU_[35] = vU_[48] * vU_[73] + vU_[6] * vU_[59];
    vU_[51] = vU_[6] * vU_[73] + vU_[47] * vU_[59];
    vU_[75] = -0.0825 * vU_[73] + vU_[75];
    vU_[78] = vU_[55] * vU_[73] + vU_[43] * vU_[11] + vU_[30] * vU_[59] + vU_[68] * vU_[63] + vU_[60] * vU_[79];
    vU_[73] = vU_[46] * vU_[73] + vU_[57] * vU_[11] + vU_[26] * vU_[59] + vU_[5] * vU_[63] + vU_[47] * vU_[79];
    jac[67] = (1 - vU_[39] * vU_[11] - 0.002164052 * vU_[35] - vU_[8] * vU_[51] - vU_[17] * vU_[75] - vU_[18] * vU_[78] - vU_[10] * vU_[73]) / vU_[39];
    vU_[35] = -1 * vU_[35];
    vU_[11] = vU_[11] + jac[67];
    vU_[79] = vU_[36] * vU_[11] + vU_[33] * vU_[51];
    vU_[11] = vU_[32] * vU_[11] + vU_[36] * vU_[51];
    vU_[78] = -1 * vU_[78];
    vU_[51] = vU_[32] * vU_[75] + vU_[36] * vU_[73];
    jac[68] = (0 - vU_[29] * vU_[35] - vU_[40] * vU_[79] - vU_[16] * vU_[11] - vU_[22] * vU_[78] - vU_[19] * (vU_[36] * vU_[75] + vU_[33] * vU_[73]) - vU_[21] * vU_[51]) / vU_[29];
    vU_[35] = vU_[35] + jac[68];
    jac[69] = (0 - 0.0049096523 * -1 * vU_[79] - -0.0005483591 * (vU_[7] * vU_[35] + vU_[13] * vU_[11]) - -0.0016724827 * (vU_[12] * vU_[35] + vU_[7] * vU_[11]) - 0.007735484874 * (vU_[7] * vU_[78] + vU_[50] * vU_[51] + vU_[71] * vU_[79]) - 0.003127439544 * (vU_[12] * vU_[78] + vU_[7] * vU_[51] + vU_[14] * vU_[79])) / 0.0049096523;
    vU_[35] = vU_[40] / vU_[29];
    vU_[51] = vU_[16] / vU_[29];
    vU_[78] = vU_[36] * vU_[35] + vU_[32] * vU_[51];
    vU_[11] = 0 - vU_[78];
    vU_[79] = -1 * vU_[22] / vU_[29] + (vU_[18] * vU_[11]) / vU_[39];
    vU_[73] = vU_[19] / vU_[29];
    vU_[75] = vU_[21] / vU_[29];
    vU_[63] = vU_[33] * vU_[73] + vU_[36] * vU_[75] + (vU_[10] * vU_[11]) / vU_[39];
    vU_[59] = -1 * vU_[29] / vU_[29] + (0.002164052 * vU_[11]) / vU_[39];
    vU_[51] = vU_[33] * vU_[35] + vU_[36] * vU_[51] + (vU_[8] * vU_[11]) / vU_[39];
    vU_[75] = vU_[36] * vU_[73] + vU_[32] * vU_[75] + (vU_[17] * vU_[11]) / vU_[39];
    vU_[73] = vU_[48] * vU_[59] + vU_[6] * vU_[51] + -0.0825 * vU_[75] + vU_[55] * vU_[79] + vU_[46] * vU_[63];
    vU_[35] = 0 - vU_[73];
    vU_[78] = (vU_[39] * vU_[11]) / vU_[39] + vU_[78] + vU_[43] * vU_[79] + vU_[57] * vU_[63] + (vU_[62] * vU_[35]) / vU_[28];
    vU_[51] = vU_[6] * vU_[59] + vU_[47] * vU_[51] + vU_[30] * vU_[79] + vU_[26] * vU_[63] + (vU_[23] * vU_[35]) / vU_[28];
    vU_[59] = vU_[68] * vU_[79] + vU_[5] * vU_[63] + (vU_[65] * vU_[35]) / vU_[28];
    vU_[70] = vU_[69] * vU_[78] + vU_[2] * vU_[51] + -0.0825 * vU_[59];
    vU_[67] = 0 - vU_[70];
    vU_[75] = vU_[75] + (vU_[72] * vU_[35]) / vU_[28];
    vU_[63] = vU_[60] * vU_[79] + vU_[47] * vU_[63] + (vU_[66] * vU_[35]) / vU_[28];
    vU_[73] = vU_[45] * vU_[75] + vU_[3] * vU_[63] + -1 * (vU_[73] + (vU_[28] * vU_[35]) / vU_[28]) + (vU_[15] * vU_[67]) / vU_[20];
    vU_[51] = vU_[76] * vU_[78] + vU_[69] * vU_[51] + (vU_[54] * vU_[67]) / vU_[20];
    vU_[59] = -1 * vU_[59] + (vU_[64] * vU_[67]) / vU_[20];
    vU_[63] = vU_[56] * vU_[75] + vU_[69] * vU_[63] + (vU_[44] * vU_[67]) / vU_[20];
    vU_[75] = 0 - vU_[31] * vU_[73] - vU_[1] * vU_[51] - vU_[24] * vU_[59] - vU_[37] * vU_[63];
    jac[77] = (0 - vU_[9] * (-1 * (vU_[70] + (vU_[20] * vU_[67]) / vU_[20]) + (0.0007689361 * vU_[75]) / vU_[58]) - vU_[0] * (vU_[61] * vU_[73] + vU_[31] * vU_[51] + vU_[38] * vU_[59] + vU_[53] * vU_[63] + (vU_[49] * vU_[75]) / vU_[58])) / vU_[41];
    vU_[63] = vU_[9] * jac[77];
    vU_[59] = vU_[0] * jac[77];
    jac[78] = (vU_[75] - 0.0007689361 * vU_[63] - vU_[49] * vU_[59]) / vU_[58];
    vU_[63] = -1 * vU_[63];
    vU_[75] = vU_[31] * jac[78] + vU_[61] * vU_[59];
    vU_[51] = vU_[1] * jac[78] + vU_[31] * vU_[59];
    vU_[73] = vU_[24] * jac[78] + vU_[38] * vU_[59];
    vU_[59] = vU_[37] * jac[78] + vU_[53] * vU_[59];
    jac[79] = (vU_[67] - vU_[20] * vU_[63] - vU_[15] * vU_[75] - vU_[54] * vU_[51] - vU_[64] * vU_[73] - vU_[44] * vU_[59]) / vU_[20];
    vU_[67] = -1 * vU_[75];
    vU_[63] = vU_[63] + jac[79];
    vU_[70] = vU_[69] * vU_[63] + vU_[76] * vU_[51];
    vU_[51] = vU_[2] * vU_[63] + vU_[69] * vU_[51];
    vU_[63] = -0.0825 * vU_[63] + -1 * vU_[73];
    vU_[73] = vU_[56] * vU_[59] + vU_[45] * vU_[75];
    vU_[59] = vU_[69] * vU_[59] + vU_[3] * vU_[75];
    jac[80] = (vU_[35] - vU_[28] * vU_[67] - vU_[62] * vU_[70] - vU_[23] * vU_[51] - vU_[65] * vU_[63] - vU_[72] * vU_[73] - vU_[66] * vU_[59]) / vU_[28];
    vU_[67] = vU_[67] + jac[80];
    vU_[35] = vU_[48] * vU_[67] + vU_[6] * vU_[51];
    vU_[75] = vU_[6] * vU_[67] + vU_[47] * vU_[51];
    vU_[73] = -0.0825 * vU_[67] + vU_[73];
    vU_[78] = vU_[55] * vU_[67] + vU_[43] * vU_[70] + vU_[30] * vU_[51] + vU_[68] * vU_[63] + vU_[60] * vU_[59];
    vU_[67] = vU_[46] * vU_[67] + vU_[57] * vU_[70] + vU_[26] * vU_[51] + vU_[5] * vU_[63] + vU_[47] * vU_[59];
    jac[81] = (vU_[11] - vU_[39] * vU_[70] - 0.002164052 * vU_[35] - vU_[8] * vU_[75] - vU_[17] * vU_[73] - vU_[18] * vU_[78] - vU_[10] * vU_[67]) / vU_[39];
    vU_[35] = -1 * vU_[35];
    vU_[70] = vU_[70] + jac[81];
    vU_[11] = vU_[36] * vU_[70] + vU_[33] * vU_[75];
    vU_[70] = vU_[32] * vU_[70] + vU_[36] * vU_[75];
    vU_[78] = -1 * vU_[78];
    vU_[75] = vU_[32] * vU_[73] + vU_[36] * vU_[67];
    jac[82] = (1 - vU_[29] * vU_[35] - vU_[40] * vU_[11] - vU_[16] * vU_[70] - vU_[22] * vU_[78] - vU_[19] * (vU_[36] * vU_[73] + vU_[33] * vU_[67]) - vU_[21] * vU_[75]) / vU_[29];
    vU_[35] = vU_[35] + jac[82];
    jac[83] = (0 - 0.0049096523 * -1 * vU_[11] - -0.0005483591 * (vU_[7] * vU_[35] + vU_[13] * vU_[70]) - -0.0016724827 * (vU_[12] * vU_[35] + vU_[7] * vU_[70]) - 0.007735484874 * (vU_[7] * vU_[78] + vU_[50] * vU_[75] + vU_[71] * vU_[11]) - 0.003127439544 * (vU_[12] * vU_[78] + vU_[7] * vU_[75] + vU_[14] * vU_[11])) / 0.0049096523;
    vU_[35] = vU_[7] * -0.11169000704999 + vU_[12] * -0.340651964294905;
    vU_[75] = 0 - vU_[35];
    vU_[78] = vU_[71] * 1.57556674105007 + vU_[14] * 0.636998172762662 - 1 + (vU_[40] * vU_[75]) / vU_[29];
    vU_[70] = vU_[13] * -0.11169000704999 + vU_[7] * -0.340651964294905 + (vU_[16] * vU_[75]) / vU_[29];
    vU_[11] = vU_[36] * vU_[78] + vU_[32] * vU_[70];
    vU_[67] = 0 - vU_[11];
    vU_[73] = -1 * (vU_[7] * 1.57556674105007 + vU_[12] * 0.636998172762662 + (vU_[22] * vU_[75]) / vU_[29]) + (vU_[18] * vU_[67]) / vU_[39];
    vU_[59] = (vU_[19] * vU_[75]) / vU_[29];
    vU_[63] = vU_[50] * 1.57556674105007 + vU_[7] * 0.636998172762662 + (vU_[21] * vU_[75]) / vU_[29];
    vU_[51] = vU_[33] * vU_[59] + vU_[36] * vU_[63] + (vU_[10] * vU_[67]) / vU_[39];
    vU_[35] = -1 * (vU_[35] + (vU_[29] * vU_[75]) / vU_[29]) + (0.002164052 * vU_[67]) / vU_[39];
    vU_[70] = vU_[33] * vU_[78] + vU_[36] * vU_[70] + (vU_[8] * vU_[67]) / vU_[39];
    vU_[63] = vU_[36] * vU_[59] + vU_[32] * vU_[63] + (vU_[17] * vU_[67]) / vU_[39];
    vU_[59] = vU_[48] * vU_[35] + vU_[6] * vU_[70] + -0.0825 * vU_[63] + vU_[55] * vU_[73] + vU_[46] * vU_[51];
    vU_[78] = 0 - vU_[59];
    vU_[11] = (vU_[39] * vU_[67]) / vU_[39] + vU_[11] + vU_[43] * vU_[73] + vU_[57] * vU_[51] + (vU_[62] * vU_[78]) / vU_[28];
    vU_[70] = vU_[6] * vU_[35] + vU_[47] * vU_[70] + vU_[30] * vU_[73] + vU_[26] * vU_[51] + (vU_[23] * vU_[78]) / vU_[28];
    vU_[35] = vU_[68] * vU_[73] + vU_[5] * vU_[51] + (vU_[65] * vU_[78]) / vU_[28];
    vU_[79] = vU_[69] * vU_[11] + vU_[2] * vU_[70] + -0.0825 * vU_[35];
    vU_[74] = 0 - vU_[79];
    vU_[63] = vU_[63] + (vU_[72] * vU_[78]) / vU_[28];
    vU_[51] = vU_[60] * vU_[73] + vU_[47] * vU_[51] + (vU_[66] * vU_[78]) / vU_[28];
    vU_[59] = vU_[45] * vU_[63] + vU_[3] * vU_[51] + -1 * (vU_[59] + (vU_[28] * vU_[78]) / vU_[28]) + (vU_[15] * vU_[74]) / vU_[20];
    vU_[70] = vU_[76] * vU_[11] + vU_[69] * vU_[70] + (vU_[54] * vU_[74]) / vU_[20];
    vU_[35] = -1 * vU_[35] + (vU_[64] * vU_[74]) / vU_[20];
    vU_[51] = vU_[56] * vU_[63] + vU_[69] * vU_[51] + (vU_[44] * vU_[74]) / vU_[20];
    vU_[63] = 0 - vU_[31] * vU_[59] - vU_[1] * vU_[70] - vU_[24] * vU_[35] - vU_[37] * vU_[51];
    jac[91] = (0 - vU_[9] * (-1 * (vU_[79] + (vU_[20] * vU_[74]) / vU_[20]) + (0.0007689361 * vU_[63]) / vU_[58]) - vU_[0] * (vU_[61] * vU_[59] + vU_[31] * vU_[70] + vU_[38] * vU_[35] + vU_[53] * vU_[51] + (vU_[49] * vU_[63]) / vU_[58])) / vU_[41];
    vU_[9] = vU_[9] * jac[91];
    vU_[0] = vU_[0] * jac[91];
    jac[92] = (vU_[63] - 0.0007689361 * vU_[9] - vU_[49] * vU_[0]) / vU_[58];
    vU_[9] = -1 * vU_[9];
    vU_[61] = vU_[31] * jac[92] + vU_[61] * vU_[0];
    vU_[31] = vU_[1] * jac[92] + vU_[31] * vU_[0];
    vU_[24] = vU_[24] * jac[92] + vU_[38] * vU_[0];
    vU_[0] = vU_[37] * jac[92] + vU_[53] * vU_[0];
    jac[93] = (vU_[74] - vU_[20] * vU_[9] - vU_[15] * vU_[61] - vU_[54] * vU_[31] - vU_[64] * vU_[24] - vU_[44] * vU_[0]) / vU_[20];
    vU_[74] = -1 * vU_[61];
    vU_[9] = vU_[9] + jac[93];
    vU_[76] = vU_[69] * vU_[9] + vU_[76] * vU_[31];
    vU_[31] = vU_[2] * vU_[9] + vU_[69] * vU_[31];
    vU_[9] = -0.0825 * vU_[9] + -1 * vU_[24];
    vU_[45] = vU_[56] * vU_[0] + vU_[45] * vU_[61];
    vU_[0] = vU_[69] * vU_[0] + vU_[3] * vU_[61];
    jac[94] = (vU_[78] - vU_[28] * vU_[74] - vU_[62] * vU_[76] - vU_[23] * vU_[31] - vU_[65] * vU_[9] - vU_[72] * vU_[45] - vU_[66] * vU_[0]) / vU_[28];
    vU_[74] = vU_[74] + jac[94];
    vU_[48] = vU_[48] * vU_[74] + vU_[6] * vU_[31];
    vU_[6] = vU_[6] * vU_[74] + vU_[47] * vU_[31];
    vU_[45] = -0.0825 * vU_[74] + vU_[45];
    vU_[60] = vU_[55] * vU_[74] + vU_[43] * vU_[76] + vU_[30] * vU_[31] + vU_[68] * vU_[9] + vU_[60] * vU_[0];
    vU_[74] = vU_[46] * vU_[74] + vU_[57] * vU_[76] + vU_[26] * vU_[31] + vU_[5] * vU_[9] + vU_[47] * vU_[0];
    jac[95] = (vU_[67] - vU_[39] * vU_[76] - 0.002164052 * vU_[48] - vU_[8] * vU_[6] - vU_[17] * vU_[45] - vU_[18] * vU_[60] - vU_[10] * vU_[74]) / vU_[39];
    vU_[48] = -1 * vU_[48];
    vU_[76] = vU_[76] + jac[95];
    vU_[67] = vU_[36] * vU_[76] + vU_[33] * vU_[6];
    vU_[76] = vU_[32] * vU_[76] + vU_[36] * vU_[6];
    vU_[60] = -1 * vU_[60];
    vU_[32] = vU_[32] * vU_[45] + vU_[36] * vU_[74];
    jac[96] = (vU_[75] - vU_[29] * vU_[48] - vU_[40] * vU_[67] - vU_[16] * vU_[76] - vU_[22] * vU_[60] - vU_[19] * (vU_[36] * vU_[45] + vU_[33] * vU_[74]) - vU_[21] * vU_[32]) / vU_[29];
    vU_[48] = vU_[48] + jac[96];
    jac[97] = (1 - 0.0049096523 * -1 * vU_[67] - -0.0005483591 * (vU_[7] * vU_[48] + vU_[13] * vU_[76]) - -0.0016724827 * (vU_[12] * vU_[48] + vU_[7] * vU_[76]) - 0.007735484874 * (vU_[7] * vU_[60] + vU_[50] * vU_[32] + vU_[71] * vU_[67]) - 0.003127439544 * (vU_[12] * vU_[60] + vU_[7] * vU_[32] + vU_[14] * vU_[67])) / 0.0049096523;


    return dFdu_;
}

} // namespace Franka
} // namespace models
} // namespace ct

// clang-format on
